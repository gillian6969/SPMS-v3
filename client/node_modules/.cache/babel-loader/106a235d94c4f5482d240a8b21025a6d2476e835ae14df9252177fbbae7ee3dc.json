{"ast":null,"code":"import { createElementVNode as _createElementVNode, createTextVNode as _createTextVNode, createCommentVNode as _createCommentVNode, vModelText as _vModelText, withDirectives as _withDirectives, vModelRadio as _vModelRadio, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, vModelCheckbox as _vModelCheckbox, toDisplayString as _toDisplayString, normalizeClass as _normalizeClass } from \"vue\";\nconst _hoisted_1 = {\n  class: \"modal fade\",\n  id: \"exportGraphsModal\",\n  tabindex: \"-1\",\n  \"aria-labelledby\": \"exportGraphsModalLabel\",\n  \"aria-hidden\": \"true\"\n};\nconst _hoisted_2 = {\n  class: \"modal-dialog modal-lg\"\n};\nconst _hoisted_3 = {\n  class: \"modal-content\"\n};\nconst _hoisted_4 = {\n  class: \"modal-body\"\n};\nconst _hoisted_5 = {\n  class: \"row mb-4\"\n};\nconst _hoisted_6 = {\n  class: \"col-md-12\"\n};\nconst _hoisted_7 = {\n  class: \"card bg-light\"\n};\nconst _hoisted_8 = {\n  class: \"card-body\"\n};\nconst _hoisted_9 = {\n  class: \"mb-3\"\n};\nconst _hoisted_10 = {\n  class: \"row g-2\"\n};\nconst _hoisted_11 = {\n  class: \"col\"\n};\nconst _hoisted_12 = [\"max\"];\nconst _hoisted_13 = {\n  class: \"col\"\n};\nconst _hoisted_14 = [\"min\", \"max\"];\nconst _hoisted_15 = {\n  class: \"mb-3\"\n};\nconst _hoisted_16 = {\n  class: \"mb-3\"\n};\nconst _hoisted_17 = {\n  class: \"d-flex gap-3\"\n};\nconst _hoisted_18 = {\n  class: \"form-check\"\n};\nconst _hoisted_19 = {\n  class: \"form-check\"\n};\nconst _hoisted_20 = {\n  class: \"row g-3\"\n};\nconst _hoisted_21 = {\n  class: \"card-body\"\n};\nconst _hoisted_22 = {\n  class: \"form-check\"\n};\nconst _hoisted_23 = [\"id\", \"value\"];\nconst _hoisted_24 = [\"for\"];\nconst _hoisted_25 = {\n  class: \"text-muted small mb-0\"\n};\nconst _hoisted_26 = {\n  class: \"modal-footer\"\n};\nconst _hoisted_27 = [\"disabled\"];\nconst _hoisted_28 = {\n  key: 0\n};\nconst _hoisted_29 = {\n  key: 1\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"div\", _hoisted_3, [_cache[21] || (_cache[21] = _createElementVNode(\"div\", {\n    class: \"modal-header\"\n  }, [_createElementVNode(\"h5\", {\n    class: \"modal-title\",\n    id: \"exportGraphsModalLabel\"\n  }, [_createElementVNode(\"i\", {\n    class: \"fas fa-file-export me-2\"\n  }), _createTextVNode(\" Export Dashboard Graphs \")]), _createElementVNode(\"button\", {\n    type: \"button\",\n    class: \"btn-close\",\n    \"data-bs-dismiss\": \"modal\",\n    \"aria-label\": \"Close\"\n  })], -1 /* HOISTED */)), _createElementVNode(\"div\", _hoisted_4, [_createElementVNode(\"div\", _hoisted_5, [_createElementVNode(\"div\", _hoisted_6, [_createElementVNode(\"div\", _hoisted_7, [_createElementVNode(\"div\", _hoisted_8, [_cache[15] || (_cache[15] = _createElementVNode(\"h6\", {\n    class: \"mb-3\"\n  }, \"Export Options\", -1 /* HOISTED */)), _createCommentVNode(\" Date Range Selection \"), _createElementVNode(\"div\", _hoisted_9, [_cache[9] || (_cache[9] = _createElementVNode(\"label\", {\n    class: \"form-label\"\n  }, \"Date Range\", -1 /* HOISTED */)), _createElementVNode(\"div\", _hoisted_10, [_createElementVNode(\"div\", _hoisted_11, [_cache[7] || (_cache[7] = _createElementVNode(\"label\", {\n    class: \"form-label small text-muted\"\n  }, \"Start Date\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"input\", {\n    type: \"date\",\n    class: \"form-control form-control-sm\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $setup.startDate = $event),\n    max: $setup.today\n  }, null, 8 /* PROPS */, _hoisted_12), [[_vModelText, $setup.startDate]])]), _createElementVNode(\"div\", _hoisted_13, [_cache[8] || (_cache[8] = _createElementVNode(\"label\", {\n    class: \"form-label small text-muted\"\n  }, \"End Date\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"input\", {\n    type: \"date\",\n    class: \"form-control form-control-sm\",\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $setup.endDate = $event),\n    min: $setup.startDate,\n    max: $setup.today\n  }, null, 8 /* PROPS */, _hoisted_14), [[_vModelText, $setup.endDate]])])]), _cache[10] || (_cache[10] = _createElementVNode(\"div\", {\n    class: \"small text-muted mt-1\"\n  }, [_createElementVNode(\"i\", {\n    class: \"fas fa-info-circle me-1\"\n  }), _createTextVNode(\" Leave empty to use current dashboard date filters \")], -1 /* HOISTED */))]), _createCommentVNode(\" Document Options \"), _createElementVNode(\"div\", _hoisted_15, [_cache[11] || (_cache[11] = _createElementVNode(\"label\", {\n    class: \"form-label\"\n  }, \"Document Title\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    class: \"form-control\",\n    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $setup.documentTitle = $event),\n    placeholder: \"Dashboard Report\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $setup.documentTitle]])]), _createCommentVNode(\" Orientation Selection \"), _createElementVNode(\"div\", _hoisted_16, [_cache[14] || (_cache[14] = _createElementVNode(\"label\", {\n    class: \"form-label\"\n  }, \"Page Orientation\", -1 /* HOISTED */)), _createElementVNode(\"div\", _hoisted_17, [_createElementVNode(\"div\", _hoisted_18, [_withDirectives(_createElementVNode(\"input\", {\n    class: \"form-check-input\",\n    type: \"radio\",\n    name: \"orientation\",\n    id: \"orientationPortrait\",\n    value: \"portrait\",\n    \"onUpdate:modelValue\": _cache[3] || (_cache[3] = $event => $setup.orientation = $event)\n  }, null, 512 /* NEED_PATCH */), [[_vModelRadio, $setup.orientation]]), _cache[12] || (_cache[12] = _createElementVNode(\"label\", {\n    class: \"form-check-label\",\n    for: \"orientationPortrait\"\n  }, \" Portrait \", -1 /* HOISTED */))]), _createElementVNode(\"div\", _hoisted_19, [_withDirectives(_createElementVNode(\"input\", {\n    class: \"form-check-input\",\n    type: \"radio\",\n    name: \"orientation\",\n    id: \"orientationLandscape\",\n    value: \"landscape\",\n    \"onUpdate:modelValue\": _cache[4] || (_cache[4] = $event => $setup.orientation = $event)\n  }, null, 512 /* NEED_PATCH */), [[_vModelRadio, $setup.orientation]]), _cache[13] || (_cache[13] = _createElementVNode(\"label\", {\n    class: \"form-check-label\",\n    for: \"orientationLandscape\"\n  }, \" Landscape \", -1 /* HOISTED */))])])])])])])]), _cache[16] || (_cache[16] = _createElementVNode(\"h6\", {\n    class: \"mb-3\"\n  }, \"Select Graphs to Export\", -1 /* HOISTED */)), _createElementVNode(\"div\", _hoisted_20, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.availableGraphs, (graph, index) => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: index,\n      class: \"col-md-6\"\n    }, [_createElementVNode(\"div\", {\n      class: _normalizeClass([\"card graph-selection\", {\n        'selected': $setup.selectedGraphs.includes(graph.id)\n      }])\n    }, [_createElementVNode(\"div\", _hoisted_21, [_createElementVNode(\"div\", _hoisted_22, [_withDirectives(_createElementVNode(\"input\", {\n      class: \"form-check-input\",\n      type: \"checkbox\",\n      id: 'graph-' + graph.id,\n      value: graph.id,\n      \"onUpdate:modelValue\": _cache[5] || (_cache[5] = $event => $setup.selectedGraphs = $event)\n    }, null, 8 /* PROPS */, _hoisted_23), [[_vModelCheckbox, $setup.selectedGraphs]]), _createElementVNode(\"label\", {\n      class: \"form-check-label\",\n      for: 'graph-' + graph.id\n    }, _toDisplayString(graph.title), 9 /* TEXT, PROPS */, _hoisted_24)]), _createElementVNode(\"p\", _hoisted_25, _toDisplayString(graph.description), 1 /* TEXT */)])], 2 /* CLASS */)]);\n  }), 128 /* KEYED_FRAGMENT */))]), _cache[17] || (_cache[17] = _createElementVNode(\"div\", {\n    class: \"mt-4\"\n  }, [_createElementVNode(\"div\", {\n    class: \"alert alert-info d-flex align-items-center\",\n    role: \"alert\"\n  }, [_createElementVNode(\"i\", {\n    class: \"fas fa-info-circle me-2\"\n  }), _createElementVNode(\"div\", null, \" The exported PDF will include your currently applied dashboard filters. \")])], -1 /* HOISTED */))]), _createElementVNode(\"div\", _hoisted_26, [_cache[20] || (_cache[20] = _createElementVNode(\"button\", {\n    type: \"button\",\n    class: \"btn btn-secondary\",\n    \"data-bs-dismiss\": \"modal\"\n  }, \"Cancel\", -1 /* HOISTED */)), _createElementVNode(\"button\", {\n    type: \"button\",\n    class: \"btn btn-primary\",\n    onClick: _cache[6] || (_cache[6] = (...args) => $setup.exportToPDF && $setup.exportToPDF(...args)),\n    disabled: $setup.isExporting || $setup.selectedGraphs.length === 0\n  }, [$setup.isExporting ? (_openBlock(), _createElementBlock(\"span\", _hoisted_28, _cache[18] || (_cache[18] = [_createElementVNode(\"i\", {\n    class: \"fas fa-spinner fa-spin me-2\"\n  }, null, -1 /* HOISTED */), _createTextVNode(\" Generating PDF... \")]))) : (_openBlock(), _createElementBlock(\"span\", _hoisted_29, _cache[19] || (_cache[19] = [_createElementVNode(\"i\", {\n    class: \"fas fa-file-pdf me-2\"\n  }, null, -1 /* HOISTED */), _createTextVNode(\" Export to PDF \")])))], 8 /* PROPS */, _hoisted_27)])])])]);\n}","map":{"version":3,"names":["class","id","tabindex","key","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","_hoisted_3","_createTextVNode","type","_hoisted_4","_hoisted_5","_hoisted_6","_hoisted_7","_hoisted_8","_createCommentVNode","_hoisted_9","_hoisted_10","_hoisted_11","_cache","$event","$setup","startDate","max","today","_hoisted_12","_hoisted_13","endDate","min","_hoisted_14","_hoisted_15","documentTitle","placeholder","_hoisted_16","_hoisted_17","_hoisted_18","name","value","orientation","for","_hoisted_19","_hoisted_20","_Fragment","_renderList","availableGraphs","graph","index","_normalizeClass","selectedGraphs","includes","_hoisted_21","_hoisted_22","_hoisted_23","title","_hoisted_24","_hoisted_25","_toDisplayString","description","role","_hoisted_26","onClick","args","exportToPDF","disabled","isExporting","length","_hoisted_28","_hoisted_29","_hoisted_27"],"sources":["D:\\au_dev\\client\\src\\components\\ExportGraphsModal.vue"],"sourcesContent":["<template>\r\n  <div class=\"modal fade\" id=\"exportGraphsModal\" tabindex=\"-1\" aria-labelledby=\"exportGraphsModalLabel\" aria-hidden=\"true\">\r\n    <div class=\"modal-dialog modal-lg\">\r\n      <div class=\"modal-content\">\r\n        <div class=\"modal-header\">\r\n          <h5 class=\"modal-title\" id=\"exportGraphsModalLabel\">\r\n            <i class=\"fas fa-file-export me-2\"></i>\r\n            Export Dashboard Graphs\r\n          </h5>\r\n          <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\r\n        </div>\r\n        <div class=\"modal-body\">\r\n          <div class=\"row mb-4\">\r\n            <div class=\"col-md-12\">\r\n              <div class=\"card bg-light\">\r\n                <div class=\"card-body\">\r\n                  <h6 class=\"mb-3\">Export Options</h6>\r\n                  \r\n                  <!-- Date Range Selection -->\r\n                  <div class=\"mb-3\">\r\n                    <label class=\"form-label\">Date Range</label>\r\n                    <div class=\"row g-2\">\r\n                      <div class=\"col\">\r\n                        <label class=\"form-label small text-muted\">Start Date</label>\r\n                        <input \r\n                          type=\"date\" \r\n                          class=\"form-control form-control-sm\" \r\n                          v-model=\"startDate\"\r\n                          :max=\"today\"\r\n                        >\r\n                      </div>\r\n                      <div class=\"col\">\r\n                        <label class=\"form-label small text-muted\">End Date</label>\r\n                        <input \r\n                          type=\"date\" \r\n                          class=\"form-control form-control-sm\" \r\n                          v-model=\"endDate\"\r\n                          :min=\"startDate\"\r\n                          :max=\"today\"\r\n                        >\r\n                      </div>\r\n                    </div>\r\n                    <div class=\"small text-muted mt-1\">\r\n                      <i class=\"fas fa-info-circle me-1\"></i>\r\n                      Leave empty to use current dashboard date filters\r\n                    </div>\r\n                  </div>\r\n                  \r\n                  <!-- Document Options -->\r\n                  <div class=\"mb-3\">\r\n                    <label class=\"form-label\">Document Title</label>\r\n                    <input type=\"text\" class=\"form-control\" v-model=\"documentTitle\" placeholder=\"Dashboard Report\">\r\n                  </div>\r\n                  \r\n                  <!-- Orientation Selection -->\r\n                  <div class=\"mb-3\">\r\n                    <label class=\"form-label\">Page Orientation</label>\r\n                    <div class=\"d-flex gap-3\">\r\n                      <div class=\"form-check\">\r\n                        <input class=\"form-check-input\" type=\"radio\" name=\"orientation\" id=\"orientationPortrait\" value=\"portrait\" v-model=\"orientation\">\r\n                        <label class=\"form-check-label\" for=\"orientationPortrait\">\r\n                          Portrait\r\n                        </label>\r\n                      </div>\r\n                      <div class=\"form-check\">\r\n                        <input class=\"form-check-input\" type=\"radio\" name=\"orientation\" id=\"orientationLandscape\" value=\"landscape\" v-model=\"orientation\">\r\n                        <label class=\"form-check-label\" for=\"orientationLandscape\">\r\n                          Landscape\r\n                        </label>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          \r\n          <h6 class=\"mb-3\">Select Graphs to Export</h6>\r\n          \r\n          <div class=\"row g-3\">\r\n            <div v-for=\"(graph, index) in availableGraphs\" :key=\"index\" class=\"col-md-6\">\r\n              <div class=\"card graph-selection\" :class=\"{ 'selected': selectedGraphs.includes(graph.id) }\">\r\n                <div class=\"card-body\">\r\n                  <div class=\"form-check\">\r\n                    <input class=\"form-check-input\" type=\"checkbox\" :id=\"'graph-' + graph.id\" :value=\"graph.id\" v-model=\"selectedGraphs\">\r\n                    <label class=\"form-check-label\" :for=\"'graph-' + graph.id\">\r\n                      {{ graph.title }}\r\n                    </label>\r\n                  </div>\r\n                  <p class=\"text-muted small mb-0\">{{ graph.description }}</p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"mt-4\">\r\n            <div class=\"alert alert-info d-flex align-items-center\" role=\"alert\">\r\n              <i class=\"fas fa-info-circle me-2\"></i>\r\n              <div>\r\n                The exported PDF will include your currently applied dashboard filters.\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div class=\"modal-footer\">\r\n          <button type=\"button\" class=\"btn btn-secondary\" data-bs-dismiss=\"modal\">Cancel</button>\r\n          <button \r\n            type=\"button\" \r\n            class=\"btn btn-primary\" \r\n            @click=\"exportToPDF\" \r\n            :disabled=\"isExporting || selectedGraphs.length === 0\"\r\n          >\r\n            <span v-if=\"isExporting\">\r\n              <i class=\"fas fa-spinner fa-spin me-2\"></i>\r\n              Generating PDF...\r\n            </span>\r\n            <span v-else>\r\n              <i class=\"fas fa-file-pdf me-2\"></i>\r\n              Export to PDF\r\n            </span>\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { ref, computed, watch } from 'vue'\r\nimport { useStore } from 'vuex'\r\nimport moment from 'moment'\r\nimport jsPDF from 'jspdf'\r\nimport html2canvas from 'html2canvas'\r\n\r\nexport default {\r\n  name: 'ExportGraphsModal',\r\n  props: {\r\n    dashboardType: {\r\n      type: String,\r\n      required: true,\r\n      validator: (value) => {\r\n        return ['cithead', 'teacher', 'ssp', 'ssphead'].includes(value)\r\n      }\r\n    },\r\n    chartRefs: {\r\n      type: Object,\r\n      required: true\r\n    },\r\n    filterInfo: {\r\n      type: Object,\r\n      default: () => ({})\r\n    }\r\n  },\r\n  setup(props) {\r\n    const store = useStore()\r\n    const selectedGraphs = ref([])\r\n    const documentTitle = ref('Dashboard Report')\r\n    const startDate = ref('')\r\n    const endDate = ref('')\r\n    const orientation = ref('landscape')\r\n    const isExporting = ref(false)\r\n    \r\n    const today = computed(() => moment().format('YYYY-MM-DD'))\r\n    \r\n    // Define available graphs based on dashboard type\r\n    const availableGraphs = computed(() => {\r\n      const graphOptions = {\r\n        cithead: [\r\n          { id: 'performanceChart', title: 'Attendance Distribution', description: 'Status distribution of student attendance' },\r\n          { id: 'assessmentTypeChart', title: 'Assessment Type Performance', description: 'Average scores by assessment type' },\r\n          { id: 'performanceTrendChart', title: 'Performance Trends', description: 'Student performance across time periods' },\r\n          { id: 'sectionChart', title: 'Section Performance', description: 'Comparative performance across different sections' }\r\n        ],\r\n        teacher: [\r\n          { id: 'performanceChart', title: 'Attendance Distribution', description: 'Status distribution of student attendance' },\r\n          { id: 'assessmentTypeChart', title: 'Assessment Performance Analysis', description: 'Average scores by assessment type' },\r\n          { id: 'performanceTrendChart', title: 'Performance Trends', description: 'Class average scores across recent assessments' },\r\n          { id: 'assessmentTypePerformanceChart', title: 'Performance by Assessment Type', description: 'Student performance across different assessment types' }\r\n        ],\r\n        ssp: [\r\n          { id: 'surveyAverageChart', title: 'Survey Average Scores', description: 'Average scores across survey questions' },\r\n          { id: 'surveyDistributionChart', title: 'Survey Response Distribution', description: 'Distribution of student issues by priority level' }\r\n        ],\r\n        ssphead: [\r\n          { id: 'performanceChart', title: 'Performance Distribution', description: 'Distribution of student performance' },\r\n          { id: 'assessmentTypeChart', title: 'Assessment Type Distribution', description: 'Distribution of assessment types' },\r\n          { id: 'performanceTrendChart', title: 'Performance Trends', description: 'Performance trends over time' },\r\n          { id: 'assessmentTypePerformanceChart', title: 'Performance by Assessment Type', description: 'Performance across different assessment types' }\r\n        ]\r\n      }\r\n      \r\n      return graphOptions[props.dashboardType] || []\r\n    })\r\n    \r\n    // Reset selected graphs when dashboard type changes\r\n    watch(() => props.dashboardType, () => {\r\n      selectedGraphs.value = []\r\n    })\r\n    \r\n    // Helper function to create a header with filter information\r\n    const createHeaderContent = (doc, y) => {\r\n      const username = store.state.auth.user?.name || \r\n                     `${store.state.auth.user?.firstName || ''} ${store.state.auth.user?.lastName || ''}`.trim() || \r\n                     'User'\r\n      \r\n      // Dashboard type mapping\r\n      const dashboardTypes = {\r\n        cithead: 'CIT Head Dashboard',\r\n        teacher: 'Teacher Dashboard',\r\n        ssp: 'SSP Adviser Dashboard',\r\n        ssphead: 'SSP Head Dashboard'\r\n      }\r\n      \r\n      const dashboardName = dashboardTypes[props.dashboardType] || 'Dashboard'\r\n      \r\n      // Set document title\r\n      doc.setFontSize(16)\r\n      doc.setFont('helvetica', 'bold')\r\n      doc.text(documentTitle.value, 14, y)\r\n      y += 8\r\n      \r\n      // Add metadata\r\n      doc.setFontSize(10)\r\n      doc.setFont('helvetica', 'normal')\r\n      doc.text(`${dashboardName} - Generated by: ${username}`, 14, y)\r\n      y += 5\r\n      doc.text(`Date: ${moment().format('MMMM D, YYYY h:mm A')}`, 14, y)\r\n      y += 8\r\n      \r\n      // Add filter information\r\n      doc.setFontSize(10)\r\n      doc.setFont('helvetica', 'bold')\r\n      doc.text('Applied Filters:', 14, y)\r\n      y += 5\r\n      \r\n      doc.setFont('helvetica', 'normal')\r\n      \r\n      // Extract filter information\r\n      const filters = []\r\n      if (props.filterInfo.year) filters.push(`Year: ${props.filterInfo.year}`)\r\n      if (props.filterInfo.section) filters.push(`Section: ${props.filterInfo.section}`)\r\n      if (props.filterInfo.subject) filters.push(`Subject: ${props.filterInfo.subject}`)\r\n      \r\n      // Date range\r\n      const dateRange = []\r\n      if (startDate.value) dateRange.push(`From: ${moment(startDate.value).format('MMM D, YYYY')}`)\r\n      if (endDate.value) dateRange.push(`To: ${moment(endDate.value).format('MMM D, YYYY')}`)\r\n      \r\n      if (dateRange.length > 0) {\r\n        filters.push(`Date Range: ${dateRange.join(' - ')}`)\r\n      }\r\n      \r\n      if (filters.length === 0) {\r\n        doc.text('No filters applied', 14, y)\r\n      } else {\r\n        filters.forEach(filter => {\r\n          doc.text(`• ${filter}`, 14, y)\r\n          y += 5\r\n        })\r\n      }\r\n      \r\n      y += 5\r\n      \r\n      return y\r\n    }\r\n    \r\n    // Export selected graphs to PDF\r\n    const exportToPDF = async () => {\r\n      if (selectedGraphs.value.length === 0) return\r\n      \r\n      isExporting.value = true\r\n      \r\n      try {\r\n        // Create PDF document\r\n        const doc = new jsPDF({\r\n          orientation: orientation.value,\r\n          unit: 'mm',\r\n          format: 'a4'\r\n        })\r\n        \r\n        let y = 15\r\n        \r\n        // Add header and filter information\r\n        y = createHeaderContent(doc, y)\r\n        \r\n        // Set margin for charts\r\n        const margin = 14\r\n        const pageWidth = orientation.value === 'landscape' ? 297 : 210\r\n        const pageHeight = orientation.value === 'landscape' ? 210 : 297\r\n        const contentWidth = pageWidth - (margin * 2)\r\n        \r\n        // Process each selected chart\r\n        for (let i = 0; i < selectedGraphs.value.length; i++) {\r\n          const graphId = selectedGraphs.value[i]\r\n          const canvas = props.chartRefs[graphId]\r\n          \r\n          if (!canvas) {\r\n            console.error(`Chart canvas not found: ${graphId}`)\r\n            continue\r\n          }\r\n          \r\n          // Check if we need to add a new page\r\n          if (i > 0 && y > pageHeight - 80) {\r\n            doc.addPage()\r\n            y = 15\r\n          }\r\n          \r\n          // Get graph title\r\n          const graphInfo = availableGraphs.value.find(g => g.id === graphId)\r\n          const title = graphInfo ? graphInfo.title : 'Chart'\r\n          \r\n          // Add chart title\r\n          doc.setFontSize(12)\r\n          doc.setFont('helvetica', 'bold')\r\n          doc.text(title, margin, y)\r\n          y += 8\r\n          \r\n          try {\r\n            // Convert chart canvas to image\r\n            const imageData = canvas.toDataURL('image/png', 1.0)\r\n            \r\n            // Calculate aspect ratio to maintain proportions\r\n            const canvasWidth = canvas.width\r\n            const canvasHeight = canvas.height\r\n            const ratio = canvasHeight / canvasWidth\r\n            \r\n            // Set image width and height maintaining aspect ratio\r\n            const imgWidth = contentWidth\r\n            const imgHeight = imgWidth * ratio\r\n            \r\n            // Add image to PDF\r\n            doc.addImage(imageData, 'PNG', margin, y, imgWidth, imgHeight)\r\n            \r\n            // Update y position for next chart\r\n            y += imgHeight + 15\r\n          } catch (error) {\r\n            console.error(`Error capturing chart ${graphId}:`, error)\r\n          }\r\n        }\r\n        \r\n        // Save PDF\r\n        const fileName = `${documentTitle.value.replace(/\\s+/g, '_')}_${moment().format('YYYY-MM-DD')}.pdf`\r\n        doc.save(fileName)\r\n      } catch (error) {\r\n        console.error('Error generating PDF:', error)\r\n        alert('An error occurred while generating the PDF. Please try again.')\r\n      } finally {\r\n        isExporting.value = false\r\n      }\r\n    }\r\n\r\n    return {\r\n      selectedGraphs,\r\n      availableGraphs,\r\n      documentTitle,\r\n      startDate,\r\n      endDate,\r\n      orientation,\r\n      isExporting,\r\n      today,\r\n      exportToPDF\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.graph-selection {\r\n  transition: all 0.2s ease;\r\n  cursor: pointer;\r\n  border: 1px solid #e2e8f0;\r\n}\r\n\r\n.graph-selection:hover {\r\n  border-color: #3b82f6;\r\n  box-shadow: 0 0 0 1px rgba(59, 130, 246, 0.3);\r\n}\r\n\r\n.graph-selection.selected {\r\n  border-color: #3b82f6;\r\n  background-color: rgba(59, 130, 246, 0.05);\r\n  box-shadow: 0 0 0 1px rgba(59, 130, 246, 0.5);\r\n}\r\n\r\n.form-check-input:checked {\r\n  background-color: #3b82f6;\r\n  border-color: #3b82f6;\r\n}\r\n</style> "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}