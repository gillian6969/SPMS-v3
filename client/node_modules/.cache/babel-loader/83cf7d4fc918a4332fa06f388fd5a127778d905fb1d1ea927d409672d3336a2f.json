{"ast":null,"code":"import { createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode } from \"vue\";\nconst _hoisted_1 = {\n  class: \"student-survey-stat\"\n};\nconst _hoisted_2 = {\n  key: 0,\n  class: \"text-center py-4\"\n};\nconst _hoisted_3 = {\n  key: 1,\n  class: \"text-center py-4\"\n};\nconst _hoisted_4 = {\n  key: 2,\n  class: \"bg-white p-3 rounded\"\n};\nconst _hoisted_5 = {\n  ref: \"surveyChart\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [$setup.loading ? (_openBlock(), _createElementBlock(\"div\", _hoisted_2, _cache[0] || (_cache[0] = [_createElementVNode(\"div\", {\n    class: \"spinner-border text-primary\",\n    role: \"status\"\n  }, [_createElementVNode(\"span\", {\n    class: \"visually-hidden\"\n  }, \"Loading...\")], -1 /* HOISTED */), _createElementVNode(\"p\", {\n    class: \"mt-2\"\n  }, \"Loading student survey data...\", -1 /* HOISTED */)]))) : $setup.noData ? (_openBlock(), _createElementBlock(\"div\", _hoisted_3, _cache[1] || (_cache[1] = [_createElementVNode(\"i\", {\n    class: \"fas fa-exclamation-circle fa-3x text-muted mb-3\"\n  }, null, -1 /* HOISTED */), _createElementVNode(\"h5\", null, \"No Survey Data Available\", -1 /* HOISTED */), _createElementVNode(\"p\", {\n    class: \"text-muted\"\n  }, \"No survey data found for this student.\", -1 /* HOISTED */)]))) : (_openBlock(), _createElementBlock(\"div\", _hoisted_4, [_createElementVNode(\"canvas\", _hoisted_5, null, 512 /* NEED_PATCH */)]))]);\n}","map":{"version":3,"names":["class","key","ref","_createElementBlock","_hoisted_1","$setup","loading","_hoisted_2","_cache","_createElementVNode","role","noData","_hoisted_3","_hoisted_4","_hoisted_5"],"sources":["D:\\au_dev\\client\\src\\components\\StudentSurveyStat.vue"],"sourcesContent":["<template>\n  <div class=\"student-survey-stat\">\n    <div v-if=\"loading\" class=\"text-center py-4\">\n      <div class=\"spinner-border text-primary\" role=\"status\">\n        <span class=\"visually-hidden\">Loading...</span>\n      </div>\n      <p class=\"mt-2\">Loading student survey data...</p>\n    </div>\n    \n    <div v-else-if=\"noData\" class=\"text-center py-4\">\n      <i class=\"fas fa-exclamation-circle fa-3x text-muted mb-3\"></i>\n      <h5>No Survey Data Available</h5>\n      <p class=\"text-muted\">No survey data found for this student.</p>\n    </div>\n    \n    <div v-else class=\"bg-white p-3 rounded\">\n      <canvas ref=\"surveyChart\"></canvas>\n    </div>\n    </div>\n</template>\n\n<script setup>\nimport { ref, onMounted, watch, defineProps } from 'vue';\nimport { useStore } from 'vuex';\nimport Chart from 'chart.js/auto';\nimport axios from 'axios';\n\nconst props = defineProps({\n  _id: {\n    type: String,\n    required: true\n  }\n});\n\nconst store = useStore();\nconst loading = ref(true);\nconst noData = ref(false);\nconst surveyChart = ref(null);\nconst surveyData = ref(null);\n\n// Fetch student survey data\nconst fetchSurveyData = async () => {\n  try {\n    loading.value = true;\n    const token = store.state.auth.token;\n    \n    // Get survey data for the specified student\n    const response = await axios.get(`http://localhost:8000/api/survey/student/${props._id}`, {\n      headers: { 'Authorization': `Bearer ${token}` }\n    });\n    \n    console.log('Student survey data from API:', response.data);\n    \n    if (response.data && response.data.surveyStats && response.data.surveyStats.length > 0) {\n      surveyData.value = response.data;\n      noData.value = false;\n      renderSurveyChart();\n    } else {\n      console.log('No survey data found for student, creating sample data');\n      createSampleData();\n    }\n  } catch (error) {\n    console.error('Error fetching student survey data:', error);\n    // Create sample data if API fails\n    createSampleData();\n  } finally {\n    loading.value = false;\n  }\n};\n\n// Create sample data if the API fails\nconst createSampleData = () => {\n  console.log('Creating sample survey data');\n  \n  // Sample survey stats\n  surveyData.value = {\n    surveyStats: [\n      { type: 'Academic', average: 7.2 },\n      { type: 'Financial', average: 5.8 },\n      { type: 'Personal', average: 3.5 },\n      { type: 'Health', average: 2.1 },\n      { type: 'Social', average: 4.6 }\n    ]\n  };\n  \n  noData.value = false;\n  renderSurveyChart();\n};\n\n// Render the bar chart\nconst renderSurveyChart = () => {\n  if (!surveyChart.value) return;\n  \n  const ctx = surveyChart.value.getContext('2d');\n  if (!ctx) return;\n  \n  const existingChart = Chart.getChart(ctx);\n  if (existingChart) existingChart.destroy();\n  \n  // Extract data from survey stats\n  let labels = [];\n  let data = [];\n  \n  if (surveyData.value?.surveyStats && Array.isArray(surveyData.value.surveyStats)) {\n    surveyData.value.surveyStats.forEach(stat => {\n      if (stat.type && !isNaN(stat.average)) {\n        labels.push(stat.type);\n        data.push(stat.average);\n      }\n    });\n  }\n  \n  // If no valid data, use sample data\n  if (labels.length === 0) {\n    labels = ['Academic', 'Financial', 'Personal', 'Health', 'Social'];\n    data = [7.2, 5.8, 3.5, 2.1, 4.6];\n  }\n  \n  // Calculate colors based on severity\n  const backgroundColors = data.map(value => {\n    if (value >= 7) return 'rgba(220, 53, 69, 0.7)';  // High (red)\n    if (value >= 5) return 'rgba(255, 193, 7, 0.7)';  // Medium (yellow)\n    if (value >= 3) return 'rgba(13, 110, 253, 0.7)'; // Low (blue)\n    return 'rgba(25, 135, 84, 0.7)';                 // Minimal (green)\n  });\n  \n  // Create chart\n  new Chart(ctx, {\n    type: 'bar',\n    data: {\n      labels: labels,\n      datasets: [{\n        label: 'Problem Severity',\n        data: data,\n        backgroundColor: backgroundColors,\n        borderColor: backgroundColors.map(color => color.replace('0.7', '1')),\n        borderWidth: 1\n      }]\n    },\n    options: {\n      responsive: true,\n      maintainAspectRatio: false,\n      indexAxis: 'y',\n      plugins: {\n        legend: {\n          display: false\n        },\n        tooltip: {\n          backgroundColor: 'rgba(0, 0, 0, 0.8)',\n          padding: 10,\n          titleFont: {\n            size: 14,\n            weight: 'bold'\n          },\n          bodyFont: {\n            size: 13\n          },\n          callbacks: {\n            title: (context) => {\n              return context[0].label + ' Problems';\n            },\n            label: (context) => {\n              const value = context.raw;\n              let severity = 'Minimal';\n              if (value >= 7) severity = 'High';\n              else if (value >= 5) severity = 'Medium';\n              else if (value >= 3) severity = 'Low';\n              \n              return `Severity: ${value.toFixed(1)} (${severity})`;\n            }\n          }\n        }\n      },\n      scales: {\n        x: {\n          beginAtZero: true,\n          max: 10,\n          title: {\n            display: true,\n            text: 'Severity Score (0-10)'\n          }\n        }\n      }\n    }\n  });\n};\n\n// Watch for ID changes\nwatch(() => props._id, () => {\n  if (props._id) {\n    fetchSurveyData();\n  }\n});\n\n// Initialize component\nonMounted(() => {\n  if (props._id) {\n    fetchSurveyData();\n  }\n});\n</script>\n\n<style scoped>\n.student-survey-stat {\n  min-height: 250px;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  background-color: white;\n  border-radius: 8px;\n}\n\ncanvas {\n  max-height: 250px;\n  margin: 0 auto;\n}\n</style>"],"mappings":";;EACOA,KAAK,EAAC;AAAqB;;EADlCC,GAAA;EAEwBD,KAAK,EAAC;;;EAF9BC,GAAA;EAS4BD,KAAK,EAAC;;;EATlCC,GAAA;EAegBD,KAAK,EAAC;;;EACRE,GAAG,EAAC;AAAa;;uBAf7BC,mBAAA,CAiBQ,OAjBRC,UAiBQ,GAhBKC,MAAA,CAAAC,OAAO,I,cAAlBH,mBAAA,CAKM,OALNI,UAKM,EAAAC,MAAA,QAAAA,MAAA,OAJJC,mBAAA,CAEM;IAFDT,KAAK,EAAC,6BAA6B;IAACU,IAAI,EAAC;MAC5CD,mBAAA,CAA+C;IAAzCT,KAAK,EAAC;EAAiB,GAAC,YAAU,E,qBAE1CS,mBAAA,CAAkD;IAA/CT,KAAK,EAAC;EAAM,GAAC,gCAA8B,oB,MAGhCK,MAAA,CAAAM,MAAM,I,cAAtBR,mBAAA,CAIM,OAJNS,UAIM,EAAAJ,MAAA,QAAAA,MAAA,OAHJC,mBAAA,CAA+D;IAA5DT,KAAK,EAAC;EAAiD,4BAC1DS,mBAAA,CAAiC,YAA7B,0BAAwB,qBAC5BA,mBAAA,CAAgE;IAA7DT,KAAK,EAAC;EAAY,GAAC,wCAAsC,oB,qBAG9DG,mBAAA,CAEM,OAFNU,UAEM,GADJJ,mBAAA,CAAmC,UAAnCK,UAAmC,8B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}