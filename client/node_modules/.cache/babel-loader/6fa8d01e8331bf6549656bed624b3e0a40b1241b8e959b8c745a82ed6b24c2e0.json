{"ast":null,"code":"import { ref } from \"vue-demi\";\nimport { RecaptchaContextKey, normalizeOptions } from \"./composables/context.mjs\";\nimport { createRecaptchaProxy } from \"./composables/proxy.mjs\";\nimport { checkRecaptchaLoad, recaptchaLoaded } from \"./script-manager/common.mjs\";\nimport { warn } from \"./utils.mjs\";\nexport function createPlugin(scriptLoaderFactory, {\n  getRecaptcha = () => window.grecaptcha\n} = {}) {\n  return {\n    install(app, options) {\n      const isReady = ref(false);\n      async function waitLoaded() {\n        await recaptchaLoaded.promise;\n        isReady.value = true;\n      }\n      waitLoaded().catch(error => warn(\"fail to load reCAPTCHA script\", error));\n      checkRecaptchaLoad();\n      const opt = normalizeOptions(options);\n      app.provide(RecaptchaContextKey, {\n        isReady,\n        scriptInjected: false,\n        proxy: createRecaptchaProxy(isReady, getRecaptcha),\n        useScriptProvider: scriptLoaderFactory(opt.loaderOptions),\n        options: opt\n      });\n    }\n  };\n}","map":{"version":3,"names":["ref","RecaptchaContextKey","normalizeOptions","createRecaptchaProxy","checkRecaptchaLoad","recaptchaLoaded","warn","createPlugin","scriptLoaderFactory","getRecaptcha","window","grecaptcha","install","app","options","isReady","waitLoaded","promise","value","catch","error","opt","provide","scriptInjected","proxy","useScriptProvider","loaderOptions"],"sources":["D:/au_dev/client/node_modules/vue-recaptcha/dist/plugin.mjs"],"sourcesContent":["import { ref } from \"vue-demi\";\nimport { RecaptchaContextKey, normalizeOptions } from \"./composables/context.mjs\";\nimport { createRecaptchaProxy } from \"./composables/proxy.mjs\";\nimport { checkRecaptchaLoad, recaptchaLoaded } from \"./script-manager/common.mjs\";\nimport { warn } from \"./utils.mjs\";\nexport function createPlugin(scriptLoaderFactory, { getRecaptcha = () => window.grecaptcha } = {}) {\n  return {\n    install(app, options) {\n      const isReady = ref(false);\n      async function waitLoaded() {\n        await recaptchaLoaded.promise;\n        isReady.value = true;\n      }\n      waitLoaded().catch((error) => warn(\"fail to load reCAPTCHA script\", error));\n      checkRecaptchaLoad();\n      const opt = normalizeOptions(options);\n      app.provide(RecaptchaContextKey, {\n        isReady,\n        scriptInjected: false,\n        proxy: createRecaptchaProxy(isReady, getRecaptcha),\n        useScriptProvider: scriptLoaderFactory(opt.loaderOptions),\n        options: opt\n      });\n    }\n  };\n}\n"],"mappings":"AAAA,SAASA,GAAG,QAAQ,UAAU;AAC9B,SAASC,mBAAmB,EAAEC,gBAAgB,QAAQ,2BAA2B;AACjF,SAASC,oBAAoB,QAAQ,yBAAyB;AAC9D,SAASC,kBAAkB,EAAEC,eAAe,QAAQ,6BAA6B;AACjF,SAASC,IAAI,QAAQ,aAAa;AAClC,OAAO,SAASC,YAAYA,CAACC,mBAAmB,EAAE;EAAEC,YAAY,GAAGA,CAAA,KAAMC,MAAM,CAACC;AAAW,CAAC,GAAG,CAAC,CAAC,EAAE;EACjG,OAAO;IACLC,OAAOA,CAACC,GAAG,EAAEC,OAAO,EAAE;MACpB,MAAMC,OAAO,GAAGf,GAAG,CAAC,KAAK,CAAC;MAC1B,eAAegB,UAAUA,CAAA,EAAG;QAC1B,MAAMX,eAAe,CAACY,OAAO;QAC7BF,OAAO,CAACG,KAAK,GAAG,IAAI;MACtB;MACAF,UAAU,CAAC,CAAC,CAACG,KAAK,CAAEC,KAAK,IAAKd,IAAI,CAAC,+BAA+B,EAAEc,KAAK,CAAC,CAAC;MAC3EhB,kBAAkB,CAAC,CAAC;MACpB,MAAMiB,GAAG,GAAGnB,gBAAgB,CAACY,OAAO,CAAC;MACrCD,GAAG,CAACS,OAAO,CAACrB,mBAAmB,EAAE;QAC/Bc,OAAO;QACPQ,cAAc,EAAE,KAAK;QACrBC,KAAK,EAAErB,oBAAoB,CAACY,OAAO,EAAEN,YAAY,CAAC;QAClDgB,iBAAiB,EAAEjB,mBAAmB,CAACa,GAAG,CAACK,aAAa,CAAC;QACzDZ,OAAO,EAAEO;MACX,CAAC,CAAC;IACJ;EACF,CAAC;AACH","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}