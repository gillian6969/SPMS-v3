{"ast":null,"code":"import { createElementVNode as _createElementVNode, createCommentVNode as _createCommentVNode, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, vModelSelect as _vModelSelect, withDirectives as _withDirectives, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, vModelText as _vModelText, createVNode as _createVNode, createStaticVNode as _createStaticVNode } from \"vue\";\nconst _hoisted_1 = {\n  class: \"dashboard\"\n};\nconst _hoisted_2 = {\n  class: \"d-flex justify-content-between align-items-center mb-4\"\n};\nconst _hoisted_3 = {\n  class: \"dropdown\"\n};\nconst _hoisted_4 = {\n  class: \"btn btn-filter dropdown-toggle\",\n  type: \"button\",\n  id: \"filterDropdown\",\n  \"data-bs-toggle\": \"dropdown\",\n  \"aria-expanded\": \"false\"\n};\nconst _hoisted_5 = {\n  class: \"dropdown-menu filter-menu p-3\",\n  \"aria-labelledby\": \"filterDropdown\"\n};\nconst _hoisted_6 = {\n  class: \"mb-3\"\n};\nconst _hoisted_7 = {\n  class: \"mb-3\"\n};\nconst _hoisted_8 = [\"disabled\"];\nconst _hoisted_9 = [\"value\"];\nconst _hoisted_10 = {\n  class: \"mb-3\"\n};\nconst _hoisted_11 = [\"disabled\"];\nconst _hoisted_12 = [\"value\"];\nconst _hoisted_13 = {\n  class: \"mb-3\"\n};\nconst _hoisted_14 = {\n  class: \"d-flex gap-2\"\n};\nconst _hoisted_15 = {\n  class: \"flex-grow-1\"\n};\nconst _hoisted_16 = [\"max\"];\nconst _hoisted_17 = {\n  class: \"flex-grow-1\"\n};\nconst _hoisted_18 = [\"max\"];\nconst _hoisted_19 = {\n  class: \"row g-4\"\n};\nconst _hoisted_20 = {\n  class: \"col-md-3\"\n};\nconst _hoisted_21 = {\n  class: \"dashboard-card\"\n};\nconst _hoisted_22 = {\n  class: \"card-info\"\n};\nconst _hoisted_23 = {\n  class: \"stat-value\"\n};\nconst _hoisted_24 = {\n  class: \"col-md-3\"\n};\nconst _hoisted_25 = {\n  class: \"dashboard-card\"\n};\nconst _hoisted_26 = {\n  class: \"card-info\"\n};\nconst _hoisted_27 = {\n  class: \"stat-value\"\n};\nconst _hoisted_28 = {\n  class: \"col-md-3\"\n};\nconst _hoisted_29 = {\n  class: \"dashboard-card\"\n};\nconst _hoisted_30 = {\n  class: \"card-info\"\n};\nconst _hoisted_31 = {\n  class: \"stat-value\"\n};\nconst _hoisted_32 = {\n  class: \"col-md-3\"\n};\nconst _hoisted_33 = {\n  class: \"dashboard-card\"\n};\nconst _hoisted_34 = {\n  class: \"card-info\"\n};\nconst _hoisted_35 = {\n  class: \"stat-value\"\n};\nconst _hoisted_36 = {\n  class: \"row mt-4\"\n};\nconst _hoisted_37 = {\n  class: \"col-md-6\"\n};\nconst _hoisted_38 = {\n  class: \"dashboard-card h-100\"\n};\nconst _hoisted_39 = {\n  class: \"card-info\"\n};\nconst _hoisted_40 = {\n  key: 0,\n  class: \"stat-value\"\n};\nconst _hoisted_41 = {\n  key: 1,\n  class: \"no-data\"\n};\nconst _hoisted_42 = {\n  class: \"col-md-6\"\n};\nconst _hoisted_43 = {\n  class: \"dashboard-card h-100\"\n};\nconst _hoisted_44 = {\n  class: \"card-info\"\n};\nconst _hoisted_45 = {\n  key: 0,\n  class: \"stat-value\"\n};\nconst _hoisted_46 = {\n  key: 1,\n  class: \"no-data\"\n};\nconst _hoisted_47 = {\n  class: \"row mt-4 mb-4\"\n};\nconst _hoisted_48 = {\n  class: \"col-12\"\n};\nconst _hoisted_49 = {\n  class: \"chart-card\"\n};\nconst _hoisted_50 = {\n  class: \"card-body\"\n};\nconst _hoisted_51 = {\n  class: \"row mb-4\"\n};\nconst _hoisted_52 = {\n  class: \"col-md-6 mb-4\"\n};\nconst _hoisted_53 = {\n  class: \"chart-card\"\n};\nconst _hoisted_54 = {\n  class: \"card-body\"\n};\nconst _hoisted_55 = {\n  class: \"chart-container\"\n};\nconst _hoisted_56 = {\n  ref: \"performanceChart\"\n};\nconst _hoisted_57 = {\n  key: 0,\n  class: \"no-data-message\"\n};\nconst _hoisted_58 = {\n  class: \"col-md-6 mb-4\"\n};\nconst _hoisted_59 = {\n  class: \"chart-card\"\n};\nconst _hoisted_60 = {\n  class: \"card-body\"\n};\nconst _hoisted_61 = {\n  class: \"chart-container\"\n};\nconst _hoisted_62 = {\n  ref: \"assessmentTypeChart\"\n};\nconst _hoisted_63 = {\n  key: 0,\n  class: \"no-data-message\"\n};\nconst _hoisted_64 = {\n  class: \"col-md-6 mb-4\"\n};\nconst _hoisted_65 = {\n  class: \"chart-card\"\n};\nconst _hoisted_66 = {\n  class: \"card-body\"\n};\nconst _hoisted_67 = {\n  class: \"chart-container\"\n};\nconst _hoisted_68 = {\n  ref: \"performanceTrendChart\"\n};\nconst _hoisted_69 = {\n  key: 0,\n  class: \"no-data-message\"\n};\nconst _hoisted_70 = {\n  class: \"col-md-6 mb-4\"\n};\nconst _hoisted_71 = {\n  class: \"chart-card\"\n};\nconst _hoisted_72 = {\n  class: \"card-body\"\n};\nconst _hoisted_73 = {\n  class: \"chart-container\"\n};\nconst _hoisted_74 = {\n  ref: \"assessmentTypePerformanceChart\"\n};\nconst _hoisted_75 = {\n  key: 0,\n  class: \"no-data-message\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_cache[17] || (_cache[17] = _createElementVNode(\"h2\", {\n    class: \"dashboard-title\"\n  }, null, -1 /* HOISTED */)), _createCommentVNode(\" Combined Filter Dropdown \"), _createElementVNode(\"div\", _hoisted_3, [_createElementVNode(\"button\", _hoisted_4, [_cache[5] || (_cache[5] = _createElementVNode(\"i\", {\n    class: \"fas fa-filter me-2\"\n  }, null, -1 /* HOISTED */)), _createTextVNode(\" \" + _toDisplayString($setup.getFilterDisplay()), 1 /* TEXT */)]), _createElementVNode(\"div\", _hoisted_5, [_cache[15] || (_cache[15] = _createElementVNode(\"h6\", {\n    class: \"dropdown-header\"\n  }, \"Filter Options\", -1 /* HOISTED */)), _createElementVNode(\"div\", _hoisted_6, [_cache[7] || (_cache[7] = _createElementVNode(\"label\", {\n    class: \"form-label\"\n  }, \"Academic Year\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"select\", {\n    class: \"form-select mb-2\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $setup.selectedYear = $event),\n    onChange: $setup.handleYearChange\n  }, _cache[6] || (_cache[6] = [_createStaticVNode(\"<option value=\\\"\\\" data-v-1585269e>All Years</option><option value=\\\"1st\\\" data-v-1585269e>1st Year</option><option value=\\\"2nd\\\" data-v-1585269e>2nd Year</option><option value=\\\"3rd\\\" data-v-1585269e>3rd Year</option><option value=\\\"4th\\\" data-v-1585269e>4th Year</option>\", 5)]), 544 /* NEED_HYDRATION, NEED_PATCH */), [[_vModelSelect, $setup.selectedYear]])]), _createElementVNode(\"div\", _hoisted_7, [_cache[9] || (_cache[9] = _createElementVNode(\"label\", {\n    class: \"form-label\"\n  }, \"Section\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"select\", {\n    class: \"form-select mb-2\",\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $setup.selectedSection = $event),\n    disabled: !$setup.selectedYear\n  }, [_cache[8] || (_cache[8] = _createElementVNode(\"option\", {\n    value: \"\"\n  }, \"All Sections\", -1 /* HOISTED */)), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.sections, section => {\n    return _openBlock(), _createElementBlock(\"option\", {\n      key: section,\n      value: section\n    }, _toDisplayString(section), 9 /* TEXT, PROPS */, _hoisted_9);\n  }), 128 /* KEYED_FRAGMENT */))], 8 /* PROPS */, _hoisted_8), [[_vModelSelect, $setup.selectedSection]])]), _createElementVNode(\"div\", _hoisted_10, [_cache[11] || (_cache[11] = _createElementVNode(\"label\", {\n    class: \"form-label\"\n  }, \"Subject\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"select\", {\n    class: \"form-select mb-2\",\n    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $setup.selectedSubject = $event),\n    disabled: !$setup.selectedYear\n  }, [_cache[10] || (_cache[10] = _createElementVNode(\"option\", {\n    value: \"\"\n  }, \"All Subjects\", -1 /* HOISTED */)), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.subjects, subject => {\n    return _openBlock(), _createElementBlock(\"option\", {\n      key: subject,\n      value: subject\n    }, _toDisplayString(subject), 9 /* TEXT, PROPS */, _hoisted_12);\n  }), 128 /* KEYED_FRAGMENT */))], 8 /* PROPS */, _hoisted_11), [[_vModelSelect, $setup.selectedSubject]])]), _createElementVNode(\"div\", _hoisted_13, [_cache[14] || (_cache[14] = _createElementVNode(\"label\", {\n    class: \"form-label\"\n  }, \"Date Range\", -1 /* HOISTED */)), _createElementVNode(\"div\", _hoisted_14, [_createElementVNode(\"div\", _hoisted_15, [_cache[12] || (_cache[12] = _createElementVNode(\"label\", {\n    class: \"small text-muted\"\n  }, \"From\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"input\", {\n    type: \"date\",\n    class: \"form-control form-control-sm\",\n    \"onUpdate:modelValue\": _cache[3] || (_cache[3] = $event => $setup.selectedStartDate = $event),\n    max: $setup.today\n  }, null, 8 /* PROPS */, _hoisted_16), [[_vModelText, $setup.selectedStartDate]])]), _createElementVNode(\"div\", _hoisted_17, [_cache[13] || (_cache[13] = _createElementVNode(\"label\", {\n    class: \"small text-muted\"\n  }, \"To\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"input\", {\n    type: \"date\",\n    class: \"form-control form-control-sm\",\n    \"onUpdate:modelValue\": _cache[4] || (_cache[4] = $event => $setup.selectedEndDate = $event),\n    max: $setup.today\n  }, null, 8 /* PROPS */, _hoisted_18), [[_vModelText, $setup.selectedEndDate]])])])]), _cache[16] || (_cache[16] = _createElementVNode(\"div\", {\n    class: \"dropdown-divider\"\n  }, null, -1 /* HOISTED */)), _createElementVNode(\"button\", {\n    class: \"btn btn-primary w-100\",\n    onClick: $setup.applyFilters\n  }, \"Apply Filters\")])])]), _createCommentVNode(\" Analytics Cards \"), _createElementVNode(\"div\", _hoisted_19, [_createCommentVNode(\" Total Students Card \"), _createElementVNode(\"div\", _hoisted_20, [_createElementVNode(\"div\", _hoisted_21, [_cache[19] || (_cache[19] = _createElementVNode(\"div\", {\n    class: \"icon-container\"\n  }, [_createElementVNode(\"i\", {\n    class: \"fas fa-user-graduate\"\n  })], -1 /* HOISTED */)), _createElementVNode(\"div\", _hoisted_22, [_cache[18] || (_cache[18] = _createElementVNode(\"h3\", {\n    class: \"stat-title\"\n  }, \"Total Students\", -1 /* HOISTED */)), _createElementVNode(\"div\", _hoisted_23, _toDisplayString($setup.totalStudents), 1 /* TEXT */)])])]), _createCommentVNode(\" Total SSP Advisers Card \"), _createElementVNode(\"div\", _hoisted_24, [_createElementVNode(\"div\", _hoisted_25, [_cache[21] || (_cache[21] = _createElementVNode(\"div\", {\n    class: \"icon-container\"\n  }, [_createElementVNode(\"i\", {\n    class: \"fas fa-chalkboard-teacher\"\n  })], -1 /* HOISTED */)), _createElementVNode(\"div\", _hoisted_26, [_cache[20] || (_cache[20] = _createElementVNode(\"h3\", {\n    class: \"stat-title\"\n  }, \"SSP Advisers\", -1 /* HOISTED */)), _createElementVNode(\"div\", _hoisted_27, _toDisplayString($setup.totalSSPAdvisers), 1 /* TEXT */)])])]), _createCommentVNode(\" Active Sections Card \"), _createElementVNode(\"div\", _hoisted_28, [_createElementVNode(\"div\", _hoisted_29, [_cache[23] || (_cache[23] = _createElementVNode(\"div\", {\n    class: \"icon-container\"\n  }, [_createElementVNode(\"i\", {\n    class: \"fas fa-chalkboard\"\n  })], -1 /* HOISTED */)), _createElementVNode(\"div\", _hoisted_30, [_cache[22] || (_cache[22] = _createElementVNode(\"h3\", {\n    class: \"stat-title\"\n  }, \"Active Sections\", -1 /* HOISTED */)), _createElementVNode(\"div\", _hoisted_31, _toDisplayString($setup.totalSections), 1 /* TEXT */)])])]), _createCommentVNode(\" Failing Students Card \"), _createElementVNode(\"div\", _hoisted_32, [_createElementVNode(\"div\", _hoisted_33, [_cache[25] || (_cache[25] = _createElementVNode(\"div\", {\n    class: \"icon-container\"\n  }, [_createElementVNode(\"i\", {\n    class: \"fas fa-exclamation-triangle\"\n  })], -1 /* HOISTED */)), _createElementVNode(\"div\", _hoisted_34, [_cache[24] || (_cache[24] = _createElementVNode(\"h3\", {\n    class: \"stat-title\"\n  }, \"Failing Students\", -1 /* HOISTED */)), _createElementVNode(\"div\", _hoisted_35, _toDisplayString($setup.failingStudents), 1 /* TEXT */)])])])]), _createCommentVNode(\" Performance Stats Row \"), _createElementVNode(\"div\", _hoisted_36, [_createElementVNode(\"div\", _hoisted_37, [_createElementVNode(\"div\", _hoisted_38, [_cache[27] || (_cache[27] = _createElementVNode(\"div\", {\n    class: \"icon-container\"\n  }, [_createElementVNode(\"i\", {\n    class: \"fas fa-clock\"\n  })], -1 /* HOISTED */)), _createElementVNode(\"div\", _hoisted_39, [_cache[26] || (_cache[26] = _createElementVNode(\"h3\", {\n    class: \"stat-title\"\n  }, \"Average Attendance\", -1 /* HOISTED */)), $setup.hasAttendanceData ? (_openBlock(), _createElementBlock(\"div\", _hoisted_40, _toDisplayString($setup.averageAttendance) + \"%\", 1 /* TEXT */)) : (_openBlock(), _createElementBlock(\"div\", _hoisted_41, \"No attendance data available\"))])])]), _createElementVNode(\"div\", _hoisted_42, [_createElementVNode(\"div\", _hoisted_43, [_cache[29] || (_cache[29] = _createElementVNode(\"div\", {\n    class: \"icon-container\"\n  }, [_createElementVNode(\"i\", {\n    class: \"fas fa-tasks\"\n  })], -1 /* HOISTED */)), _createElementVNode(\"div\", _hoisted_44, [_cache[28] || (_cache[28] = _createElementVNode(\"h3\", {\n    class: \"stat-title\"\n  }, \"Assessment Completion\", -1 /* HOISTED */)), $setup.hasAssessmentData ? (_openBlock(), _createElementBlock(\"div\", _hoisted_45, _toDisplayString($setup.assessmentCompletion.toFixed(2)) + \"%\", 1 /* TEXT */)) : (_openBlock(), _createElementBlock(\"div\", _hoisted_46, \"No assessment data available\"))])])])]), _createCommentVNode(\" Survey Stats \"), _createElementVNode(\"div\", _hoisted_47, [_createElementVNode(\"div\", _hoisted_48, [_createElementVNode(\"div\", _hoisted_49, [_createElementVNode(\"div\", _hoisted_50, [_cache[30] || (_cache[30] = _createElementVNode(\"h5\", {\n    class: \"card-title\"\n  }, [_createElementVNode(\"i\", {\n    class: \"fas fa-poll me-2\"\n  }), _createTextVNode(\" Survey Statistics \")], -1 /* HOISTED */)), _createVNode($setup[\"AllSurveyStat\"])])])])]), _createCommentVNode(\" Charts Row \"), _createElementVNode(\"div\", _hoisted_51, [_createCommentVNode(\" Performance Distribution Chart \"), _createElementVNode(\"div\", _hoisted_52, [_createElementVNode(\"div\", _hoisted_53, [_createElementVNode(\"div\", _hoisted_54, [_cache[31] || (_cache[31] = _createElementVNode(\"h5\", {\n    class: \"card-title\"\n  }, \"Grade Distribution\", -1 /* HOISTED */)), _createElementVNode(\"div\", _hoisted_55, [_createElementVNode(\"canvas\", _hoisted_56, null, 512 /* NEED_PATCH */), !$setup.hasPerformanceData ? (_openBlock(), _createElementBlock(\"p\", _hoisted_57, \"No performance data available\")) : _createCommentVNode(\"v-if\", true)])])])]), _createCommentVNode(\" Assessment Type Distribution \"), _createElementVNode(\"div\", _hoisted_58, [_createElementVNode(\"div\", _hoisted_59, [_createElementVNode(\"div\", _hoisted_60, [_cache[32] || (_cache[32] = _createElementVNode(\"h5\", {\n    class: \"card-title\"\n  }, \"Assessment Type Distribution\", -1 /* HOISTED */)), _createElementVNode(\"div\", _hoisted_61, [_createElementVNode(\"canvas\", _hoisted_62, null, 512 /* NEED_PATCH */), !$setup.hasPerformanceData ? (_openBlock(), _createElementBlock(\"p\", _hoisted_63, \"No assessment data available\")) : _createCommentVNode(\"v-if\", true)])])])]), _createCommentVNode(\" Performance Trend Chart \"), _createElementVNode(\"div\", _hoisted_64, [_createElementVNode(\"div\", _hoisted_65, [_createElementVNode(\"div\", _hoisted_66, [_cache[33] || (_cache[33] = _createElementVNode(\"h5\", {\n    class: \"card-title\"\n  }, \"Performance Trends\", -1 /* HOISTED */)), _createElementVNode(\"div\", _hoisted_67, [_createElementVNode(\"canvas\", _hoisted_68, null, 512 /* NEED_PATCH */), !$setup.hasPerformanceData ? (_openBlock(), _createElementBlock(\"p\", _hoisted_69, \"No performance data available\")) : _createCommentVNode(\"v-if\", true)])])])]), _createCommentVNode(\" Assessment Type Performance \"), _createElementVNode(\"div\", _hoisted_70, [_createElementVNode(\"div\", _hoisted_71, [_createElementVNode(\"div\", _hoisted_72, [_cache[34] || (_cache[34] = _createElementVNode(\"h5\", {\n    class: \"card-title\"\n  }, \"Performance by Assessment Type\", -1 /* HOISTED */)), _createElementVNode(\"div\", _hoisted_73, [_createElementVNode(\"canvas\", _hoisted_74, null, 512 /* NEED_PATCH */), !$setup.hasPerformanceData ? (_openBlock(), _createElementBlock(\"p\", _hoisted_75, \"No performance data available\")) : _createCommentVNode(\"v-if\", true)])])])])])]);\n}","map":{"version":3,"names":["class","type","id","key","ref","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","_createCommentVNode","_hoisted_3","_hoisted_4","_createTextVNode","_toDisplayString","$setup","getFilterDisplay","_hoisted_5","_hoisted_6","_cache","$event","selectedYear","onChange","handleYearChange","_createStaticVNode","_hoisted_7","selectedSection","disabled","value","_Fragment","_renderList","sections","section","_hoisted_9","_hoisted_8","_hoisted_10","selectedSubject","subjects","subject","_hoisted_12","_hoisted_11","_hoisted_13","_hoisted_14","_hoisted_15","selectedStartDate","max","today","_hoisted_16","_hoisted_17","selectedEndDate","_hoisted_18","onClick","applyFilters","_hoisted_19","_hoisted_20","_hoisted_21","_hoisted_22","_hoisted_23","totalStudents","_hoisted_24","_hoisted_25","_hoisted_26","_hoisted_27","totalSSPAdvisers","_hoisted_28","_hoisted_29","_hoisted_30","_hoisted_31","totalSections","_hoisted_32","_hoisted_33","_hoisted_34","_hoisted_35","failingStudents","_hoisted_36","_hoisted_37","_hoisted_38","_hoisted_39","hasAttendanceData","_hoisted_40","averageAttendance","_hoisted_41","_hoisted_42","_hoisted_43","_hoisted_44","hasAssessmentData","_hoisted_45","assessmentCompletion","toFixed","_hoisted_46","_hoisted_47","_hoisted_48","_hoisted_49","_hoisted_50","_createVNode","_hoisted_51","_hoisted_52","_hoisted_53","_hoisted_54","_hoisted_55","_hoisted_56","hasPerformanceData","_hoisted_57","_hoisted_58","_hoisted_59","_hoisted_60","_hoisted_61","_hoisted_62","_hoisted_63","_hoisted_64","_hoisted_65","_hoisted_66","_hoisted_67","_hoisted_68","_hoisted_69","_hoisted_70","_hoisted_71","_hoisted_72","_hoisted_73","_hoisted_74","_hoisted_75"],"sources":["D:\\au_dev\\client\\src\\views\\SSPHeadDashboard.vue"],"sourcesContent":["<script setup>\r\nimport { ref, onMounted, computed, watch, nextTick } from 'vue'\r\nimport AllSurveyStat from '../components/AllSurveyStat.vue'\r\nimport { useStore } from 'vuex'\r\nimport Chart from 'chart.js/auto'\r\nimport axios from 'axios'\r\nimport moment from 'moment'\r\n\r\nconst store = useStore()\r\nconst performanceChart = ref(null)\r\nconst attendanceChart = ref(null)\r\nconst assessmentTypeChart = ref(null)\r\nconst performanceTrendChart = ref(null)\r\nconst quizzesChart = ref(null)\r\nconst assessmentTypePerformanceChart = ref(null)\r\n\r\n// Data refs\r\nconst totalStudents = ref(0)\r\nconst totalSections = ref(0)\r\nconst totalSubjects = ref(0)\r\nconst totalSSPAdvisers = ref(0)\r\nconst failingStudents = ref(0)\r\nconst averageAttendance = ref(0)\r\nconst averageScore = ref(0)\r\nconst assessmentCompletion = ref(0)\r\nconst recentActivities = ref([])\r\nconst sections = ref([])\r\nconst subjects = ref([])\r\nconst quizzesGrades = ref([]);\r\n\r\n// Filter refs\r\nconst selectedYear = ref(localStorage.getItem('selectedYear') || '')\r\nconst selectedSection = ref(localStorage.getItem('selectedSection') || '')\r\nconst selectedSubject = ref(localStorage.getItem('selectedSubject') || '')\r\nconst selectedStartDate = ref('')\r\nconst selectedEndDate = ref('')\r\nconst today = computed(() => moment().format('YYYY-MM-DD'))\r\n\r\n// Get teacher ID from store\r\nconst getTeacherId = () => {\r\n  const user = store.state.auth.user\r\n  if (!user || !user._id) {\r\n    console.error('No teacher ID found in store')\r\n    return null\r\n  }\r\n  return user._id\r\n}\r\n\r\n// Computed properties for data availability\r\nconst hasAttendanceData = computed(() => averageAttendance.value > 0)\r\nconst hasPerformanceData = computed(() => averageScore.value > 0)\r\nconst hasAssessmentData = computed(() => assessmentCompletion.value > 0)\r\nconst hasActivity = computed(() => recentActivities.value.length > 0)\r\n\r\nconst fetchTeacherSectionsAndSubjects = async (year = '') => {\r\n  try {\r\n    const teacherId = getTeacherId()\r\n    if (!teacherId) return\r\n\r\n    const token = store.state.auth.token\r\n    console.log('Fetching sections and subjects for:', { teacherId, year })\r\n\r\n    // First get all class records to extract sections\r\n    const recordsResponse = await axios.get('http://localhost:8000/api/teacher-class-records', {\r\n      params: { \r\n        teacherId,\r\n        year \r\n      },\r\n      headers: { 'Authorization': `Bearer ${token}` }\r\n    })\r\n\r\n    if (recordsResponse.data) {\r\n      // Extract unique sections and subjects\r\n      const uniqueSections = [...new Set(recordsResponse.data.map(record => record.section))]\r\n      const uniqueSubjects = [...new Set(recordsResponse.data.map(record => record.subject))]\r\n      \r\n      sections.value = uniqueSections.sort()\r\n      subjects.value = uniqueSubjects.sort()\r\n      \r\n      console.log('Loaded sections and subjects:', {\r\n        sections: sections.value,\r\n        subjects: subjects.value\r\n      })\r\n    }\r\n  } catch (error) {\r\n    console.error('Error fetching teacher sections and subjects:', error)\r\n    sections.value = []\r\n    subjects.value = []\r\n  }\r\n}\r\n\r\nconst handleYearChange = async () => {\r\n  selectedSection.value = ''\r\n  selectedSubject.value = ''\r\n  if (selectedYear.value) {\r\n    await fetchTeacherSectionsAndSubjects(selectedYear.value)\r\n  } else {\r\n    sections.value = []\r\n    subjects.value = []\r\n  }\r\n  await fetchDashboardData()\r\n}\r\n\r\nconst getFilterDisplay = () => {\r\n  const filters = []\r\n  if (selectedYear.value) filters.push(selectedYear.value + ' Year')\r\n  if (selectedSection.value) filters.push(selectedSection.value)\r\n  if (selectedSubject.value) filters.push(selectedSubject.value)\r\n  return filters.length > 0 ? filters.join(' - ') : 'Filter View'\r\n}\r\n\r\nconst fetchDashboardData = async () => {\r\n  try {\r\n    const teacherId = getTeacherId();\r\n    if (!teacherId) {\r\n      console.error('No teacher ID found');\r\n      return;\r\n    }\r\n\r\n    const token = store.state.auth.token;\r\n    if (!token) {\r\n      console.error('No auth token found');\r\n      return;\r\n    }\r\n\r\n    console.log('Fetching dashboard data with params:', {\r\n      teacherId,\r\n      year: selectedYear.value,\r\n      section: selectedSection.value,\r\n      subject: selectedSubject.value,\r\n      startDate: selectedStartDate.value,\r\n      endDate: selectedEndDate.value\r\n    });\r\n\r\n    const response = await axios.get(`http://localhost:8000/api/dashboard/stats`, {\r\n      params: {\r\n        year: selectedYear.value,\r\n        section: selectedSection.value,\r\n        subject: selectedSubject.value,\r\n        startDate: selectedStartDate.value,\r\n        endDate: selectedEndDate.value\r\n      },\r\n      headers: { 'Authorization': `Bearer ${token}` }\r\n    });\r\n\r\n    console.log('Dashboard data received:', response.data);\r\n\r\n    if (response.data) {\r\n      // Update stats\r\n      totalStudents.value = response.data.totalStudents || 0;\r\n      totalSections.value = response.data.totalSections || 0;\r\n      totalSubjects.value = response.data.totalSubjects || 0;\r\n      totalSSPAdvisers.value = response.data.totalSSPAdvisers || 0;\r\n      failingStudents.value = response.data.failingStudents || 0;\r\n      averageAttendance.value = response.data.averageAttendance || 0;\r\n      averageScore.value = response.data.averageScore || 0;\r\n      assessmentCompletion.value = response.data.assessmentCompletion?.overall || 0;\r\n      recentActivities.value = response.data.recentActivities || [];\r\n\r\n      // Log data before updating charts\r\n      console.log('Performance Distribution:', response.data.performanceDistribution);\r\n      console.log('Assessment Type Distribution:', response.data.assessmentTypeDistribution);\r\n      console.log('Performance Trends:', response.data.performanceTrends);\r\n      console.log('Assessment Completion by Type:', response.data.assessmentCompletion?.byType);\r\n\r\n      // Update charts with new data\r\n      if (Array.isArray(response.data.performanceDistribution)) {\r\n        updatePerformanceChart(response.data);\r\n      } else {\r\n        console.warn('Invalid performance distribution data:', response.data.performanceDistribution);\r\n        updatePerformanceChart({\r\n          performanceDistribution: [0, 0, 0, 0, 0]\r\n        });\r\n      }\r\n\r\n      if (response.data.assessmentTypeDistribution){\r\n        updateAssessmentTypeChart(response.data.assessmentTypeDistribution);\r\n      } else {\r\n        console.warn('Invalid assessment type distribution data:', response.data.assessmentTypeDistribution);\r\n        updateAssessmentTypeChart([\r\n          { type: 'Quiz', percentage: 0 },\r\n          { type: 'Activity', percentage: 0 },\r\n          { type: 'Performance Task', percentage: 0 }\r\n        ]);\r\n      }\r\n\r\n      if (Array.isArray(response.data.performanceTrends)) {\r\n        updatePerformanceTrendChart(response.data.performanceTrends);\r\n      } else {\r\n        console.warn('Invalid performance trends data:', response.data.performanceTrends);\r\n        updatePerformanceTrendChart([]);\r\n      }\r\n\r\n      if (response.data.assessmentCompletion?.byType) {\r\n        updateAssessmentTypePerformanceChart(response.data);\r\n      } else {\r\n        console.warn('Invalid assessment completion data:', response.data.assessmentCompletion);\r\n        updateAssessmentTypePerformanceChart({\r\n          assessmentCompletion: {\r\n            byType: {\r\n              quiz: 0,\r\n              activity: 0,\r\n              performancetask: 0\r\n            }\r\n          }\r\n        });\r\n      }\r\n    }\r\n  } catch (error) {\r\n    console.error('Error fetching dashboard data:', error);\r\n    if (error.response) {\r\n      console.error('Error response:', error.response.data);\r\n    }\r\n    \r\n    // Reset data on error\r\n    totalStudents.value = 0;\r\n    totalSections.value = 0;\r\n    totalSubjects.value = 0;\r\n    totalSSPAdvisers.value = 0;\r\n    failingStudents.value = 0;\r\n    averageAttendance.value = 0;\r\n    averageScore.value = 0;\r\n    assessmentCompletion.value = 0;\r\n    recentActivities.value = [];\r\n    \r\n    // Update charts with empty data\r\n    updatePerformanceChart({\r\n      performanceDistribution: [0, 0, 0, 0, 0]\r\n    });\r\n    updateAssessmentTypeChart([\r\n      { type: 'Quiz', percentage: 0 },\r\n      { type: 'Activity', percentage: 0 },\r\n      { type: 'Performance Task', percentage: 0 }\r\n    ]);\r\n    updatePerformanceTrendChart([]);\r\n    updateAssessmentTypePerformanceChart({\r\n      assessmentCompletion: {\r\n        byType: {\r\n          quiz: 0,\r\n          activity: 0,\r\n          performancetask: 0\r\n        }\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nconst updatePerformanceChart = (data) => {\r\n  if (!performanceChart.value) return;\r\n  \r\n  const ctx = performanceChart.value.getContext('2d');\r\n  if (!ctx) return;\r\n\r\n  const existingChart = Chart.getChart(ctx);\r\n  if (existingChart) existingChart.destroy();\r\n\r\n  // Process performance distribution data\r\n  const performanceData = Array.isArray(data.performanceDistribution) \r\n    ? data.performanceDistribution \r\n    : [0, 0, 0, 0, 0];\r\n  \r\n  console.log('Performance distribution data:', performanceData);\r\n\r\n  new Chart(ctx, {\r\n    type: 'bar',\r\n    data: {\r\n      labels: ['90-100', '80-89', '70-79', '60-69', 'Below 60'],\r\n      datasets: [{\r\n        label: 'Number of Students',\r\n        data: performanceData,\r\n        backgroundColor: [\r\n          'rgba(52, 211, 153, 0.8)',  // Green for highest\r\n          'rgba(59, 130, 246, 0.8)',  // Blue\r\n          'rgba(251, 191, 36, 0.8)',  // Yellow\r\n          'rgba(251, 146, 60, 0.8)',  // Orange\r\n          'rgba(239, 68, 68, 0.8)'    // Red for lowest\r\n        ],\r\n        borderWidth: 1,\r\n        borderRadius: 5\r\n      }]\r\n    },\r\n    options: {\r\n      responsive: true,\r\n      maintainAspectRatio: false,\r\n      plugins: {\r\n        legend: {\r\n          display: false\r\n        },\r\n        tooltip: {\r\n          callbacks: {\r\n            label: (context) => {\r\n              const value = context.raw || 0;\r\n              const total = performanceData.reduce((a, b) => a + (b || 0), 0);\r\n              const percentage = total > 0 ? ((value / total) * 100).toFixed(1) : 0;\r\n              return `${value} students (${percentage}%)`;\r\n            }\r\n          }\r\n        }\r\n      },\r\n      scales: {\r\n        y: {\r\n          beginAtZero: true,\r\n          ticks: {\r\n            stepSize: 1\r\n          },\r\n          title: {\r\n            display: true,\r\n            text: 'Number of Students'\r\n          }\r\n        }\r\n      }\r\n    }\r\n  });\r\n};\r\n\r\nconst updateAssessmentTypeChart = (data) => {\r\n  if (!assessmentTypeChart.value) return;\r\n  \r\n  const ctx = assessmentTypeChart.value.getContext('2d');\r\n  if (!ctx) return;\r\n\r\n  const existingChart = Chart.getChart(ctx);\r\n  if (existingChart) existingChart.destroy();\r\n\r\n  // Process the assessment type distribution data\r\n  const labels = data.labels || [];\r\n  const datasets = data.datasets || [];\r\n  \r\n  new Chart(ctx, {\r\n    type: 'bar',\r\n    data: {\r\n      labels: labels,\r\n      datasets: datasets.map((dataset, index) => ({\r\n        label: dataset.type,\r\n        data: dataset.data,\r\n        backgroundColor: [\r\n          'rgba(52, 211, 153, 0.8)',  // Green\r\n          'rgba(59, 130, 246, 0.8)',  // Blue\r\n          'rgba(251, 191, 36, 0.8)'   // Yellow\r\n        ][index],\r\n        borderWidth: 1\r\n      }))\r\n    },\r\n    options: {\r\n      responsive: true,\r\n      maintainAspectRatio: false,\r\n      scales: {\r\n        x: {\r\n          stacked: true,\r\n          ticks: {\r\n            maxRotation: 45,\r\n            minRotation: 45\r\n          }\r\n        },\r\n        y: {\r\n          stacked: true,\r\n          beginAtZero: true,\r\n          title: {\r\n            display: true,\r\n            text: 'Number of Assessments'\r\n          }\r\n        }\r\n      },\r\n      plugins: {\r\n        legend: {\r\n          position: 'top'\r\n        },\r\n        tooltip: {\r\n          callbacks: {\r\n            label: (context) => `${context.dataset.label}: ${context.raw || 0} assessments`\r\n          }\r\n        }\r\n      }\r\n    }\r\n  });\r\n};\r\n\r\nconst updatePerformanceTrendChart = (data) => {\r\n  if (!performanceTrendChart.value) {\r\n    console.warn('Performance trend chart reference not found');\r\n    return;\r\n  }\r\n  \r\n  const ctx = performanceTrendChart.value.getContext('2d');\r\n  if (!ctx) {\r\n    console.warn('Could not get 2d context for performance trend chart');\r\n    return;\r\n  }\r\n\r\n  const existingChart = Chart.getChart(ctx);\r\n  if (existingChart) {\r\n    existingChart.destroy();\r\n  }\r\n\r\n  // Ensure data is valid\r\n  const validData = Array.isArray(data) ? data : [];\r\n  console.log('Creating performance trend chart with data:', validData);\r\n\r\n  new Chart(ctx, {\r\n    type: 'line',\r\n    data: {\r\n      labels: validData.map(d => moment(d.date).format('MMM D, YYYY')),\r\n      datasets: [{\r\n        label: 'Average Score',\r\n        data: validData.map(d => Number(d.score) || 0),\r\n        borderColor: '#4CAF50',\r\n        backgroundColor: 'rgba(76, 175, 80, 0.1)',\r\n        tension: 0.4,\r\n        fill: true,\r\n        pointRadius: 4,\r\n        pointHoverRadius: 6\r\n      }]\r\n    },\r\n    options: {\r\n      responsive: true,\r\n      maintainAspectRatio: false,\r\n      plugins: {\r\n        legend: {\r\n          display: false\r\n        },\r\n        tooltip: {\r\n          callbacks: {\r\n            label: (context) => {\r\n              const dataPoint = validData[context.dataIndex];\r\n              return `${dataPoint.name}: ${(context.raw || 0).toFixed(1)}%`;\r\n            }\r\n          }\r\n        }\r\n      },\r\n      scales: {\r\n        y: {\r\n          beginAtZero: true,\r\n          max: 100,\r\n          ticks: {\r\n            stepSize: 20,\r\n            font: {\r\n              size: 12\r\n            }\r\n          },\r\n          title: {\r\n            display: true,\r\n            text: 'Average Score (%)',\r\n            font: {\r\n              size: 14,\r\n              weight: 'bold'\r\n            }\r\n          }\r\n        },\r\n        x: {\r\n          ticks: {\r\n            font: {\r\n              size: 12\r\n            },\r\n            maxRotation: 45,\r\n            minRotation: 45\r\n          }\r\n        }\r\n      }\r\n    }\r\n  });\r\n};\r\n\r\nconst updateAssessmentTypePerformanceChart = (data) => {\r\n  if (!assessmentTypePerformanceChart.value) return;\r\n  \r\n  const ctx = assessmentTypePerformanceChart.value.getContext('2d');\r\n  if (!ctx) return;\r\n\r\n  const existingChart = Chart.getChart(ctx);\r\n  if (existingChart) existingChart.destroy();\r\n\r\n  // Process the performance trends data by assessment type\r\n  const trendsByType = {\r\n    Quiz: [],\r\n    Activity: [],\r\n    'Performance Task': []\r\n  };\r\n\r\n  // Process performance trends data\r\n  if (Array.isArray(data.performanceTrends)) {\r\n    data.performanceTrends.forEach(trend => {\r\n      const type = trend.type || trend.name;\r\n      if (type in trendsByType) {\r\n        trendsByType[type].push({\r\n          date: new Date(trend.date),\r\n          score: parseFloat(trend.score) || 0\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  // Sort data points by date for each type\r\n  Object.keys(trendsByType).forEach(type => {\r\n    trendsByType[type].sort((a, b) => a.date - b.date);\r\n  });\r\n\r\n  // Get unique dates across all types\r\n  const allDates = [...new Set(\r\n    Object.values(trendsByType)\r\n      .flat()\r\n      .map(item => item.date)\r\n  )].sort((a, b) => a - b);\r\n\r\n  // Create datasets\r\n  const datasets = Object.entries(trendsByType).map(([type, data], index) => {\r\n    const colors = [\r\n      'rgb(52, 211, 153)',   // Green for Quiz\r\n      'rgb(59, 130, 246)',   // Blue for Activity\r\n      'rgb(251, 191, 36)'    // Yellow for Performance Task\r\n    ];\r\n    const color = colors[index];\r\n\r\n    return {\r\n      label: type,\r\n      data: allDates.map(date => {\r\n        const point = data.find(d => d.date.getTime() === date.getTime());\r\n        return point ? point.score : null;\r\n      }),\r\n      borderColor: color,\r\n      backgroundColor: color.replace('rgb', 'rgba').replace(')', ', 0.1)'),\r\n      fill: true,\r\n      tension: 0.4,\r\n      pointRadius: 4,\r\n      pointHoverRadius: 6,\r\n      spanGaps: true // This will connect points even if there are null values\r\n    };\r\n  });\r\n\r\n  new Chart(ctx, {\r\n    type: 'line',\r\n    data: {\r\n      labels: allDates.map(date => moment(date).format('MMM D, YYYY')),\r\n      datasets\r\n    },\r\n    options: {\r\n      responsive: true,\r\n      maintainAspectRatio: false,\r\n      interaction: {\r\n        intersect: false,\r\n        mode: 'index'\r\n      },\r\n      plugins: {\r\n        legend: {\r\n          position: 'top'\r\n        },\r\n        tooltip: {\r\n          callbacks: {\r\n            label: (context) => {\r\n              const value = context.raw !== null ? context.raw.toFixed(1) : 'N/A';\r\n              return `${context.dataset.label}: ${value}%`;\r\n            }\r\n          }\r\n        }\r\n      },\r\n      scales: {\r\n        y: {\r\n          beginAtZero: true,\r\n          max: 100,\r\n          title: {\r\n            display: true,\r\n            text: 'Score (%)'\r\n          }\r\n        },\r\n        x: {\r\n          ticks: {\r\n            maxRotation: 45,\r\n            minRotation: 45\r\n        }\r\n      }\r\n    }\r\n}\r\n  });\r\n};\r\n\r\nconst formatDate = (date) => {\r\n  return moment(date).format('MMM D, YYYY')\r\n}\r\n\r\nconst applyFilters = async () => {\r\n  // Save selected values to localStorage\r\n  if (selectedYear.value) {\r\n    localStorage.setItem('selectedYear', selectedYear.value)\r\n  } else {\r\n    localStorage.removeItem('selectedYear')\r\n  }\r\n\r\n  if (selectedSection.value) {\r\n    localStorage.setItem('selectedSection', selectedSection.value)\r\n  } else {\r\n    localStorage.removeItem('selectedSection')\r\n  }\r\n\r\n  if (selectedSubject.value) {\r\n    localStorage.setItem('selectedSubject', selectedSubject.value)\r\n  } else {\r\n    localStorage.removeItem('selectedSubject')\r\n  }\r\n\r\n  await fetchDashboardData()\r\n}\r\n\r\n// Watch for filter changes\r\nwatch(selectedYear, handleYearChange)\r\nwatch([selectedSection, selectedSubject], applyFilters)\r\nwatch([selectedStartDate, selectedEndDate], () => {\r\n  if (selectedStartDate.value && selectedEndDate.value) {\r\n    // Validate date range\r\n    const start = moment(selectedStartDate.value);\r\n    const end = moment(selectedEndDate.value);\r\n    \r\n    if (end.isBefore(start)) {\r\n      selectedEndDate.value = selectedStartDate.value;\r\n    }\r\n    \r\n    fetchDashboardData();\r\n  }\r\n})\r\n\r\nonMounted(async () => {\r\n  if (store.state.auth.user?._id && store.state.auth.token) {\r\n    console.log('Component mounted, initializing...');\r\n    \r\n    // Wait for the next tick to ensure DOM elements are rendered\r\n    await nextTick();\r\n    \r\n    try {\r\n      // Initialize empty charts first\r\n      console.log('Initializing empty charts...');\r\n      \r\n      updatePerformanceChart({\r\n        performanceDistribution: [0, 0, 0, 0, 0]\r\n      });\r\n      updateAssessmentTypeChart([\r\n        { type: 'Quiz', percentage: 0 },\r\n        { type: 'Activity', percentage: 0 },\r\n        { type: 'Performance Task', percentage: 0 }\r\n      ]);\r\n      updatePerformanceTrendChart([]);\r\n      updateAssessmentTypePerformanceChart({\r\n        assessmentCompletion: {\r\n          byType: {\r\n            quiz: 0,\r\n            activity: 0,\r\n            performancetask: 0\r\n          }\r\n        }\r\n      });\r\n      \r\n      console.log('Empty charts initialized');\r\n      \r\n      // Fetch sections and subjects\r\n      await fetchTeacherSectionsAndSubjects(selectedYear.value);\r\n      console.log('Sections and subjects fetched');\r\n      \r\n      // Fetch actual dashboard data\r\n      await fetchDashboardData();\r\n      console.log('Initial data fetch completed');\r\n\r\n      // Fetch Grades\r\n      const grades = await axios.get('http://localhost:8000/api/dashboard/failing/analytics',);\r\n      const quizzes = grades.data.filter(a => a.type === 'Quiz') || [];\r\n      \r\n      const activity = grades.data.filter(a => a.type === 'Activity') || [];\r\n      const performanceTask = grades.data.filter(a => a.type === 'Performance Task') || [];\r\n\r\n      quizzes[0].data.map((datas) => {\r\n        // console.log(datas.scores);\r\n        let temp = 0\r\n        let counter = 0;\r\n        Object.entries(datas.scores).forEach(([id, score]) => {\r\n          if(score <= 50){\r\n            temp = temp + score;\r\n            counter++;\r\n          }\r\n        })\r\n        quizzesGrades.value.push({average : Number((temp / counter).toFixed(2)) || 0, subject : datas.subject});\r\n      });\r\n      \r\n    } catch (error) {\r\n      console.error('Error during initialization:', error);\r\n    }\r\n  } else {\r\n    console.error('No user ID or token found');\r\n  }\r\n})\r\n</script>\r\n\r\n<template>\r\n    <div class=\"dashboard\">\r\n        <div class=\"d-flex justify-content-between align-items-center mb-4\">\r\n            <h2 class=\"dashboard-title\"></h2>\r\n\r\n            <!-- Combined Filter Dropdown -->\r\n            <div class=\"dropdown\">\r\n                <button class=\"btn btn-filter dropdown-toggle\" type=\"button\" id=\"filterDropdown\"\r\n                    data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\r\n                    <i class=\"fas fa-filter me-2\"></i>\r\n                    {{ getFilterDisplay() }}\r\n                </button>\r\n                <div class=\"dropdown-menu filter-menu p-3\" aria-labelledby=\"filterDropdown\">\r\n                    <h6 class=\"dropdown-header\">Filter Options</h6>\r\n                    <div class=\"mb-3\">\r\n                        <label class=\"form-label\">Academic Year</label>\r\n                        <select class=\"form-select mb-2\" v-model=\"selectedYear\" @change=\"handleYearChange\">\r\n                            <option value=\"\">All Years</option>\r\n                            <option value=\"1st\">1st Year</option>\r\n                            <option value=\"2nd\">2nd Year</option>\r\n                            <option value=\"3rd\">3rd Year</option>\r\n                            <option value=\"4th\">4th Year</option>\r\n                        </select>\r\n                    </div>\r\n                    <div class=\"mb-3\">\r\n                        <label class=\"form-label\">Section</label>\r\n                        <select class=\"form-select mb-2\" v-model=\"selectedSection\" :disabled=\"!selectedYear\">\r\n                            <option value=\"\">All Sections</option>\r\n                            <option v-for=\"section in sections\" :key=\"section\" :value=\"section\">{{ section }}</option>\r\n                        </select>\r\n                    </div>\r\n                    <div class=\"mb-3\">\r\n                        <label class=\"form-label\">Subject</label>\r\n                        <select class=\"form-select mb-2\" v-model=\"selectedSubject\" :disabled=\"!selectedYear\">\r\n                            <option value=\"\">All Subjects</option>\r\n                            <option v-for=\"subject in subjects\" :key=\"subject\" :value=\"subject\">{{ subject }}</option>\r\n                        </select>\r\n                    </div>\r\n                    <div class=\"mb-3\">\r\n                        <label class=\"form-label\">Date Range</label>\r\n                        <div class=\"d-flex gap-2\">\r\n                            <div class=\"flex-grow-1\">\r\n                                <label class=\"small text-muted\">From</label>\r\n                                <input type=\"date\" class=\"form-control form-control-sm\" v-model=\"selectedStartDate\"\r\n                                    :max=\"today\">\r\n                            </div>\r\n                            <div class=\"flex-grow-1\">\r\n                                <label class=\"small text-muted\">To</label>\r\n                                <input type=\"date\" class=\"form-control form-control-sm\" v-model=\"selectedEndDate\"\r\n                                    :max=\"today\">\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"dropdown-divider\"></div>\r\n                    <button class=\"btn btn-primary w-100\" @click=\"applyFilters\">Apply Filters</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n        <!-- Analytics Cards -->\r\n        <div class=\"row g-4\">\r\n            <!-- Total Students Card -->\r\n            <div class=\"col-md-3\">\r\n                <div class=\"dashboard-card\">\r\n                    <div class=\"icon-container\">\r\n                        <i class=\"fas fa-user-graduate\"></i>\r\n                    </div>\r\n                    <div class=\"card-info\">\r\n                        <h3 class=\"stat-title\">Total Students</h3>\r\n                        <div class=\"stat-value\">{{ totalStudents }}</div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <!-- Total SSP Advisers Card -->\r\n            <div class=\"col-md-3\">\r\n                <div class=\"dashboard-card\">\r\n                    <div class=\"icon-container\">\r\n                        <i class=\"fas fa-chalkboard-teacher\"></i>\r\n                    </div>\r\n                    <div class=\"card-info\">\r\n                        <h3 class=\"stat-title\">SSP Advisers</h3>\r\n                        <div class=\"stat-value\">{{ totalSSPAdvisers }}</div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <!-- Active Sections Card -->\r\n            <div class=\"col-md-3\">\r\n                <div class=\"dashboard-card\">\r\n                    <div class=\"icon-container\">\r\n                        <i class=\"fas fa-chalkboard\"></i>\r\n                    </div>\r\n                    <div class=\"card-info\">\r\n                        <h3 class=\"stat-title\">Active Sections</h3>\r\n                        <div class=\"stat-value\">{{ totalSections }}</div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <!-- Failing Students Card -->\r\n            <div class=\"col-md-3\">\r\n                <div class=\"dashboard-card\">\r\n                    <div class=\"icon-container\">\r\n                        <i class=\"fas fa-exclamation-triangle\"></i>\r\n                    </div>\r\n                    <div class=\"card-info\">\r\n                        <h3 class=\"stat-title\">Failing Students</h3>\r\n                        <div class=\"stat-value\">{{ failingStudents }}</div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n        <!-- Performance Stats Row -->\r\n        <div class=\"row mt-4\">\r\n            <div class=\"col-md-6\">\r\n                <div class=\"dashboard-card h-100\">\r\n                    <div class=\"icon-container\">\r\n                        <i class=\"fas fa-clock\"></i>\r\n                    </div>\r\n                    <div class=\"card-info\">\r\n                        <h3 class=\"stat-title\">Average Attendance</h3>\r\n                        <div class=\"stat-value\" v-if=\"hasAttendanceData\">{{ averageAttendance }}%</div>\r\n                        <div class=\"no-data\" v-else>No attendance data available</div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"col-md-6\">\r\n                <div class=\"dashboard-card h-100\">\r\n                    <div class=\"icon-container\">\r\n                        <i class=\"fas fa-tasks\"></i>\r\n                    </div>\r\n                    <div class=\"card-info\">\r\n                        <h3 class=\"stat-title\">Assessment Completion</h3>\r\n                        <div class=\"stat-value\" v-if=\"hasAssessmentData\">{{ assessmentCompletion.toFixed(2) }}%</div>\r\n                        <div class=\"no-data\" v-else>No assessment data available</div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n        <!-- Survey Stats -->\r\n        <div class=\"row mt-4 mb-4\">\r\n            <div class=\"col-12\">\r\n                <div class=\"chart-card\">\r\n                    <div class=\"card-body\">\r\n                        <h5 class=\"card-title\">\r\n                            <i class=\"fas fa-poll me-2\"></i>\r\n                            Survey Statistics\r\n                        </h5>\r\n                        <AllSurveyStat />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n        <!-- Charts Row -->\r\n        <div class=\"row mb-4\">\r\n            <!-- Performance Distribution Chart -->\r\n            <div class=\"col-md-6 mb-4\">\r\n                <div class=\"chart-card\">\r\n                    <div class=\"card-body\">\r\n                        <h5 class=\"card-title\">Grade Distribution</h5>\r\n                        <div class=\"chart-container\">\r\n                            <canvas ref=\"performanceChart\"></canvas>\r\n                            <p v-if=\"!hasPerformanceData\" class=\"no-data-message\">No performance data available</p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <!-- Assessment Type Distribution -->\r\n            <div class=\"col-md-6 mb-4\">\r\n                <div class=\"chart-card\">\r\n                    <div class=\"card-body\">\r\n                        <h5 class=\"card-title\">Assessment Type Distribution</h5>\r\n                        <div class=\"chart-container\">\r\n                            <canvas ref=\"assessmentTypeChart\"></canvas>\r\n                            <p v-if=\"!hasPerformanceData\" class=\"no-data-message\">No assessment data available</p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <!-- Performance Trend Chart -->\r\n            <div class=\"col-md-6 mb-4\">\r\n                <div class=\"chart-card\">\r\n                    <div class=\"card-body\">\r\n                        <h5 class=\"card-title\">Performance Trends</h5>\r\n                        <div class=\"chart-container\">\r\n                            <canvas ref=\"performanceTrendChart\"></canvas>\r\n                            <p v-if=\"!hasPerformanceData\" class=\"no-data-message\">No performance data available</p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <!-- Assessment Type Performance -->\r\n            <div class=\"col-md-6 mb-4\">\r\n                <div class=\"chart-card\">\r\n                    <div class=\"card-body\">\r\n                        <h5 class=\"card-title\">Performance by Assessment Type</h5>\r\n                        <div class=\"chart-container\">\r\n                            <canvas ref=\"assessmentTypePerformanceChart\"></canvas>\r\n                            <p v-if=\"!hasPerformanceData\" class=\"no-data-message\">No performance data available</p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<style scoped>\r\n.dashboard {\r\n  padding: 2rem;\r\n  background-color: #f8f9fa;\r\n  min-height: 100vh;\r\n}\r\n\r\n.dashboard-title {\r\n  font-size: 2rem;\r\n  font-weight: 700;\r\n  color: #2c3e50;\r\n  margin: 0;\r\n  letter-spacing: -0.5px;\r\n}\r\n\r\n.dashboard-card {\r\n  background: #fff;\r\n  border-radius: 12px;\r\n  padding: 1.5rem;\r\n  box-shadow: 0 2px 12px rgba(0, 0, 0, 0.08);\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 1.25rem;\r\n  height: 100%;\r\n  transition: transform 0.2s ease, box-shadow 0.2s ease;\r\n}\r\n\r\n.dashboard-card:hover {\r\n  transform: translateY(-2px);\r\n  box-shadow: 0 4px 15px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n.icon-container {\r\n  width: 52px;\r\n  height: 52px;\r\n  border-radius: 12px;\r\n  background-color: #003366;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  transition: transform 0.2s ease;\r\n}\r\n\r\n.dashboard-card:hover .icon-container {\r\n  transform: scale(1.05);\r\n}\r\n\r\n.icon-container i {\r\n  color: white;\r\n  font-size: 1.5rem;\r\n}\r\n\r\n.card-info {\r\n  flex: 1;\r\n}\r\n\r\n.stat-title {\r\n  font-size: 0.875rem;\r\n  color: #64748b;\r\n  margin: 0 0 0.5rem 0;\r\n  font-weight: 600;\r\n  letter-spacing: 0.3px;\r\n}\r\n\r\n.stat-value {\r\n  font-size: 1.75rem;\r\n  font-weight: 700;\r\n  color: #1e293b;\r\n  line-height: 1.2;\r\n}\r\n\r\n.no-data {\r\n  color: #94a3b8;\r\n  font-style: italic;\r\n  font-size: 0.875rem;\r\n}\r\n\r\n.chart-container {\r\n  position: relative;\r\n  height: 300px;\r\n  width: 100%;\r\n  margin-bottom: 1rem;\r\n}\r\n\r\n.chart-card {\r\n  background: white;\r\n  border-radius: 12px;\r\n  box-shadow: 0 2px 12px rgba(0, 0, 0, 0.08);\r\n  height: 100%;\r\n  padding: 1.5rem;\r\n}\r\n\r\n.card-title {\r\n  font-size: 1.125rem;\r\n  font-weight: 700;\r\n  color: #1e293b;\r\n  margin-bottom: 1.5rem;\r\n  letter-spacing: -0.3px;\r\n}\r\n\r\n.no-data-message {\r\n  position: absolute;\r\n  top: 50%;\r\n  left: 50%;\r\n  transform: translate(-50%, -50%);\r\n  color: #94a3b8;\r\n  font-style: italic;\r\n  text-align: center;\r\n  width: 100%;\r\n    padding: 1rem;\r\n}\r\n\r\n.btn-filter {\r\n  background-color: white;\r\n  border: 1px solid #e2e8f0;\r\n  padding: 0.75rem 1.25rem;\r\n  font-size: 0.9rem;\r\n  color: #1e293b;\r\n  min-width: 220px;\r\n  text-align: left;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  border-radius: 8px;\r\n  font-weight: 500;\r\n  transition: all 0.2s ease;\r\n}\r\n\r\n.btn-filter:hover {\r\n  background-color: #f8fafc;\r\n  border-color: #003366;\r\n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.05);\r\n}\r\n\r\n.filter-menu {\r\n  width: 320px;\r\n  padding: 1.25rem;\r\n  border: none;\r\n  box-shadow: 0 4px 20px rgba(0, 0, 0, 0.15);\r\n  border-radius: 12px;\r\n}\r\n\r\n.dropdown-header {\r\n  color: #003366;\r\n  font-weight: 700;\r\n  padding: 0;\r\n  margin-bottom: 1.25rem;\r\n  font-size: 1rem;\r\n}\r\n\r\n.form-label {\r\n  font-weight: 600;\r\n  color: #475569;\r\n  margin-bottom: 0.5rem;\r\n  font-size: 0.875rem;\r\n}\r\n\r\n.form-select, .form-control {\r\n  border: 1px solid #e2e8f0;\r\n  border-radius: 8px;\r\n  padding: 0.625rem;\r\n  font-size: 0.9rem;\r\n  color: #1e293b;\r\n  background-color: #fff;\r\n  transition: all 0.2s ease;\r\n}\r\n\r\n.form-select:hover, .form-control:hover {\r\n  border-color: #003366;\r\n}\r\n\r\n.form-select:focus, .form-control:focus {\r\n  border-color: #003366;\r\n  box-shadow: 0 0 0 2px rgba(0, 51, 102, 0.1);\r\n}\r\n\r\n.form-select:disabled {\r\n  background-color: #f1f5f9;\r\n  cursor: not-allowed;\r\n  opacity: 0.7;\r\n}\r\n\r\n.dropdown-divider {\r\n  margin: 1.25rem 0;\r\n  border-top: 1px solid #e2e8f0;\r\n}\r\n\r\n.table {\r\n  margin-bottom: 0;\r\n}\r\n\r\n.table th {\r\n  font-weight: 600;\r\n  color: #475569;\r\n  border-bottom-width: 1px;\r\n  padding: 1rem;\r\n  font-size: 0.875rem;\r\n  text-transform: uppercase;\r\n  letter-spacing: 0.5px;\r\n}\r\n\r\n.table td {\r\n  padding: 1rem;\r\n  color: #1e293b;\r\n  vertical-align: middle;\r\n  font-size: 0.9rem;\r\n  border-bottom: 1px solid #e2e8f0;\r\n}\r\n\r\n.table tr:last-child td {\r\n  border-bottom: none;\r\n}\r\n\r\n@media (max-width: 768px) {\r\n  .dashboard {\r\n    padding: 1rem;\r\n  }\r\n  \r\n  .dashboard-card {\r\n    margin-bottom: 1rem;\r\n  }\r\n\r\n  .filter-menu {\r\n    width: 100%;\r\n    max-width: 320px;\r\n  }\r\n\r\n  .btn-filter {\r\n    min-width: auto;\r\n    width: 100%;\r\n  }\r\n}\r\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}