{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, createCommentVNode as _createCommentVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, renderList as _renderList, Fragment as _Fragment, normalizeClass as _normalizeClass } from \"vue\";\nconst _hoisted_1 = {\n  class: \"student-dashboard\"\n};\nconst _hoisted_2 = {\n  class: \"greeting-section\"\n};\nconst _hoisted_3 = {\n  class: \"stats-row\"\n};\nconst _hoisted_4 = {\n  class: \"stat-card\"\n};\nconst _hoisted_5 = {\n  class: \"stat-content\"\n};\nconst _hoisted_6 = {\n  key: 0,\n  class: \"stat-value\"\n};\nconst _hoisted_7 = {\n  key: 1,\n  class: \"skeleton-loader\"\n};\nconst _hoisted_8 = {\n  class: \"stat-card\"\n};\nconst _hoisted_9 = {\n  class: \"stat-content\"\n};\nconst _hoisted_10 = {\n  key: 0,\n  class: \"stat-value\"\n};\nconst _hoisted_11 = {\n  key: 1,\n  class: \"skeleton-loader\"\n};\nconst _hoisted_12 = {\n  class: \"stat-card\"\n};\nconst _hoisted_13 = {\n  class: \"stat-content\"\n};\nconst _hoisted_14 = {\n  key: 0,\n  class: \"stat-value\"\n};\nconst _hoisted_15 = {\n  key: 1,\n  class: \"skeleton-loader\"\n};\nconst _hoisted_16 = {\n  class: \"stat-card\"\n};\nconst _hoisted_17 = {\n  class: \"stat-content\"\n};\nconst _hoisted_18 = {\n  key: 0,\n  class: \"stat-value\"\n};\nconst _hoisted_19 = {\n  key: 1,\n  class: \"skeleton-loader\"\n};\nconst _hoisted_20 = {\n  class: \"widget-row\"\n};\nconst _hoisted_21 = {\n  class: \"widget-card\"\n};\nconst _hoisted_22 = {\n  class: \"widget-header\"\n};\nconst _hoisted_23 = {\n  key: 0,\n  class: \"loading-placeholder\"\n};\nconst _hoisted_24 = {\n  key: 1,\n  class: \"no-data\"\n};\nconst _hoisted_25 = {\n  key: 2,\n  class: \"assessment-list\"\n};\nconst _hoisted_26 = {\n  class: \"data-table\"\n};\nconst _hoisted_27 = {\n  class: \"score\"\n};\nconst _hoisted_28 = {\n  class: \"score-percent\"\n};\nconst _hoisted_29 = {\n  class: \"widget-row\"\n};\nconst _hoisted_30 = {\n  class: \"widget-card\"\n};\nconst _hoisted_31 = {\n  class: \"widget-header\"\n};\nconst _hoisted_32 = {\n  key: 0,\n  class: \"loading-placeholder\"\n};\nconst _hoisted_33 = {\n  key: 1,\n  class: \"no-data\"\n};\nconst _hoisted_34 = {\n  key: 2,\n  class: \"attendance-list\"\n};\nconst _hoisted_35 = {\n  class: \"data-table\"\n};\nconst _hoisted_36 = {\n  class: \"chart-row\"\n};\nconst _hoisted_37 = {\n  class: \"chart-card\"\n};\nconst _hoisted_38 = {\n  class: \"chart-container\"\n};\nconst _hoisted_39 = {\n  ref: \"assessmentChart\",\n  id: \"assessmentChart\"\n};\nconst _hoisted_40 = {\n  class: \"chart-card\"\n};\nconst _hoisted_41 = {\n  class: \"chart-container\"\n};\nconst _hoisted_42 = {\n  ref: \"attendanceChart\",\n  id: \"attendanceChart\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_router_link = _resolveComponent(\"router-link\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"h2\", null, \"Welcome, \" + _toDisplayString($setup.user.firstName) + \"!\", 1 /* TEXT */), _cache[0] || (_cache[0] = _createElementVNode(\"p\", {\n    class: \"subtitle\"\n  }, \"Here's your academic performance overview\", -1 /* HOISTED */))]), _createCommentVNode(\" Stats Cards Row \"), _createElementVNode(\"div\", _hoisted_3, [_createElementVNode(\"div\", _hoisted_4, [_cache[2] || (_cache[2] = _createElementVNode(\"div\", {\n    class: \"stat-icon\"\n  }, [_createElementVNode(\"i\", {\n    class: \"fas fa-book\"\n  })], -1 /* HOISTED */)), _createElementVNode(\"div\", _hoisted_5, [_cache[1] || (_cache[1] = _createElementVNode(\"h3\", null, \"Total Subjects\", -1 /* HOISTED */)), !$setup.isLoading ? (_openBlock(), _createElementBlock(\"div\", _hoisted_6, _toDisplayString($setup.subjectCount), 1 /* TEXT */)) : (_openBlock(), _createElementBlock(\"div\", _hoisted_7))])]), _createElementVNode(\"div\", _hoisted_8, [_cache[4] || (_cache[4] = _createElementVNode(\"div\", {\n    class: \"stat-icon\"\n  }, [_createElementVNode(\"i\", {\n    class: \"fas fa-clipboard-check\"\n  })], -1 /* HOISTED */)), _createElementVNode(\"div\", _hoisted_9, [_cache[3] || (_cache[3] = _createElementVNode(\"h3\", null, \"Assessments\", -1 /* HOISTED */)), !$setup.isLoading ? (_openBlock(), _createElementBlock(\"div\", _hoisted_10, _toDisplayString($setup.assessmentCount), 1 /* TEXT */)) : (_openBlock(), _createElementBlock(\"div\", _hoisted_11))])]), _createElementVNode(\"div\", _hoisted_12, [_cache[6] || (_cache[6] = _createElementVNode(\"div\", {\n    class: \"stat-icon\"\n  }, [_createElementVNode(\"i\", {\n    class: \"fas fa-chart-line\"\n  })], -1 /* HOISTED */)), _createElementVNode(\"div\", _hoisted_13, [_cache[5] || (_cache[5] = _createElementVNode(\"h3\", null, \"Average Score\", -1 /* HOISTED */)), !$setup.isLoading ? (_openBlock(), _createElementBlock(\"div\", _hoisted_14, _toDisplayString($setup.averageGrade ? $setup.averageGrade.toFixed(2) + '%' : 'No data'), 1 /* TEXT */)) : (_openBlock(), _createElementBlock(\"div\", _hoisted_15))])]), _createElementVNode(\"div\", _hoisted_16, [_cache[8] || (_cache[8] = _createElementVNode(\"div\", {\n    class: \"stat-icon\"\n  }, [_createElementVNode(\"i\", {\n    class: \"fas fa-user-check\"\n  })], -1 /* HOISTED */)), _createElementVNode(\"div\", _hoisted_17, [_cache[7] || (_cache[7] = _createElementVNode(\"h3\", null, \"Attendance Rate\", -1 /* HOISTED */)), !$setup.isLoading ? (_openBlock(), _createElementBlock(\"div\", _hoisted_18, _toDisplayString($setup.attendanceRate ? $setup.attendanceRate.toFixed(2) + '%' : 'No data'), 1 /* TEXT */)) : (_openBlock(), _createElementBlock(\"div\", _hoisted_19))])])]), _createCommentVNode(\" Recent Assessments Section \"), _createElementVNode(\"div\", _hoisted_20, [_createElementVNode(\"div\", _hoisted_21, [_createElementVNode(\"div\", _hoisted_22, [_cache[10] || (_cache[10] = _createElementVNode(\"h3\", null, \"Recent Assessments\", -1 /* HOISTED */)), _createVNode(_component_router_link, {\n    to: \"/student/assessments\",\n    class: \"view-all-link\"\n  }, {\n    default: _withCtx(() => _cache[9] || (_cache[9] = [_createTextVNode(\" View All \"), _createElementVNode(\"i\", {\n      class: \"fas fa-arrow-right\"\n    }, null, -1 /* HOISTED */)])),\n    _: 1 /* STABLE */\n  })]), $setup.isLoading ? (_openBlock(), _createElementBlock(\"div\", _hoisted_23, _cache[11] || (_cache[11] = [_createElementVNode(\"div\", {\n    class: \"spinner\"\n  }, null, -1 /* HOISTED */), _createElementVNode(\"p\", null, \"Loading assessments...\", -1 /* HOISTED */)]))) : $setup.recentAssessments.length === 0 ? (_openBlock(), _createElementBlock(\"div\", _hoisted_24, _cache[12] || (_cache[12] = [_createElementVNode(\"i\", {\n    class: \"fas fa-clipboard\"\n  }, null, -1 /* HOISTED */), _createElementVNode(\"p\", null, \"No assessment data available\", -1 /* HOISTED */)]))) : (_openBlock(), _createElementBlock(\"div\", _hoisted_25, [_createElementVNode(\"table\", _hoisted_26, [_cache[13] || (_cache[13] = _createElementVNode(\"thead\", null, [_createElementVNode(\"tr\", null, [_createElementVNode(\"th\", null, \"Date\"), _createElementVNode(\"th\", null, \"Subject\"), _createElementVNode(\"th\", null, \"Title\"), _createElementVNode(\"th\", null, \"Type\"), _createElementVNode(\"th\", null, \"Score\")])], -1 /* HOISTED */)), _createElementVNode(\"tbody\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.recentAssessments, assessment => {\n    return _openBlock(), _createElementBlock(\"tr\", {\n      key: assessment._id\n    }, [_createElementVNode(\"td\", null, _toDisplayString($setup.formatDate(assessment.date)), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(assessment.subject), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(assessment.title), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(assessment.type), 1 /* TEXT */), _createElementVNode(\"td\", null, [_createElementVNode(\"span\", _hoisted_27, [_createTextVNode(_toDisplayString(assessment.score) + \" / \" + _toDisplayString(assessment.maxScore) + \" \", 1 /* TEXT */), _createElementVNode(\"span\", _hoisted_28, \" (\" + _toDisplayString((assessment.score / assessment.maxScore * 100).toFixed(0)) + \"%) \", 1 /* TEXT */)])])]);\n  }), 128 /* KEYED_FRAGMENT */))])])]))])]), _createCommentVNode(\" Attendance Record Section \"), _createElementVNode(\"div\", _hoisted_29, [_createElementVNode(\"div\", _hoisted_30, [_createElementVNode(\"div\", _hoisted_31, [_cache[15] || (_cache[15] = _createElementVNode(\"h3\", null, \"Recent Attendance\", -1 /* HOISTED */)), _createVNode(_component_router_link, {\n    to: \"/student/attendance\",\n    class: \"view-all-link\"\n  }, {\n    default: _withCtx(() => _cache[14] || (_cache[14] = [_createTextVNode(\" View All \"), _createElementVNode(\"i\", {\n      class: \"fas fa-arrow-right\"\n    }, null, -1 /* HOISTED */)])),\n    _: 1 /* STABLE */\n  })]), $setup.isLoading ? (_openBlock(), _createElementBlock(\"div\", _hoisted_32, _cache[16] || (_cache[16] = [_createElementVNode(\"div\", {\n    class: \"spinner\"\n  }, null, -1 /* HOISTED */), _createElementVNode(\"p\", null, \"Loading attendance records...\", -1 /* HOISTED */)]))) : $setup.recentAttendance.length === 0 ? (_openBlock(), _createElementBlock(\"div\", _hoisted_33, _cache[17] || (_cache[17] = [_createElementVNode(\"i\", {\n    class: \"fas fa-calendar-check\"\n  }, null, -1 /* HOISTED */), _createElementVNode(\"p\", null, \"No attendance data available\", -1 /* HOISTED */)]))) : (_openBlock(), _createElementBlock(\"div\", _hoisted_34, [_createElementVNode(\"table\", _hoisted_35, [_cache[18] || (_cache[18] = _createElementVNode(\"thead\", null, [_createElementVNode(\"tr\", null, [_createElementVNode(\"th\", null, \"Date\"), _createElementVNode(\"th\", null, \"Subject\"), _createElementVNode(\"th\", null, \"Status\"), _createElementVNode(\"th\", null, \"Remarks\")])], -1 /* HOISTED */)), _createElementVNode(\"tbody\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.recentAttendance, record => {\n    return _openBlock(), _createElementBlock(\"tr\", {\n      key: record._id\n    }, [_createElementVNode(\"td\", null, _toDisplayString($setup.formatDate(record.date)), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(record.subject), 1 /* TEXT */), _createElementVNode(\"td\", null, [_createElementVNode(\"span\", {\n      class: _normalizeClass(['status-badge', $setup.getStatusClass(record.status)])\n    }, _toDisplayString(record.status), 3 /* TEXT, CLASS */)]), _createElementVNode(\"td\", null, _toDisplayString(record.remarks || '-'), 1 /* TEXT */)]);\n  }), 128 /* KEYED_FRAGMENT */))])])]))])]), _createCommentVNode(\" Performance Charts \"), _createElementVNode(\"div\", _hoisted_36, [_createElementVNode(\"div\", _hoisted_37, [_cache[19] || (_cache[19] = _createElementVNode(\"h3\", null, \"Assessment Performance\", -1 /* HOISTED */)), _createElementVNode(\"div\", _hoisted_38, [_createElementVNode(\"canvas\", _hoisted_39, null, 512 /* NEED_PATCH */)])]), _createElementVNode(\"div\", _hoisted_40, [_cache[20] || (_cache[20] = _createElementVNode(\"h3\", null, \"Attendance Overview\", -1 /* HOISTED */)), _createElementVNode(\"div\", _hoisted_41, [_createElementVNode(\"canvas\", _hoisted_42, null, 512 /* NEED_PATCH */)])])])]);\n}","map":{"version":3,"names":["class","key","ref","id","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","_toDisplayString","$setup","user","firstName","_createCommentVNode","_hoisted_3","_hoisted_4","_hoisted_5","isLoading","_hoisted_6","subjectCount","_hoisted_7","_hoisted_8","_hoisted_9","_hoisted_10","assessmentCount","_hoisted_11","_hoisted_12","_hoisted_13","_hoisted_14","averageGrade","toFixed","_hoisted_15","_hoisted_16","_hoisted_17","_hoisted_18","attendanceRate","_hoisted_19","_hoisted_20","_hoisted_21","_hoisted_22","_createVNode","_component_router_link","to","default","_withCtx","_cache","_createTextVNode","_","_hoisted_23","recentAssessments","length","_hoisted_24","_hoisted_25","_hoisted_26","_Fragment","_renderList","assessment","_id","formatDate","date","subject","title","type","_hoisted_27","score","maxScore","_hoisted_28","_hoisted_29","_hoisted_30","_hoisted_31","_hoisted_32","recentAttendance","_hoisted_33","_hoisted_34","_hoisted_35","record","_normalizeClass","getStatusClass","status","remarks","_hoisted_36","_hoisted_37","_hoisted_38","_hoisted_39","_hoisted_40","_hoisted_41","_hoisted_42"],"sources":["D:\\au_dev\\client\\src\\views\\StudentDashboard.vue"],"sourcesContent":["<template>\r\n  <div class=\"student-dashboard\">\r\n    <div class=\"greeting-section\">\r\n      <h2>Welcome, {{ user.firstName }}!</h2>\r\n      <p class=\"subtitle\">Here's your academic performance overview</p>\r\n    </div>\r\n\r\n    <!-- Stats Cards Row -->\r\n    <div class=\"stats-row\">\r\n      <div class=\"stat-card\">\r\n        <div class=\"stat-icon\">\r\n          <i class=\"fas fa-book\"></i>\r\n        </div>\r\n        <div class=\"stat-content\">\r\n          <h3>Total Subjects</h3>\r\n          <div class=\"stat-value\" v-if=\"!isLoading\">{{ subjectCount }}</div>\r\n          <div class=\"skeleton-loader\" v-else></div>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"stat-card\">\r\n        <div class=\"stat-icon\">\r\n          <i class=\"fas fa-clipboard-check\"></i>\r\n        </div>\r\n        <div class=\"stat-content\">\r\n          <h3>Assessments</h3>\r\n          <div class=\"stat-value\" v-if=\"!isLoading\">{{ assessmentCount }}</div>\r\n          <div class=\"skeleton-loader\" v-else></div>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"stat-card\">\r\n        <div class=\"stat-icon\">\r\n          <i class=\"fas fa-chart-line\"></i>\r\n        </div>\r\n        <div class=\"stat-content\">\r\n          <h3>Average Score</h3>\r\n          <div class=\"stat-value\" v-if=\"!isLoading\">\r\n            {{ averageGrade ? averageGrade.toFixed(2) + '%' : 'No data' }}\r\n          </div>\r\n          <div class=\"skeleton-loader\" v-else></div>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"stat-card\">\r\n        <div class=\"stat-icon\">\r\n          <i class=\"fas fa-user-check\"></i>\r\n        </div>\r\n        <div class=\"stat-content\">\r\n          <h3>Attendance Rate</h3>\r\n          <div class=\"stat-value\" v-if=\"!isLoading\">\r\n            {{ attendanceRate ? attendanceRate.toFixed(2) + '%' : 'No data' }}\r\n          </div>\r\n          <div class=\"skeleton-loader\" v-else></div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Recent Assessments Section -->\r\n    <div class=\"widget-row\">\r\n      <div class=\"widget-card\">\r\n        <div class=\"widget-header\">\r\n          <h3>Recent Assessments</h3>\r\n          <router-link to=\"/student/assessments\" class=\"view-all-link\">\r\n            View All <i class=\"fas fa-arrow-right\"></i>\r\n          </router-link>\r\n        </div>\r\n        <div v-if=\"isLoading\" class=\"loading-placeholder\">\r\n          <div class=\"spinner\"></div>\r\n          <p>Loading assessments...</p>\r\n        </div>\r\n        <div v-else-if=\"recentAssessments.length === 0\" class=\"no-data\">\r\n          <i class=\"fas fa-clipboard\"></i>\r\n          <p>No assessment data available</p>\r\n        </div>\r\n        <div v-else class=\"assessment-list\">\r\n          <table class=\"data-table\">\r\n            <thead>\r\n              <tr>\r\n                <th>Date</th>\r\n                <th>Subject</th>\r\n                <th>Title</th>\r\n                <th>Type</th>\r\n                <th>Score</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              <tr v-for=\"assessment in recentAssessments\" :key=\"assessment._id\">\r\n                <td>{{ formatDate(assessment.date) }}</td>\r\n                <td>{{ assessment.subject }}</td>\r\n                <td>{{ assessment.title }}</td>\r\n                <td>{{ assessment.type }}</td>\r\n                <td>\r\n                  <span class=\"score\">\r\n                    {{ assessment.score }} / {{ assessment.maxScore }}\r\n                    <span class=\"score-percent\">\r\n                      ({{ ((assessment.score / assessment.maxScore) * 100).toFixed(0) }}%)\r\n                    </span>\r\n                  </span>\r\n                </td>\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Attendance Record Section -->\r\n    <div class=\"widget-row\">\r\n      <div class=\"widget-card\">\r\n        <div class=\"widget-header\">\r\n          <h3>Recent Attendance</h3>\r\n          <router-link to=\"/student/attendance\" class=\"view-all-link\">\r\n            View All <i class=\"fas fa-arrow-right\"></i>\r\n          </router-link>\r\n        </div>\r\n        <div v-if=\"isLoading\" class=\"loading-placeholder\">\r\n          <div class=\"spinner\"></div>\r\n          <p>Loading attendance records...</p>\r\n        </div>\r\n        <div v-else-if=\"recentAttendance.length === 0\" class=\"no-data\">\r\n          <i class=\"fas fa-calendar-check\"></i>\r\n          <p>No attendance data available</p>\r\n        </div>\r\n        <div v-else class=\"attendance-list\">\r\n          <table class=\"data-table\">\r\n            <thead>\r\n              <tr>\r\n                <th>Date</th>\r\n                <th>Subject</th>\r\n                <th>Status</th>\r\n                <th>Remarks</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              <tr v-for=\"record in recentAttendance\" :key=\"record._id\">\r\n                <td>{{ formatDate(record.date) }}</td>\r\n                <td>{{ record.subject }}</td>\r\n                <td>\r\n                  <span :class=\"['status-badge', getStatusClass(record.status)]\">\r\n                    {{ record.status }}\r\n                  </span>\r\n                </td>\r\n                <td>{{ record.remarks || '-' }}</td>\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Performance Charts -->\r\n    <div class=\"chart-row\">\r\n      <div class=\"chart-card\">\r\n        <h3>Assessment Performance</h3>\r\n        <div class=\"chart-container\">\r\n          <canvas ref=\"assessmentChart\" id=\"assessmentChart\"></canvas>\r\n        </div>\r\n      </div>\r\n      <div class=\"chart-card\">\r\n        <h3>Attendance Overview</h3>\r\n        <div class=\"chart-container\">\r\n          <canvas ref=\"attendanceChart\" id=\"attendanceChart\"></canvas>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { ref, computed, onMounted } from 'vue'\r\nimport { useStore } from 'vuex'\r\nimport axios from 'axios'\r\nimport Chart from 'chart.js/auto'\r\n\r\nexport default {\r\n  name: 'StudentDashboard',\r\n  setup() {\r\n    const store = useStore()\r\n    const user = computed(() => store.state.auth.user)\r\n    const assessmentChart = ref(null)\r\n    const attendanceChart = ref(null)\r\n    const isLoading = ref(true)\r\n    \r\n    // Data references\r\n    const assessments = ref([])\r\n    const attendance = ref([])\r\n    \r\n    // Computed values\r\n    const subjectCount = computed(() => {\r\n      const subjects = new Set()\r\n      assessments.value.forEach(subject => {\r\n        subjects.add(subject.subject)\r\n      })\r\n      return subjects.size\r\n    })\r\n    \r\n    const assessmentCount = computed(() => {\r\n      let count = 0\r\n      assessments.value.forEach(subject => {\r\n        count += subject.assessments.length\r\n      })\r\n      return count\r\n    })\r\n    \r\n    const averageGrade = computed(() => {\r\n      let totalScore = 0\r\n      let totalMaxScore = 0\r\n      \r\n      assessments.value.forEach(subject => {\r\n        subject.assessments.forEach(assessment => {\r\n          totalScore += assessment.score\r\n          totalMaxScore += assessment.maxScore\r\n        })\r\n      })\r\n      \r\n      return totalMaxScore > 0 ? (totalScore / totalMaxScore) * 100 : 0\r\n    })\r\n    \r\n    const attendanceRate = computed(() => {\r\n      let presentCount = 0\r\n      let totalCount = 0\r\n      \r\n      attendance.value.forEach(subject => {\r\n        subject.records.forEach(record => {\r\n          totalCount++\r\n          if (record.status.toLowerCase() === 'present') {\r\n            presentCount++\r\n          }\r\n        })\r\n      })\r\n      \r\n      return totalCount > 0 ? (presentCount / totalCount) * 100 : 0\r\n    })\r\n    \r\n    const recentAssessments = computed(() => {\r\n      const allAssessments = []\r\n      \r\n      assessments.value.forEach(subject => {\r\n        subject.assessments.forEach(assessment => {\r\n          allAssessments.push({\r\n            ...assessment,\r\n            subject: subject.subject\r\n          })\r\n        })\r\n      })\r\n      \r\n      return allAssessments\r\n        .sort((a, b) => new Date(b.date) - new Date(a.date))\r\n        .slice(0, 5)\r\n    })\r\n    \r\n    const recentAttendance = computed(() => {\r\n      const allAttendance = []\r\n      \r\n      attendance.value.forEach(subject => {\r\n        subject.records.forEach(record => {\r\n          allAttendance.push({\r\n            ...record,\r\n            subject: subject.subject\r\n          })\r\n        })\r\n      })\r\n      \r\n      return allAttendance\r\n        .sort((a, b) => new Date(b.date) - new Date(a.date))\r\n        .slice(0, 5)\r\n    })\r\n    \r\n    // Methods\r\n    const formatDate = (dateString) => {\r\n      const date = new Date(dateString)\r\n      return date.toLocaleDateString('en-US', {\r\n        year: 'numeric',\r\n        month: 'short',\r\n        day: 'numeric'\r\n      })\r\n    }\r\n    \r\n    const getStatusClass = (status) => {\r\n      const statusLower = status.toLowerCase()\r\n      if (statusLower === 'present') return 'status-present'\r\n      if (statusLower === 'late') return 'status-late'\r\n      if (statusLower === 'absent') return 'status-absent'\r\n      return ''\r\n    }\r\n    \r\n    const createAssessmentChart = () => {\r\n      if (!assessmentChart.value) return\r\n      \r\n      const ctx = assessmentChart.value.getContext('2d')\r\n      \r\n      // Collect data for chart\r\n      const subjects = []\r\n      const scoreData = []\r\n      const maxScoreData = []\r\n      \r\n      assessments.value.forEach(subject => {\r\n        let subjectTotalScore = 0\r\n        let subjectTotalMaxScore = 0\r\n        \r\n        subject.assessments.forEach(assessment => {\r\n          subjectTotalScore += assessment.score\r\n          subjectTotalMaxScore += assessment.maxScore\r\n        })\r\n        \r\n        subjects.push(subject.subject)\r\n        scoreData.push((subjectTotalScore / subjectTotalMaxScore) * 100)\r\n        maxScoreData.push(100) // Max is always 100%\r\n      })\r\n      \r\n      new Chart(ctx, {\r\n        type: 'bar',\r\n        data: {\r\n          labels: subjects,\r\n          datasets: [\r\n            {\r\n              label: 'Your Score (%)',\r\n              data: scoreData,\r\n              backgroundColor: '#4299e1',\r\n              borderColor: '#3182ce',\r\n              borderWidth: 1\r\n            },\r\n            {\r\n              label: 'Max Score',\r\n              data: maxScoreData,\r\n              backgroundColor: '#a0aec0',\r\n              borderColor: '#718096',\r\n              borderWidth: 1\r\n            }\r\n          ]\r\n        },\r\n        options: {\r\n          responsive: true,\r\n          maintainAspectRatio: false,\r\n          scales: {\r\n            y: {\r\n              beginAtZero: true,\r\n              max: 100,\r\n              title: {\r\n                display: true,\r\n                text: 'Score (%)'\r\n              }\r\n            }\r\n          }\r\n        }\r\n      })\r\n    }\r\n    \r\n    const createAttendanceChart = () => {\r\n      if (!attendanceChart.value) return\r\n      \r\n      const ctx = attendanceChart.value.getContext('2d')\r\n      \r\n      // Count attendance status\r\n      let presentCount = 0\r\n      let lateCount = 0\r\n      let absentCount = 0\r\n      \r\n      attendance.value.forEach(subject => {\r\n        subject.records.forEach(record => {\r\n          const status = record.status.toLowerCase()\r\n          if (status === 'present') presentCount++\r\n          else if (status === 'late') lateCount++\r\n          else if (status === 'absent') absentCount++\r\n        })\r\n      })\r\n      \r\n      new Chart(ctx, {\r\n        type: 'doughnut',\r\n        data: {\r\n          labels: ['Present', 'Late', 'Absent'],\r\n          datasets: [\r\n            {\r\n              data: [presentCount, lateCount, absentCount],\r\n              backgroundColor: ['#48bb78', '#ecc94b', '#f56565'],\r\n              borderWidth: 1\r\n            }\r\n          ]\r\n        },\r\n        options: {\r\n          responsive: true,\r\n          maintainAspectRatio: false,\r\n          plugins: {\r\n            legend: {\r\n              position: 'bottom'\r\n            }\r\n          }\r\n        }\r\n      })\r\n    }\r\n    \r\n    // Fetch data\r\n    const fetchData = async () => {\r\n      isLoading.value = true\r\n      \r\n      try {\r\n        // Fetch assessment data\r\n        const assessmentResponse = await axios.get('/api/users/student/assessments', {\r\n          headers: {\r\n            Authorization: `Bearer ${store.state.auth.token}`\r\n          }\r\n        })\r\n        assessments.value = assessmentResponse.data\r\n        \r\n        // Fetch attendance data\r\n        const attendanceResponse = await axios.get('/api/users/student/attendance', {\r\n          headers: {\r\n            Authorization: `Bearer ${store.state.auth.token}`\r\n          }\r\n        })\r\n        attendance.value = attendanceResponse.data\r\n        \r\n        // Add fallback sample data if needed\r\n        if (assessments.value.length === 0) {\r\n          assessments.value = generateSampleAssessments()\r\n        }\r\n        \r\n        if (attendance.value.length === 0) {\r\n          attendance.value = generateSampleAttendance()\r\n        }\r\n      } catch (error) {\r\n        console.error('Error fetching student data:', error)\r\n        // Add fallback sample data\r\n        assessments.value = generateSampleAssessments()\r\n        attendance.value = generateSampleAttendance()\r\n      } finally {\r\n        isLoading.value = false\r\n        // Create charts after data is loaded\r\n        setTimeout(() => {\r\n          createAssessmentChart()\r\n          createAttendanceChart()\r\n        }, 100)\r\n      }\r\n    }\r\n    \r\n    // Generate sample data for testing\r\n    const generateSampleAssessments = () => {\r\n      const subjects = ['Mathematics', 'English', 'Science', 'History']\r\n      const types = ['Quiz', 'Exam', 'Project', 'Assignment']\r\n      \r\n      return subjects.map(subject => {\r\n        const assessmentCount = Math.floor(Math.random() * 3) + 2 // 2-4 assessments per subject\r\n        \r\n        const subjectAssessments = []\r\n        for (let i = 0; i < assessmentCount; i++) {\r\n          const maxScore = [10, 20, 50, 100][Math.floor(Math.random() * 4)]\r\n          const score = Math.floor(Math.random() * (maxScore * 0.6)) + (maxScore * 0.3) // Score between 30% and 90%\r\n          \r\n          subjectAssessments.push({\r\n            _id: `sample-${subject}-${i}`,\r\n            title: `${subject} ${types[Math.floor(Math.random() * types.length)]} ${i + 1}`,\r\n            type: types[Math.floor(Math.random() * types.length)],\r\n            maxScore: maxScore,\r\n            score: score,\r\n            date: new Date(Date.now() - (Math.random() * 30 * 24 * 60 * 60 * 1000)).toISOString(),\r\n            teacherName: 'Sample Teacher'\r\n          })\r\n        }\r\n        \r\n        return {\r\n          subject,\r\n          section: '1A',\r\n          teacher: 'Sample Teacher',\r\n          assessments: subjectAssessments\r\n        }\r\n      })\r\n    }\r\n    \r\n    const generateSampleAttendance = () => {\r\n      const subjects = ['Mathematics', 'English', 'Science', 'History']\r\n      const statuses = ['Present', 'Late', 'Absent']\r\n      const statusWeights = [0.8, 0.15, 0.05] // 80% Present, 15% Late, 5% Absent\r\n      \r\n      return subjects.map(subject => {\r\n        const recordCount = Math.floor(Math.random() * 5) + 5 // 5-9 attendance records per subject\r\n        \r\n        const attendanceRecords = []\r\n        for (let i = 0; i < recordCount; i++) {\r\n          // Generate weighted random status\r\n          const rand = Math.random()\r\n          let statusIndex = 0\r\n          let cumulativeWeight = 0\r\n          \r\n          for (let j = 0; j < statusWeights.length; j++) {\r\n            cumulativeWeight += statusWeights[j]\r\n            if (rand < cumulativeWeight) {\r\n              statusIndex = j\r\n              break\r\n            }\r\n          }\r\n          \r\n          attendanceRecords.push({\r\n            _id: `sample-${subject}-${i}`,\r\n            date: new Date(Date.now() - (Math.random() * 30 * 24 * 60 * 60 * 1000)).toISOString(),\r\n            status: statuses[statusIndex],\r\n            remarks: statuses[statusIndex] === 'Absent' ? 'Excused absence' : ''\r\n          })\r\n        }\r\n        \r\n        return {\r\n          subject,\r\n          section: '1A',\r\n          teacher: 'Sample Teacher',\r\n          records: attendanceRecords\r\n        }\r\n      })\r\n    }\r\n    \r\n    onMounted(() => {\r\n      fetchData()\r\n    })\r\n    \r\n    return {\r\n      user,\r\n      assessmentChart,\r\n      attendanceChart,\r\n      isLoading,\r\n      subjectCount,\r\n      assessmentCount,\r\n      averageGrade,\r\n      attendanceRate,\r\n      recentAssessments,\r\n      recentAttendance,\r\n      formatDate,\r\n      getStatusClass\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.student-dashboard {\r\n  padding: 1.5rem;\r\n}\r\n\r\n.greeting-section {\r\n  margin-bottom: 2rem;\r\n}\r\n\r\n.greeting-section h2 {\r\n  font-size: 1.8rem;\r\n  color: #2d3748;\r\n  margin-bottom: 0.5rem;\r\n}\r\n\r\n.subtitle {\r\n  color: #718096;\r\n  font-size: 1.1rem;\r\n}\r\n\r\n.stats-row {\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fit, minmax(240px, 1fr));\r\n  gap: 1.5rem;\r\n  margin-bottom: 2rem;\r\n}\r\n\r\n.stat-card {\r\n  background: white;\r\n  border-radius: 1rem;\r\n  padding: 1.5rem;\r\n  display: flex;\r\n  align-items: center;\r\n  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.05);\r\n  transition: transform 0.3s ease, box-shadow 0.3s ease;\r\n}\r\n\r\n.stat-card:hover {\r\n  transform: translateY(-5px);\r\n  box-shadow: 0 10px 15px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n.stat-icon {\r\n  width: 48px;\r\n  height: 48px;\r\n  background: #ebf4ff;\r\n  border-radius: 12px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  margin-right: 1rem;\r\n}\r\n\r\n.stat-icon i {\r\n  font-size: 1.5rem;\r\n  color: #4299e1;\r\n}\r\n\r\n.stat-content {\r\n  flex: 1;\r\n}\r\n\r\n.stat-content h3 {\r\n  font-size: 0.875rem;\r\n  color: #718096;\r\n  margin-bottom: 0.5rem;\r\n  font-weight: 500;\r\n}\r\n\r\n.stat-value {\r\n  font-size: 1.5rem;\r\n  font-weight: 600;\r\n  color: #2d3748;\r\n}\r\n\r\n.widget-row {\r\n  margin-bottom: 2rem;\r\n}\r\n\r\n.widget-card, .chart-card {\r\n  background: white;\r\n  border-radius: 1rem;\r\n  padding: 1.5rem;\r\n  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.05);\r\n  overflow: hidden;\r\n}\r\n\r\n.widget-header {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  margin-bottom: 1.5rem;\r\n}\r\n\r\n.widget-header h3 {\r\n  font-size: 1.25rem;\r\n  color: #2d3748;\r\n  margin: 0;\r\n}\r\n\r\n.view-all-link {\r\n  color: #4299e1;\r\n  font-size: 0.875rem;\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 0.5rem;\r\n  text-decoration: none;\r\n  transition: color 0.3s ease;\r\n}\r\n\r\n.view-all-link:hover {\r\n  color: #2b6cb0;\r\n}\r\n\r\n.loading-placeholder {\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  padding: 3rem;\r\n  color: #a0aec0;\r\n}\r\n\r\n.spinner {\r\n  width: 40px;\r\n  height: 40px;\r\n  border: 3px solid #e2e8f0;\r\n  border-top-color: #4299e1;\r\n  border-radius: 50%;\r\n  animation: spin 1s linear infinite;\r\n  margin-bottom: 1rem;\r\n}\r\n\r\n@keyframes spin {\r\n  to { transform: rotate(360deg); }\r\n}\r\n\r\n.no-data {\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  padding: 3rem;\r\n  color: #a0aec0;\r\n}\r\n\r\n.no-data i {\r\n  font-size: 3rem;\r\n  margin-bottom: 1rem;\r\n}\r\n\r\n.data-table {\r\n  width: 100%;\r\n  border-collapse: collapse;\r\n}\r\n\r\n.data-table th {\r\n  padding: 1rem;\r\n  text-align: left;\r\n  font-weight: 500;\r\n  color: #4a5568;\r\n  background: #f7fafc;\r\n  border-bottom: 1px solid #e2e8f0;\r\n}\r\n\r\n.data-table td {\r\n  padding: 1rem;\r\n  border-bottom: 1px solid #e2e8f0;\r\n  color: #4a5568;\r\n}\r\n\r\n.data-table tr:last-child td {\r\n  border-bottom: none;\r\n}\r\n\r\n.score {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 0.5rem;\r\n}\r\n\r\n.score-percent {\r\n  color: #718096;\r\n  font-size: 0.875rem;\r\n}\r\n\r\n.status-badge {\r\n  display: inline-block;\r\n  padding: 0.25rem 0.75rem;\r\n  border-radius: 1rem;\r\n  font-size: 0.875rem;\r\n  font-weight: 500;\r\n}\r\n\r\n.status-present {\r\n  background: #c6f6d5;\r\n  color: #2f855a;\r\n}\r\n\r\n.status-late {\r\n  background: #fefcbf;\r\n  color: #b7791f;\r\n}\r\n\r\n.status-absent {\r\n  background: #fed7d7;\r\n  color: #c53030;\r\n}\r\n\r\n.chart-row {\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fit, minmax(400px, 1fr));\r\n  gap: 1.5rem;\r\n}\r\n\r\n.chart-card h3 {\r\n  font-size: 1.25rem;\r\n  color: #2d3748;\r\n  margin: 0 0 1.5rem 0;\r\n}\r\n\r\n.chart-container {\r\n  height: 300px;\r\n}\r\n\r\n.skeleton-loader {\r\n  height: 1.5rem;\r\n  width: 100%;\r\n  background: linear-gradient(90deg, #f0f0f0 25%, #e0e0e0 50%, #f0f0f0 75%);\r\n  background-size: 200% 100%;\r\n  animation: loading 1.5s infinite;\r\n  border-radius: 4px;\r\n}\r\n\r\n@keyframes loading {\r\n  0% { background-position: 200% 0; }\r\n  100% { background-position: -200% 0; }\r\n}\r\n\r\n@media (max-width: 768px) {\r\n  .stats-row {\r\n    grid-template-columns: 1fr 1fr;\r\n  }\r\n  \r\n  .chart-row {\r\n    grid-template-columns: 1fr;\r\n  }\r\n}\r\n\r\n@media (max-width: 480px) {\r\n  .stats-row {\r\n    grid-template-columns: 1fr;\r\n  }\r\n  \r\n  .widget-header {\r\n    flex-direction: column;\r\n    align-items: flex-start;\r\n    gap: 0.5rem;\r\n  }\r\n  \r\n  .data-table th,\r\n  .data-table td {\r\n    padding: 0.75rem 0.5rem;\r\n    font-size: 0.875rem;\r\n  }\r\n}\r\n</style> "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}