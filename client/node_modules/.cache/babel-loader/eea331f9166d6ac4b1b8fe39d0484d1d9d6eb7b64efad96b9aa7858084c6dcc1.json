{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { ref, watch } from 'vue';\nimport { useStore } from 'vuex';\nimport { useRouter } from 'vue-router';\nimport axios from 'axios';\nexport default {\n  name: 'Register',\n  setup() {\n    const store = useStore();\n    const router = useRouter();\n    const firstName = ref('');\n    const lastName = ref('');\n    const email = ref('');\n    const password = ref('');\n    const confirmPassword = ref('');\n    const teachingYear = ref('');\n    const counselingYear = ref('');\n    const role = ref('');\n    const error = ref('');\n    const success = ref('');\n    const selectedSubjects = ref([]);\n    const customSubject = ref('');\n    const availableSubjects = ref([]);\n    const subjectsByYear = {\n      '1st': ['ITE 101', 'ITE 102', 'ITE 103', 'ITE 104'],\n      '2nd': ['ITE 201', 'ITE 202', 'ITE 203', 'ITE 204'],\n      '3rd': ['ITE 301', 'ITE 302', 'ITE 303', 'ITE 304'],\n      '4th': ['ITE 401', 'ITE 402', 'ITE 403', 'ITE 404']\n    };\n    const handleYearChange = () => {\n      selectedSubjects.value = [];\n      availableSubjects.value = counselingYear.value ? subjectsByYear[counselingYear.value] : [];\n    };\n    const addCustomSubject = () => {\n      if (customSubject.value && teachingYear.value) {\n        const formattedSubject = customSubject.value.trim().toUpperCase();\n        if (!availableSubjects.value.includes(formattedSubject)) {\n          availableSubjects.value.push(formattedSubject);\n          selectedSubjects.value.push(formattedSubject);\n          customSubject.value = '';\n        }\n      }\n    };\n    const handleRegister = async () => {\n      try {\n        error.value = '';\n        success.value = '';\n\n        // Validate passwords match\n        if (password.value !== confirmPassword.value) {\n          error.value = 'Passwords do not match';\n          return;\n        }\n        const userData = {\n          firstName: firstName.value,\n          lastName: lastName.value,\n          email: email.value,\n          password: password.value,\n          confirmPassword: confirmPassword.value,\n          counselingYear: counselingYear.value,\n          teachingYear: \" \",\n          role: role.value,\n          subjects: selectedSubjects.value\n        };\n        const response = await axios.post('http://localhost:8000/api/auth/register', userData, {\n          headers: {\n            'Authorization': `Bearer ${store.state.auth.token}`\n          }\n        });\n        if (response.data.success) {\n          success.value = 'Account created successfully!';\n          // Reset form\n          firstName.value = '';\n          lastName.value = '';\n          email.value = '';\n          password.value = '';\n          confirmPassword.value = '';\n          teachingYear.value = '';\n          role.value = '';\n          selectedSubjects.value = [];\n          availableSubjects.value = [];\n          customSubject.value = '';\n        }\n      } catch (err) {\n        error.value = err.response?.data?.message || 'Registration failed. Please try again.';\n      }\n    };\n\n    // Watch for teaching year changes\n    watch(teachingYear, handleYearChange);\n    return {\n      firstName,\n      lastName,\n      email,\n      password,\n      confirmPassword,\n      teachingYear,\n      counselingYear,\n      role,\n      error,\n      success,\n      handleRegister,\n      selectedSubjects,\n      availableSubjects,\n      customSubject,\n      addCustomSubject,\n      handleYearChange\n    };\n  }\n};","map":{"version":3,"names":["ref","watch","useStore","useRouter","axios","name","setup","store","router","firstName","lastName","email","password","confirmPassword","teachingYear","counselingYear","role","error","success","selectedSubjects","customSubject","availableSubjects","subjectsByYear","handleYearChange","value","addCustomSubject","formattedSubject","trim","toUpperCase","includes","push","handleRegister","userData","subjects","response","post","headers","state","auth","token","data","err","message"],"sources":["D:\\au_dev\\client\\src\\views\\RegisterSSP.vue"],"sourcesContent":["<template>\r\n  <div class=\"register-container\">\r\n    <div class=\"register-box\">\r\n      <h2 class=\"text-center mb-4\">Create New Account</h2>\r\n      <p class=\"text-center text-muted mb-4\">Register SSP advisers</p>\r\n      \r\n      <form @submit.prevent=\"handleRegister\">\r\n        <!-- First Name -->\r\n        <div class=\"mb-3\">\r\n          <label class=\"form-label\">First Name</label>\r\n          <input \r\n            type=\"text\" \r\n            class=\"form-control\" \r\n            v-model=\"firstName\"\r\n            required\r\n          >\r\n        </div>\r\n\r\n        <!-- Last Name -->\r\n        <div class=\"mb-3\">\r\n          <label class=\"form-label\">Last Name</label>\r\n          <input \r\n            type=\"text\" \r\n            class=\"form-control\" \r\n            v-model=\"lastName\"\r\n            required\r\n          >\r\n        </div>\r\n\r\n        <!-- Email -->\r\n        <div class=\"mb-3\">\r\n          <label class=\"form-label\">Email</label>\r\n          <input \r\n            type=\"email\" \r\n            class=\"form-control\" \r\n            v-model=\"email\"\r\n            required\r\n          >\r\n        </div>\r\n\r\n        <!-- Password -->\r\n        <div class=\"mb-3\">\r\n          <label class=\"form-label\">Password</label>\r\n          <input \r\n            type=\"password\" \r\n            class=\"form-control\" \r\n            v-model=\"password\"\r\n            required\r\n          >\r\n        </div>\r\n\r\n        <!-- Confirm Password -->\r\n        <div class=\"mb-3\">\r\n          <label class=\"form-label\">Confirm Password</label>\r\n          <input \r\n            type=\"password\" \r\n            class=\"form-control\" \r\n            v-model=\"confirmPassword\"\r\n            required\r\n          >\r\n        </div>\r\n\r\n        <!-- Teaching Year -->\r\n        <div class=\"mb-3\">\r\n          <label class=\"form-label\">Counseling Year</label>\r\n          <select class=\"form-select\" v-model=\"counselingYear\" required @change=\"handleYearChange\">\r\n            <option value=\"\">Select Year</option>\r\n            <option value=\"1st\">1st Year</option>\r\n            <option value=\"2nd\">2nd Year</option>\r\n            <option value=\"3rd\">3rd Year</option>\r\n            <option value=\"4th\">4th Year</option>\r\n          </select>\r\n        </div>\r\n\r\n        <!-- Role -->\r\n        <div class=\"mb-3\">\r\n          <label class=\"form-label\">Role</label>\r\n          <select class=\"form-select\" v-model=\"role\" required>\r\n            <option value=\"ssp\">Select Role</option>\r\n            <option value=\"ssp\">SSP Adviser</option>\r\n          </select>\r\n        </div>\r\n\r\n        <button type=\"submit\" class=\"btn btn-primary w-100\">Create Account</button>\r\n      </form>\r\n\r\n      <!-- Error Alert -->\r\n      <div v-if=\"error\" class=\"alert alert-danger mt-3\">\r\n        {{ error }}\r\n      </div>\r\n\r\n      <!-- Success Alert -->\r\n      <div v-if=\"success\" class=\"alert alert-success mt-3\">\r\n        {{ success }}\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { ref, watch } from 'vue'\r\nimport { useStore } from 'vuex'\r\nimport { useRouter } from 'vue-router'\r\nimport axios from 'axios'\r\n\r\nexport default {\r\n  name: 'Register',\r\n  setup() {\r\n    const store = useStore()\r\n    const router = useRouter()\r\n\r\n    const firstName = ref('')\r\n    const lastName = ref('')\r\n    const email = ref('')\r\n    const password = ref('')\r\n    const confirmPassword = ref('')\r\n    const teachingYear = ref('')\r\n    const counselingYear = ref('')\r\n    const role = ref('')\r\n    const error = ref('')\r\n    const success = ref('')\r\n    const selectedSubjects = ref([])\r\n    const customSubject = ref('')\r\n    const availableSubjects = ref([])\r\n\r\n    const subjectsByYear = {\r\n      '1st': ['ITE 101', 'ITE 102', 'ITE 103', 'ITE 104'],\r\n      '2nd': ['ITE 201', 'ITE 202', 'ITE 203', 'ITE 204'],\r\n      '3rd': ['ITE 301', 'ITE 302', 'ITE 303', 'ITE 304'],\r\n      '4th': ['ITE 401', 'ITE 402', 'ITE 403', 'ITE 404']\r\n    }\r\n\r\n    const handleYearChange = () => {\r\n      selectedSubjects.value = []\r\n      availableSubjects.value = counselingYear.value ? subjectsByYear[counselingYear.value] : []\r\n    }\r\n\r\n    const addCustomSubject = () => {\r\n      if (customSubject.value && teachingYear.value) {\r\n        const formattedSubject = customSubject.value.trim().toUpperCase()\r\n        if (!availableSubjects.value.includes(formattedSubject)) {\r\n          availableSubjects.value.push(formattedSubject)\r\n          selectedSubjects.value.push(formattedSubject)\r\n          customSubject.value = ''\r\n        }\r\n      }\r\n    }\r\n\r\n    const handleRegister = async () => {\r\n      try {\r\n        error.value = ''\r\n        success.value = ''\r\n\r\n        // Validate passwords match\r\n        if (password.value !== confirmPassword.value) {\r\n          error.value = 'Passwords do not match'\r\n          return\r\n        }\r\n\r\n        const userData = {\r\n          firstName: firstName.value,\r\n          lastName: lastName.value,\r\n          email: email.value,\r\n          password: password.value,\r\n          confirmPassword: confirmPassword.value,\r\n          counselingYear: counselingYear.value,\r\n          teachingYear: \" \",\r\n          role: role.value,\r\n          subjects: selectedSubjects.value\r\n        }\r\n\r\n        const response = await axios.post('http://localhost:8000/api/auth/register', userData, {\r\n          headers: {\r\n            'Authorization': `Bearer ${store.state.auth.token}`\r\n          }\r\n        })\r\n\r\n        if (response.data.success) {\r\n          success.value = 'Account created successfully!'\r\n          // Reset form\r\n          firstName.value = ''\r\n          lastName.value = ''\r\n          email.value = ''\r\n          password.value = ''\r\n          confirmPassword.value = ''\r\n          teachingYear.value = ''\r\n          role.value = ''\r\n          selectedSubjects.value = []\r\n          availableSubjects.value = []\r\n          customSubject.value = ''\r\n        }\r\n      } catch (err) {\r\n        error.value = err.response?.data?.message || 'Registration failed. Please try again.'\r\n      }\r\n    }\r\n\r\n    // Watch for teaching year changes\r\n    watch(teachingYear, handleYearChange)\r\n\r\n    return {\r\n      firstName,\r\n      lastName,\r\n      email,\r\n      password,\r\n      confirmPassword,\r\n      teachingYear,\r\n      counselingYear,\r\n      role,\r\n      error,\r\n      success,\r\n      handleRegister,\r\n      selectedSubjects,\r\n      availableSubjects,\r\n      customSubject,\r\n      addCustomSubject,\r\n      handleYearChange\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.register-container {\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  min-height: 100vh;\r\n  background-color: #f8f9fa;\r\n  padding: 2rem 0;\r\n}\r\n\r\n.register-box {\r\n  background: white;\r\n  padding: 2rem;\r\n  border-radius: 8px;\r\n  box-shadow: 0 0 20px rgba(0, 0, 0, 0.1);\r\n  width: 100%;\r\n  max-width: 500px;\r\n}\r\n\r\nh2 {\r\n  color: #003366;\r\n}\r\n\r\n.form-control:focus,\r\n.form-select:focus {\r\n  border-color: #003366;\r\n  box-shadow: 0 0 0 0.2rem rgba(0, 51, 102, 0.25);\r\n}\r\n\r\na {\r\n  color: #003366;\r\n  text-decoration: none;\r\n}\r\n\r\na:hover {\r\n  text-decoration: underline;\r\n}\r\n\r\n.btn-primary {\r\n  background-color: #003366;\r\n  border-color: #003366;\r\n}\r\n\r\n.btn-primary:hover {\r\n  background-color: #002244;\r\n  border-color: #002244;\r\n}\r\n\r\n.subject-selection {\r\n  max-height: 200px;\r\n  overflow-y: auto;\r\n  border: 1px solid #dee2e6;\r\n  border-radius: 4px;\r\n  padding: 1rem;\r\n  margin-bottom: 1rem;\r\n}\r\n\r\n.form-check {\r\n  margin-bottom: 0.5rem;\r\n}\r\n\r\n.form-check:last-child {\r\n  margin-bottom: 0;\r\n}\r\n\r\n.input-group {\r\n  margin-top: 0.5rem;\r\n}\r\n\r\n.text-muted {\r\n  font-size: 0.875rem;\r\n}\r\n</style> "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}