{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.filter.js\";\nimport \"core-js/modules/es.iterator.for-each.js\";\nimport \"core-js/modules/es.set.difference.v2.js\";\nimport \"core-js/modules/es.set.intersection.v2.js\";\nimport \"core-js/modules/es.set.is-disjoint-from.v2.js\";\nimport \"core-js/modules/es.set.is-subset-of.v2.js\";\nimport \"core-js/modules/es.set.is-superset-of.v2.js\";\nimport \"core-js/modules/es.set.symmetric-difference.v2.js\";\nimport \"core-js/modules/es.set.union.v2.js\";\nimport { ref, computed, onMounted, onUnmounted, watch, nextTick } from 'vue';\nimport { useStore } from 'vuex';\nimport axios from 'axios';\nimport Chart from 'chart.js/auto';\nimport { Dropdown } from 'bootstrap';\nimport { formatDate } from '../utils';\nimport FailedStudentsChart from '../components/FailedStudentsChart.vue';\nimport StudentSurveyStat from '../components/StudentSurveyStat.vue';\n\n// Create axios instance with correct base URL\nconst api = axios.create({\n  baseURL: 'http://localhost:8081/api',\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\nexport default {\n  name: 'StudentManagement',\n  components: {\n    FailedStudentsChart,\n    StudentSurveyStat\n  },\n  setup() {\n    const store = useStore();\n    const students = ref([]);\n    const assessments = ref([]);\n    const survey = ref([]);\n    const searchQuery = ref('');\n    const selectedStudent = ref(null);\n    const performanceChart = ref(null);\n    const sortField = ref('');\n    const sortOrder = ref('asc');\n    const showDeleteModal = ref(false);\n    const studentToDelete = ref(null);\n    const isEditing = ref(false);\n    const editingStudent = ref(null);\n    const showSearch = ref(false);\n    const selectedYear = ref('');\n    const selectedSection = ref('');\n    const selectedFile = ref(null);\n    const uploadYear = ref('');\n    const isUploading = ref(false);\n    const loading = ref(false);\n    const subjectChart = ref(null);\n    const attendanceChart = ref(null);\n    const historyStartDate = ref('');\n    const historyEndDate = ref('');\n    const showAddStudentModal = ref(false);\n    const showAddSingleStudentModal = ref(false);\n    const availableYears = ['1st', '2nd', '3rd', '4th'];\n    const availableSections = ['South 1', 'South 2', 'South 3'];\n    const newStudent = ref({\n      studentId: '',\n      firstName: '',\n      middleName: '',\n      lastName: '',\n      email: '',\n      contactNumber: '',\n      year: '',\n      section: ''\n    });\n    const isAddingStudent = ref(false);\n\n    // Add pagination state\n    const currentPage = ref(1);\n    const itemsPerPage = 25;\n\n    // Compute total pages\n    const totalPages = computed(() => Math.ceil(sortedStudents.value.length / itemsPerPage));\n\n    // Get paginated students\n    const paginatedStudents = computed(() => {\n      const start = (currentPage.value - 1) * itemsPerPage;\n      const end = start + itemsPerPage;\n      return sortedStudents.value.slice(start, end);\n    });\n\n    // Compute pagination info\n    const paginationInfo = computed(() => {\n      const start = (currentPage.value - 1) * itemsPerPage + 1;\n      const end = Math.min(start + itemsPerPage - 1, sortedStudents.value.length);\n      return {\n        start,\n        end\n      };\n    });\n\n    // Pagination methods\n    const nextPage = () => {\n      if (currentPage.value < totalPages.value) {\n        currentPage.value++;\n      }\n    };\n    const previousPage = () => {\n      if (currentPage.value > 1) {\n        currentPage.value--;\n      }\n    };\n\n    // Reset pagination when filters change\n    watch([searchQuery, selectedYear, selectedSection], () => {\n      currentPage.value = 1;\n    });\n\n    // Initialize data on component mount\n    onMounted(async () => {\n      if (store.getters.isLoggedIn) {\n        await fetchStudents();\n      }\n\n      // Initialize dropdowns after a short delay to ensure DOM is ready\n      nextTick(() => {\n        const dropdownElements = document.querySelectorAll('[data-bs-toggle=\"dropdown\"]');\n        const dropdownInstances = [];\n        dropdownElements.forEach(element => {\n          if (element) {\n            dropdownInstances.push(new Dropdown(element));\n          }\n        });\n\n        // Cleanup dropdowns on unmount\n        onUnmounted(() => {\n          dropdownInstances.forEach(dropdown => {\n            if (dropdown && typeof dropdown.dispose === 'function') {\n              dropdown.dispose();\n            }\n          });\n        });\n      });\n    });\n\n    // Watch for auth state changes\n    watch(() => store.state.auth.token, newToken => {\n      if (newToken) {\n        fetchStudents();\n      }\n    });\n\n    // File upload handlers\n    const handleFileChange = event => {\n      const file = event.target.files[0];\n      if (file && file.type !== 'text/csv') {\n        alert('Please select a CSV file');\n        event.target.value = '';\n        selectedFile.value = null;\n        return;\n      }\n      selectedFile.value = file;\n      console.log('File selected:', file?.name);\n    };\n    const handleFileUpload = async () => {\n      if (!selectedFile.value || !uploadYear.value) {\n        alert('Please select both a year and a CSV file');\n        return;\n      }\n      isUploading.value = true;\n      const formData = new FormData();\n      formData.append('file', selectedFile.value);\n      formData.append('year', uploadYear.value);\n      try {\n        console.log('Starting upload...', {\n          year: uploadYear.value,\n          fileName: selectedFile.value.name\n        });\n        const token = store.state.auth.token;\n        if (!token) {\n          throw new Error('No authentication token found');\n        }\n\n        // Log the form data to verify what's being sent\n        console.log('Form data contents:', {\n          file: selectedFile.value,\n          year: uploadYear.value\n        });\n        const response = await api.post('/students/upload', formData, {\n          headers: {\n            'Authorization': `Bearer ${token}`,\n            'Content-Type': 'multipart/form-data'\n          }\n        });\n        console.log('Upload successful:', response.data);\n        if (response.data.errors && response.data.errors.length > 0) {\n          const errorMessage = response.data.errors.join('\\n');\n          alert(`Upload completed with some errors:\\n${errorMessage}`);\n        } else {\n          const counts = response.data.sectionCounts;\n          alert(`File uploaded successfully!\\n\\nStudent distribution:\\nSouth 1: ${counts['South 1']} students\\nSouth 2: ${counts['South 2']} students\\nSouth 3: ${counts['South 3']} students`);\n        }\n\n        // Reset form\n        selectedFile.value = null;\n        uploadYear.value = '';\n\n        // Refresh student list and close modal\n        await fetchStudents();\n\n        // Debug: Check if emails are included in the fetched students after upload\n        console.log('Students after upload:', students.value);\n        if (students.value.length > 0) {\n          console.log('First student after upload:', students.value[0]);\n          console.log('Email field exists after upload:', 'email' in students.value[0]);\n          console.log('Email value after upload:', students.value[0].email);\n        }\n        showAddStudentModal.value = false;\n      } catch (error) {\n        console.error('Upload failed:', error);\n        alert('Error uploading file: ' + (error.response?.data?.message || error.message));\n      } finally {\n        isUploading.value = false;\n      }\n    };\n\n    // Filter students\n    const filteredStudents = computed(() => {\n      return students.value.filter(student => {\n        const searchLower = searchQuery.value.toLowerCase();\n        const matchesSearch = student.info.studentId.toLowerCase().includes(searchLower) || student.info.firstName.toLowerCase().includes(searchLower) || student.info.lastName.toLowerCase().includes(searchLower);\n\n        // Apply year and section filters\n        const matchesYear = !selectedYear.value || student.info.year === selectedYear.value;\n        const matchesSection = !selectedSection.value || student.info.section === selectedSection.value;\n\n        // Check if the student has completed the survey\n        const hasCompletedSurvey = student.hasCompletedSurvey === true;\n\n        // Only include students who have not completed the survey\n        return matchesSearch && matchesYear && matchesSection && !hasCompletedSurvey;\n      });\n    });\n\n    // Student actions\n    const closeStudentModal = () => {\n      if (performanceChart.value) {\n        const existingChart = Chart.getChart(performanceChart.value);\n        if (existingChart) {\n          existingChart.destroy();\n        }\n      }\n      selectedStudent.value = null;\n    };\n    const confirmDelete = student => {\n      studentToDelete.value = student;\n      showDeleteModal.value = true;\n    };\n    const deleteStudent = async student => {\n      try {\n        const token = store.state.auth.token;\n\n        // Delete the student from students collection using MongoDB _id\n        await api.delete('/students/' + student._id, {\n          headers: {\n            'Authorization': `Bearer ${token}`\n          }\n        });\n\n        // Update local state\n        students.value = students.value.filter(s => s._id !== student._id);\n        selectedStudent.value = null;\n        showDeleteModal.value = false;\n        studentToDelete.value = null;\n        alert('Student deleted successfully');\n      } catch (error) {\n        console.error('Failed to delete student:', error);\n        alert('Failed to delete student. Please try again.');\n      }\n    };\n    const startEditing = student => {\n      editingStudent.value = {\n        ...student\n      };\n      isEditing.value = true;\n    };\n    const cancelEditing = () => {\n      editingStudent.value = null;\n      isEditing.value = false;\n    };\n    const saveStudentChanges = async () => {\n      try {\n        const token = store.state.auth.token;\n\n        // Update student information\n        const studentResponse = await api.put('/students/' + editingStudent.value._id, {\n          studentId: editingStudent.value.studentId,\n          firstName: editingStudent.value.firstName,\n          lastName: editingStudent.value.lastName,\n          email: editingStudent.value.email,\n          year: editingStudent.value.year,\n          section: editingStudent.value.section\n        }, {\n          headers: {\n            'Authorization': `Bearer ${token}`\n          }\n        });\n        if (studentResponse.data) {\n          // Update local state\n          const index = students.value.findIndex(s => s._id === editingStudent.value._id);\n          if (index !== -1) {\n            students.value[index] = {\n              ...editingStudent.value\n            };\n          }\n          selectedStudent.value = null;\n          editingStudent.value = null;\n          isEditing.value = false;\n          alert('Student information updated successfully');\n        } else {\n          throw new Error('Failed to update student information');\n        }\n      } catch (error) {\n        console.error('Failed to update student:', error);\n        alert('Failed to update student information. Please try again.');\n      }\n    };\n    const sortBy = field => {\n      if (sortField.value === field) {\n        sortOrder.value = sortOrder.value === 'asc' ? 'desc' : 'asc';\n      } else {\n        sortField.value = field;\n        sortOrder.value = 'asc';\n      }\n    };\n    const getSortIcon = field => {\n      if (sortField.value !== field) return 'fas fa-sort';\n      return sortOrder.value === 'asc' ? 'fas fa-sort-up' : 'fas fa-sort-down';\n    };\n    const sortedStudents = computed(() => {\n      let students = filteredStudents.value;\n      if (sortField.value) {\n        students = [...students].sort((a, b) => {\n          let aVal = a[sortField.value];\n          let bVal = b[sortField.value];\n\n          // Handle case-insensitive string comparison\n          if (typeof aVal === 'string') aVal = aVal.toLowerCase();\n          if (typeof bVal === 'string') bVal = bVal.toLowerCase();\n          if (aVal < bVal) return sortOrder.value === 'asc' ? -1 : 1;\n          if (aVal > bVal) return sortOrder.value === 'asc' ? 1 : -1;\n          return 0;\n        });\n      }\n      return students;\n    });\n    const toggleSearch = () => {\n      showSearch.value = !showSearch.value;\n      if (!showSearch.value) {\n        searchQuery.value = '';\n      }\n    };\n    const handleSearch = () => {\n      // Implement any additional search logic here if needed\n      console.log('Searching for:', searchQuery.value);\n    };\n    const clearSearch = () => {\n      searchQuery.value = '';\n      handleSearch();\n    };\n\n    // Add getAcademicYearRange function\n    const getAcademicYearRange = year => {\n      const currentYear = new Date().getFullYear();\n      let yearNumber = 0;\n      switch (year) {\n        case '1st':\n          yearNumber = 1;\n          break;\n        case '2nd':\n          yearNumber = 2;\n          break;\n        case '3rd':\n          yearNumber = 3;\n          break;\n        case '4th':\n          yearNumber = 4;\n          break;\n        default:\n          return 'N/A';\n      }\n      const startYear = currentYear - yearNumber + 1;\n      return `${startYear} - ${startYear + 1}`;\n    };\n\n    // Add hasActiveFilters computed property\n    const hasActiveFilters = computed(() => {\n      return selectedYear.value || selectedSection.value;\n    });\n\n    // Add viewStudent function\n    const viewStudent = async student => {\n      selectedStudent.value = student;\n      // Fetch student's attendance\n      const response = await api.get(`/attendance/${student._id}/history`, {\n        params: {\n          all: true,\n          subject: '',\n          startDate: '',\n          endDate: ''\n        },\n        headers: {\n          'Authorization': `Bearer ${store.state.auth.token}`\n        }\n      });\n      selectedStudent.value = {\n        ...selectedStudent.value,\n        attendanceHistory: response.data\n      };\n\n      // Get Student survey\n\n      const surveyResponse = await api.get(`/survey/stats`, {\n        params: {\n          _id: student._id\n        }\n      });\n      selectedStudent.value = {\n        ...selectedStudent.value,\n        survey: surveyResponse.data\n      };\n      survey.value = surveyResponse.data;\n      // Initialize charts if needed\n      if (performanceChart.value) {\n        const ctx = performanceChart.value.getContext('2d');\n        // Add your chart initialization logic here\n      }\n    };\n\n    // Add clearFilters function\n    const clearFilters = () => {\n      selectedYear.value = '';\n      selectedSection.value = '';\n      searchQuery.value = '';\n    };\n    const applyFilters = () => {\n      fetchStudents();\n    };\n\n    // Function to handle adding a single student\n    const handleAddSingleStudent = async () => {\n      try {\n        isAddingStudent.value = true;\n\n        // Validate required fields\n        const requiredFields = ['studentId', 'firstName', 'middleName', 'lastName', 'email', 'contactNumber', 'year', 'section'];\n        for (const field of requiredFields) {\n          if (!newStudent.value[field]) {\n            throw new Error(`${field.charAt(0).toUpperCase() + field.slice(1)} is required`);\n          }\n        }\n\n        // Validate email format\n        const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n        if (!emailRegex.test(newStudent.value.email)) {\n          throw new Error('Please enter a valid email address');\n        }\n        const token = store.state.auth.token;\n        if (!token) {\n          throw new Error('No authentication token found');\n        }\n\n        // Send request to add student\n        const response = await api.post('/students', {\n          ...newStudent.value,\n          // Calculate academic years based on current year and student's year level\n          academicYears: calculateAcademicYears(newStudent.value.year)\n        }, {\n          headers: {\n            'Authorization': `Bearer ${token}`\n          }\n        });\n        console.log('Student added successfully:', response.data);\n\n        // Reset form and close modal\n        resetNewStudentForm();\n        showAddSingleStudentModal.value = false;\n\n        // Refresh student list\n        await fetchStudents();\n        alert('Student added successfully');\n      } catch (error) {\n        console.error('Failed to add student:', error);\n        alert('Error adding student: ' + (error.response?.data?.message || error.message));\n      } finally {\n        isAddingStudent.value = false;\n      }\n    };\n\n    // Helper function to reset the new student form\n    const resetNewStudentForm = () => {\n      newStudent.value = {\n        studentId: '',\n        firstName: '',\n        middleName: '',\n        lastName: '',\n        email: '',\n        contactNumber: '',\n        year: '',\n        section: ''\n      };\n    };\n\n    // Helper function to calculate academic years\n    const calculateAcademicYears = year => {\n      const currentYear = new Date().getFullYear();\n      let startYear, endYear;\n      switch (year) {\n        case '1st':\n          startYear = currentYear;\n          endYear = currentYear + 4;\n          break;\n        case '2nd':\n          startYear = currentYear - 1;\n          endYear = currentYear + 3;\n          break;\n        case '3rd':\n          startYear = currentYear - 2;\n          endYear = currentYear + 2;\n          break;\n        case '4th':\n          startYear = currentYear - 3;\n          endYear = currentYear + 1;\n          break;\n        default:\n          startYear = currentYear;\n          endYear = currentYear + 4;\n      }\n      return {\n        startYear,\n        endYear\n      };\n    };\n\n    // Add fetchStudents function that was accidentally removed\n    const fetchStudents = async () => {\n      try {\n        const token = store.state.auth.token;\n        loading.value = true;\n\n        // Fetch failing students list\n        const response = await api.get('/students/failing/list', {\n          headers: {\n            'Authorization': `Bearer ${token}`\n          }\n        });\n        const studentList = response.data?.list || [];\n        assessments.value = response.data?.assessments || [];\n\n        // Fetch surveys to check which students have completed\n        const surveysResponse = await axios.get('http://localhost:8000/api/survey/submitted', {\n          headers: {\n            'Authorization': `Bearer ${token}`\n          }\n        });\n        const completedSurveyIds = new Set();\n        if (surveysResponse.data && Array.isArray(surveysResponse.data)) {\n          surveysResponse.data.forEach(survey => {\n            completedSurveyIds.add(survey.studentId);\n          });\n        }\n\n        // Mark students who have completed surveys\n        studentList.forEach(student => {\n          student.hasCompletedSurvey = completedSurveyIds.has(student.info._id);\n        });\n        students.value = studentList;\n      } catch (error) {\n        console.error('Failed to fetch students:', error);\n        alert('Failed to fetch students. Please try again.');\n      } finally {\n        loading.value = false;\n      }\n    };\n    return {\n      students,\n      searchQuery,\n      selectedStudent,\n      performanceChart,\n      sortField,\n      sortOrder,\n      showDeleteModal,\n      studentToDelete,\n      isEditing,\n      editingStudent,\n      showSearch,\n      showAddStudentModal,\n      showAddSingleStudentModal,\n      selectedFile,\n      uploadYear,\n      isUploading,\n      availableYears,\n      availableSections,\n      newStudent,\n      isAddingStudent,\n      handleFileChange,\n      handleFileUpload,\n      handleAddSingleStudent,\n      resetNewStudentForm,\n      filteredStudents,\n      closeStudentModal,\n      confirmDelete,\n      deleteStudent,\n      startEditing,\n      cancelEditing,\n      saveStudentChanges,\n      sortBy,\n      getSortIcon,\n      sortedStudents,\n      toggleSearch,\n      handleSearch,\n      clearSearch,\n      fetchStudents,\n      hasActiveFilters,\n      selectedYear,\n      selectedSection,\n      viewStudent,\n      getAcademicYearRange,\n      clearFilters,\n      applyFilters,\n      currentPage,\n      totalPages,\n      paginatedStudents,\n      paginationInfo,\n      nextPage,\n      previousPage,\n      formatDate,\n      assessments,\n      survey,\n      loading\n    };\n  }\n};","map":{"version":3,"names":["ref","computed","onMounted","onUnmounted","watch","nextTick","useStore","axios","Chart","Dropdown","formatDate","FailedStudentsChart","StudentSurveyStat","api","create","baseURL","headers","name","components","setup","store","students","assessments","survey","searchQuery","selectedStudent","performanceChart","sortField","sortOrder","showDeleteModal","studentToDelete","isEditing","editingStudent","showSearch","selectedYear","selectedSection","selectedFile","uploadYear","isUploading","loading","subjectChart","attendanceChart","historyStartDate","historyEndDate","showAddStudentModal","showAddSingleStudentModal","availableYears","availableSections","newStudent","studentId","firstName","middleName","lastName","email","contactNumber","year","section","isAddingStudent","currentPage","itemsPerPage","totalPages","Math","ceil","sortedStudents","value","length","paginatedStudents","start","end","slice","paginationInfo","min","nextPage","previousPage","getters","isLoggedIn","fetchStudents","dropdownElements","document","querySelectorAll","dropdownInstances","forEach","element","push","dropdown","dispose","state","auth","token","newToken","handleFileChange","event","file","target","files","type","alert","console","log","handleFileUpload","formData","FormData","append","fileName","Error","response","post","data","errors","errorMessage","join","counts","sectionCounts","error","message","filteredStudents","filter","student","searchLower","toLowerCase","matchesSearch","info","includes","matchesYear","matchesSection","hasCompletedSurvey","closeStudentModal","existingChart","getChart","destroy","confirmDelete","deleteStudent","delete","_id","s","startEditing","cancelEditing","saveStudentChanges","studentResponse","put","index","findIndex","sortBy","field","getSortIcon","sort","a","b","aVal","bVal","toggleSearch","handleSearch","clearSearch","getAcademicYearRange","currentYear","Date","getFullYear","yearNumber","startYear","hasActiveFilters","viewStudent","get","params","all","subject","startDate","endDate","attendanceHistory","surveyResponse","ctx","getContext","clearFilters","applyFilters","handleAddSingleStudent","requiredFields","charAt","toUpperCase","emailRegex","test","academicYears","calculateAcademicYears","resetNewStudentForm","endYear","studentList","list","surveysResponse","completedSurveyIds","Set","Array","isArray","add","has"],"sources":["D:\\au_dev\\client\\src\\views\\FailingStudents.vue"],"sourcesContent":["<template>\r\n    <div class=\"student-management\">\r\n        <div class=\"sticky-controls\">\r\n\r\n            <!-- Table Controls -->\r\n            <div class=\"table-controls mb-3\">\r\n                <div class=\"d-flex justify-content-between align-items-center\">\r\n                    <div class=\"d-flex align-items-center gap-3\">\r\n                        <!-- Sort Dropdown -->\r\n                        <div class=\"dropdown\">\r\n                            <button class=\"btn btn-control\" type=\"button\" id=\"sortDropdown\" data-bs-toggle=\"dropdown\"\r\n                                aria-expanded=\"false\">\r\n                                <i class=\"fas fa-sort me-2\"></i> Sort by\r\n                            </button>\r\n                            <ul class=\"dropdown-menu shadow-lg\" aria-labelledby=\"sortDropdown\">\r\n                                <li>\r\n                                    <a class=\"dropdown-item d-flex align-items-center gap-2\" href=\"#\"\r\n                                        @click.prevent=\"sortBy('studentId')\">\r\n                                        <i class=\"fas fa-sort-numeric-down\"></i>\r\n                                        <span>ID Number</span>\r\n                                        <i :class=\"getSortIcon('studentId')\" class=\"ms-auto\"></i>\r\n                                    </a>\r\n                                </li>\r\n                                <li>\r\n                                    <a class=\"dropdown-item d-flex align-items-center gap-2\" href=\"#\"\r\n                                        @click.prevent=\"sortBy('lastName')\">\r\n                                        <i class=\"fas fa-sort-alpha-down\"></i>\r\n                                        <span>Name</span>\r\n                                        <i :class=\"getSortIcon('lastName')\" class=\"ms-auto\"></i>\r\n                                    </a>\r\n                                </li>\r\n                            </ul>\r\n                        </div>\r\n\r\n                        <!-- Filter Dropdown -->\r\n                        <div class=\"dropdown\">\r\n                            <button class=\"btn btn-control\" type=\"button\" id=\"filterDropdown\" data-bs-toggle=\"dropdown\"\r\n                                aria-expanded=\"false\">\r\n                                <i class=\"fas fa-filter me-2\"></i>\r\n                                {{ hasActiveFilters ? `${selectedYear || 'All Years'} - ${selectedSection || 'All Sections'}` : 'Filter Students' }}\r\n                                <span v-if=\"hasActiveFilters\" class=\"filter-badge\">!</span>\r\n                            </button>\r\n                            <div class=\"dropdown-menu shadow-lg p-3\" aria-labelledby=\"filterDropdown\">\r\n                                <div class=\"d-flex justify-content-between align-items-center mb-2\">\r\n                                    <h6 class=\"dropdown-header px-0 mb-0\">Filter Options</h6>\r\n                                    <button v-if=\"hasActiveFilters\" class=\"btn btn-sm btn-outline-secondary\"\r\n                                        @click=\"clearFilters\">\r\n                                        Clear Filters\r\n                                    </button>\r\n                                </div>\r\n\r\n                                <!-- Year Filter -->\r\n                                <div class=\"mb-3\">\r\n                                    <label class=\"form-label\">Year Level</label>\r\n                                    <select class=\"form-select mb-2\" v-model=\"selectedYear\" @change=\"applyFilters\">\r\n                                        <option value=\"\">All Years</option>\r\n                                        <option value=\"1st\">1st Year</option>\r\n                                        <option value=\"2nd\">2nd Year</option>\r\n                                        <option value=\"3rd\">3rd Year</option>\r\n                                        <option value=\"4th\">4th Year</option>\r\n                                    </select>\r\n                                </div>\r\n\r\n                                <!-- Section Filter -->\r\n                                <div class=\"mb-3\">\r\n                                    <label class=\"form-label\">Section</label>\r\n                                    <select class=\"form-select\" v-model=\"selectedSection\" @change=\"applyFilters\">\r\n                                        <option value=\"\">All Sections</option>\r\n                                        <option value=\"South 1\">South 1</option>\r\n                                        <option value=\"South 2\">South 2</option>\r\n                                        <option value=\"South 3\">South 3</option>\r\n                                    </select>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <!-- Search Control -->\r\n                        <div class=\"search-control\">\r\n                            <div class=\"input-group\">\r\n                                <span class=\"input-group-text border-end-0\">\r\n                                    <i class=\"fas fa-search\"></i>\r\n                                </span>\r\n                                <input type=\"text\" class=\"form-control border-start-0\" v-model=\"searchQuery\"\r\n                                    placeholder=\"Search students...\" @input=\"handleSearch\">\r\n                                <button v-if=\"searchQuery\" class=\"btn btn-outline-secondary border-start-0\"\r\n                                    type=\"button\" @click=\"clearSearch\">\r\n                                    <i class=\"fas fa-times\"></i>\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n        <div class=\"table-responsive\">\r\n            <table class=\"table table-hover\">\r\n                <thead>\r\n                    <tr>\r\n                        <th>Student ID</th>\r\n                        <th>Last Name</th>\r\n                        <th>First Name</th>\r\n                        <th>Email</th>\r\n                        <th>Year</th>\r\n                        <th>Section</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    <!-- Loading state -->\r\n                    <tr v-if=\"loading\">\r\n                        <td colspan=\"6\" class=\"text-center py-4\">\r\n                            <div class=\"spinner-border text-primary mb-2\" role=\"status\">\r\n                                <span class=\"visually-hidden\">Loading...</span>\r\n                            </div>\r\n                            <p class=\"mb-0\">Loading students...</p>\r\n                        </td>\r\n                    </tr>\r\n                    <!-- Results -->\r\n                    <template v-else-if=\"paginatedStudents.length > 0\">\r\n                        <tr v-for=\"student in paginatedStudents\" :key=\"student.studentId\" @click=\"viewStudent(student.info)\"\r\n                            class=\"clickable-row\">\r\n                            <td>{{ student.info.studentId }}</td>\r\n                            <td>{{ student.info.lastName }}</td>\r\n                            <td>{{ student.info.firstName }}</td>\r\n                            <td>{{ student.info.email }}</td>\r\n                            <td>{{ student.info.year }}</td>\r\n                            <td>{{ student.info.section }}</td>\r\n                        </tr>\r\n                    </template>\r\n                    <tr v-else>\r\n                        <td colspan=\"6\" class=\"text-center py-4\">\r\n                            <div class=\"empty-state-message\">\r\n                                <i class=\"fas fa-users text-muted mb-2\"></i>\r\n                                <p class=\"mb-0\">No students found</p>\r\n                                <p class=\"text-muted small\" v-if=\"hasActiveFilters\">\r\n                                    Try adjusting your filters\r\n                                </p>\r\n                            </div>\r\n                        </td>\r\n                    </tr>\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n\r\n        <!-- Pagination Controls -->\r\n        <div class=\"pagination-controls mt-3 d-flex justify-content-between align-items-center\">\r\n            <div class=\"pagination-info\">\r\n                Showing {{ paginationInfo.start }} to {{ paginationInfo.end }} of {{ sortedStudents.length }} entries\r\n            </div>\r\n            <div class=\"pagination-buttons\">\r\n                <button class=\"btn btn-outline-primary me-2\" @click=\"previousPage\" :disabled=\"currentPage === 1\">\r\n                    <i class=\"fas fa-chevron-left me-1\"></i> Previous\r\n                </button>\r\n                <button class=\"btn btn-outline-primary\" @click=\"nextPage\" :disabled=\"currentPage >= totalPages\">\r\n                    Next <i class=\"fas fa-chevron-right ms-1\"></i>\r\n                </button>\r\n            </div>\r\n        </div>\r\n\r\n        <!-- Add Student Modal -->\r\n        <div v-if=\"showAddStudentModal\" class=\"add-student-modal\">\r\n            <div class=\"add-student-backdrop\" @click=\"showAddStudentModal = false\"></div>\r\n            <div class=\"add-student-dialog\">\r\n                <div class=\"add-student-content\">\r\n                    <div class=\"modal-header bg-primary text-white\">\r\n                        <h5 class=\"modal-title\">Add Student List</h5>\r\n                        <button type=\"button\" class=\"btn-close btn-close-white\"\r\n                            @click=\"showAddStudentModal = false\"></button>\r\n                    </div>\r\n                    <div class=\"modal-body\">\r\n                        <form @submit.prevent=\"handleFileUpload\">\r\n                            <!-- Year Selection -->\r\n                            <div class=\"mb-3\">\r\n                                <label class=\"form-label\">Year Level</label>\r\n                                <select class=\"form-select\" v-model=\"uploadYear\" required>\r\n                                    <option value=\"\">Select Year</option>\r\n                                    <option v-for=\"year in availableYears\" :key=\"year\" :value=\"year\">{{ year }}</option>\r\n                                </select>\r\n                                <small class=\"text-muted d-block mt-1\">\r\n                                    Note: Sections will be automatically assigned based on the number of students (50\r\n                                    students\r\n                                    per section).\r\n                                </small>\r\n                            </div>\r\n\r\n                            <!-- File Upload -->\r\n                            <div class=\"mb-3\">\r\n                                <label class=\"form-label\">CSV File</label>\r\n                                <input type=\"file\" class=\"form-control\" accept=\".csv\" @change=\"handleFileChange\"\r\n                                    required>\r\n                                <small class=\"text-muted d-block mt-1\">\r\n                                    <strong>Required fields:</strong> StudentID, LastName, FirstName, MiddleName,\r\n                                    ContactNumber,\r\n                                    Email\r\n                                </small>\r\n                                <small class=\"text-muted d-block mt-1\">\r\n                                    <strong>Important:</strong> Make sure the CSV file has an \"Email\" column with valid\r\n                                    email\r\n                                    addresses.\r\n                                </small>\r\n                                <small class=\"text-muted d-block mt-1\">\r\n                                    File must be in CSV format with headers matching the required fields exactly.\r\n                                </small>\r\n                            </div>\r\n\r\n                            <div class=\"text-end\">\r\n                                <button type=\"button\" class=\"btn btn-secondary me-2\"\r\n                                    @click=\"showAddStudentModal = false\">\r\n                                    Cancel\r\n                                </button>\r\n                                <button type=\"submit\" class=\"btn btn-primary\" :disabled=\"isUploading || !selectedFile\">\r\n                                    {{ isUploading ? 'Uploading...' : 'Upload' }}\r\n                                </button>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n        <!-- Student Details Modal -->\r\n        <div v-if=\"selectedStudent\" class=\"modal-wrapper\" @click.self=\"closeStudentModal\">\r\n            <div class=\"modal-backdrop\" @click=\"closeStudentModal\"></div>\r\n            <div class=\"modal-dialog modal-xxl\">\r\n                <div class=\"modal-content\">\r\n                    <div class=\"modal-header bg-primary text-white\">\r\n                        <h5 class=\"modal-title\">\r\n                            <i class=\"fas fa-user-graduate me-2\"></i>\r\n                            Student Details\r\n                        </h5>\r\n                        <button type=\"button\" class=\"btn-close btn-close-white\" @click=\"closeStudentModal\"></button>\r\n                    </div>\r\n                    <div class=\"modal-body\">\r\n                        <div class=\"student-details\">\r\n                            <!-- Student Information (Left Side) -->\r\n                            <div class=\"student-info\">\r\n                                <h6 class=\"info-title\">Student Information</h6>\r\n                                <div class=\"info-content\">\r\n                                    <p><strong>Name:</strong> {{ selectedStudent.firstName }} {{\r\n                                        selectedStudent.lastName }}</p>\r\n                                    <p><strong>ID:</strong> {{ selectedStudent.studentId }}</p>\r\n                                    <p><strong>Year Level:</strong> {{ selectedStudent.year }}</p>\r\n                                    <p><strong>Academic Year:</strong> {{ getAcademicYearRange(selectedStudent.year) }}\r\n                                    </p>\r\n                                    <p><strong>Section:</strong> {{ selectedStudent.section }}</p>\r\n                                    <p><strong>Email:</strong> {{ selectedStudent.email }}</p>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <!-- Performance and Attendance (Right Side) -->\r\n                            <div class=\"student-charts\">\r\n                                <div class=\"chart-section\">\r\n                                    <h6>Assessments</h6>\r\n                                    <FailedStudentsChart :assessments=\"assessments\" :studentId=\"selectedStudent.studentId\" :_id=\"selectedStudent._id\"/>\r\n                                    <hr>\r\n                                    <div class=\"mt-5\">\r\n                                        <h6 class=\"font-bold\">Survey Stats</h6>\r\n                                        <StudentSurveyStat :_id=\"selectedStudent._id\"/>\r\n                                    </div>\r\n                                    <canvas ref=\"performanceChart\"></canvas>\r\n                                </div>\r\n                                <div class=\"chart-section\">\r\n                                    <h6>Attendance History</h6>\r\n                                    <div class=\"table-responsive attendance-table\">\r\n                                        <table class=\"table\">\r\n                                            <thead>\r\n                                                <tr>\r\n                                                    <th>Date</th>\r\n                                                    <th>Subject</th>\r\n                                                    <th>Status</th>\r\n                                                </tr>\r\n                                            </thead>\r\n                                            <tbody>\r\n                                                <tr v-for=\"record in selectedStudent.attendanceHistory?.records\" :key=\"record._id\">\r\n                                                    <td>{{ formatDate (record.date) }}</td>\r\n                                                    <td>{{ record.subject }}</td>\r\n                                                    <td>\r\n                                                        <span \r\n                                                        class=\"badge capitalize\"\r\n                                                        :class=\"{\r\n                                                            'bg-success': record.status === 'present',\r\n                                                            'bg-danger': record.status === 'absent',\r\n                                                            'bg-warning': record.status === 'late'\r\n                                                        }\"\r\n                                                        >\r\n                                                        {{ record.status}}\r\n                                                        </span>\r\n                                                    </td>\r\n                                                </tr>\r\n                                            </tbody>\r\n                                        </table>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n        <!-- Edit Student Modal -->\r\n        <div v-if=\"isEditing\" class=\"modal-wrapper\">\r\n            <div class=\"modal-backdrop\" @click=\"cancelEditing\"></div>\r\n            <div class=\"modal-dialog\">\r\n                <div class=\"modal-content\">\r\n                    <div class=\"modal-header\">\r\n                        <h5 class=\"modal-title\">Edit Student</h5>\r\n                        <button type=\"button\" class=\"btn-close\" @click=\"cancelEditing\"></button>\r\n                    </div>\r\n                    <div class=\"modal-body\">\r\n                        <form @submit.prevent=\"saveStudentChanges\">\r\n                            <div class=\"mb-3\">\r\n                                <label class=\"form-label\">Student ID</label>\r\n                                <input type=\"text\" class=\"form-control\" v-model=\"editingStudent.studentId\">\r\n                            </div>\r\n                            <div class=\"mb-3\">\r\n                                <label class=\"form-label\">First Name</label>\r\n                                <input type=\"text\" class=\"form-control\" v-model=\"editingStudent.firstName\">\r\n                            </div>\r\n                            <div class=\"mb-3\">\r\n                                <label class=\"form-label\">Last Name</label>\r\n                                <input type=\"text\" class=\"form-control\" v-model=\"editingStudent.lastName\">\r\n                            </div>\r\n                            <div class=\"mb-3\">\r\n                                <label class=\"form-label\">Email</label>\r\n                                <input type=\"email\" class=\"form-control\" v-model=\"editingStudent.email\">\r\n                            </div>\r\n                            <div class=\"mb-3\">\r\n                                <label class=\"form-label\">Year</label>\r\n                                <select class=\"form-select\" v-model=\"editingStudent.year\">\r\n                                    <option v-for=\"year in availableYears\" :value=\"year\">{{ year }}</option>\r\n                                </select>\r\n                            </div>\r\n                            <div class=\"mb-3\">\r\n                                <label class=\"form-label\">Section</label>\r\n                                <select class=\"form-select\" v-model=\"editingStudent.section\">\r\n                                    <option v-for=\"section in availableSections\" :value=\"section\">{{ section }}</option>\r\n                                </select>\r\n                            </div>\r\n                            <div class=\"d-flex justify-content-end gap-2\">\r\n                                <button type=\"button\" class=\"btn btn-secondary\" @click=\"cancelEditing\">\r\n                                    Cancel\r\n                                </button>\r\n                                <button type=\"submit\" class=\"btn btn-primary\">\r\n                                    Save Changes\r\n                                </button>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n        <!-- Delete Confirmation Modal -->\r\n        <div v-if=\"showDeleteModal\" class=\"modal-wrapper\">\r\n            <div class=\"modal-backdrop\" @click=\"showDeleteModal = false\"></div>\r\n            <div class=\"modal-dialog\">\r\n                <div class=\"modal-content\">\r\n                    <div class=\"modal-header\">\r\n                        <h5 class=\"modal-title\">Confirm Delete</h5>\r\n                        <button type=\"button\" class=\"btn-close\" @click=\"showDeleteModal = false\"></button>\r\n                    </div>\r\n                    <div class=\"modal-body\">\r\n                        <p>Are you sure you want to delete this student?</p>\r\n                        <p class=\"text-danger\">\r\n                            <strong>{{ studentToDelete?.firstName }} {{ studentToDelete?.lastName }}</strong>\r\n                        </p>\r\n                        <p class=\"text-muted small\">This action cannot be undone.</p>\r\n                    </div>\r\n                    <div class=\"modal-footer\">\r\n                        <button type=\"button\" class=\"btn btn-secondary\" @click=\"showDeleteModal = false\">\r\n                            Cancel\r\n                        </button>\r\n                        <button type=\"button\" class=\"btn btn-danger\" @click=\"deleteStudent(studentToDelete)\">\r\n                            Delete\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n        <!-- Add Single Student Modal -->\r\n        <div v-if=\"showAddSingleStudentModal\" class=\"modal-wrapper\">\r\n            <div class=\"modal-backdrop\" @click=\"showAddSingleStudentModal = false\"></div>\r\n            <div class=\"modal-dialog\">\r\n                <div class=\"modal-content\">\r\n                    <div class=\"modal-header bg-success text-white\">\r\n                        <h5 class=\"modal-title\">\r\n                            <i class=\"fas fa-user-plus me-2\"></i>\r\n                            Add Single Student\r\n                        </h5>\r\n                        <button type=\"button\" class=\"btn-close btn-close-white\"\r\n                            @click=\"showAddSingleStudentModal = false\"></button>\r\n                    </div>\r\n                    <div class=\"modal-body\">\r\n                        <form @submit.prevent=\"handleAddSingleStudent\">\r\n                            <div class=\"mb-3\">\r\n                                <label class=\"form-label\">Student ID <span class=\"text-danger\">*</span></label>\r\n                                <input type=\"text\" class=\"form-control\" v-model=\"newStudent.studentId\" required>\r\n                            </div>\r\n                            <div class=\"mb-3\">\r\n                                <label class=\"form-label\">First Name <span class=\"text-danger\">*</span></label>\r\n                                <input type=\"text\" class=\"form-control\" v-model=\"newStudent.firstName\" required>\r\n                            </div>\r\n                            <div class=\"mb-3\">\r\n                                <label class=\"form-label\">Middle Name <span class=\"text-danger\">*</span></label>\r\n                                <input type=\"text\" class=\"form-control\" v-model=\"newStudent.middleName\" required>\r\n                            </div>\r\n                            <div class=\"mb-3\">\r\n                                <label class=\"form-label\">Last Name <span class=\"text-danger\">*</span></label>\r\n                                <input type=\"text\" class=\"form-control\" v-model=\"newStudent.lastName\" required>\r\n                            </div>\r\n                            <div class=\"mb-3\">\r\n                                <label class=\"form-label\">Email <span class=\"text-danger\">*</span></label>\r\n                                <input type=\"email\" class=\"form-control\" v-model=\"newStudent.email\" required>\r\n                            </div>\r\n                            <div class=\"mb-3\">\r\n                                <label class=\"form-label\">Contact Number <span class=\"text-danger\">*</span></label>\r\n                                <input type=\"text\" class=\"form-control\" v-model=\"newStudent.contactNumber\" required>\r\n                            </div>\r\n                            <div class=\"mb-3\">\r\n                                <label class=\"form-label\">Year <span class=\"text-danger\">*</span></label>\r\n                                <select class=\"form-select\" v-model=\"newStudent.year\" required>\r\n                                    <option value=\"\">Select Year</option>\r\n                                    <option v-for=\"year in availableYears\" :key=\"year\" :value=\"year\">{{ year }}</option>\r\n                                </select>\r\n                            </div>\r\n                            <div class=\"mb-3\">\r\n                                <label class=\"form-label\">Section <span class=\"text-danger\">*</span></label>\r\n                                <select class=\"form-select\" v-model=\"newStudent.section\" required>\r\n                                    <option value=\"\">Select Section</option>\r\n                                    <option v-for=\"section in availableSections\" :key=\"section\" :value=\"section\">{{\r\n                                        section }}\r\n                                    </option>\r\n                                </select>\r\n                            </div>\r\n                            <div class=\"d-flex justify-content-end gap-2\">\r\n                                <button type=\"button\" class=\"btn btn-secondary\"\r\n                                    @click=\"showAddSingleStudentModal = false\">\r\n                                    Cancel\r\n                                </button>\r\n                                <button type=\"submit\" class=\"btn btn-success\" :disabled=\"isAddingStudent\">\r\n                                    {{ isAddingStudent ? 'Adding...' : 'Add Student' }}\r\n                                </button>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport { ref, computed, onMounted, onUnmounted, watch, nextTick } from 'vue'\r\nimport { useStore } from 'vuex'\r\nimport axios from 'axios'\r\nimport Chart from 'chart.js/auto'\r\nimport { Dropdown } from 'bootstrap'\r\nimport { formatDate } from '../utils'\r\nimport FailedStudentsChart from '../components/FailedStudentsChart.vue'\r\nimport StudentSurveyStat from '../components/StudentSurveyStat.vue'\r\n\r\n// Create axios instance with correct base URL\r\nconst api = axios.create({\r\n    baseURL: 'http://localhost:8081/api',\r\n    headers: {\r\n        'Content-Type': 'application/json'\r\n    }\r\n});\r\n\r\nexport default {\r\n    name: 'StudentManagement',\r\n    components: {\r\n        FailedStudentsChart,\r\n        StudentSurveyStat,\r\n    },\r\n    setup() {\r\n        const store = useStore()\r\n        const students = ref([]);\r\n        const assessments = ref([]);\r\n        const survey = ref([]);\r\n        const searchQuery = ref('')\r\n        const selectedStudent = ref(null)\r\n        const performanceChart = ref(null)\r\n        const sortField = ref('')\r\n        const sortOrder = ref('asc')\r\n        const showDeleteModal = ref(false)\r\n        const studentToDelete = ref(null)\r\n        const isEditing = ref(false)\r\n        const editingStudent = ref(null)\r\n        const showSearch = ref(false)\r\n        const selectedYear = ref('')\r\n        const selectedSection = ref('')\r\n        const selectedFile = ref(null)\r\n        const uploadYear = ref('')\r\n        const isUploading = ref(false)\r\n        const loading = ref(false)\r\n        const subjectChart = ref(null)\r\n        const attendanceChart = ref(null)\r\n        const historyStartDate = ref('')\r\n        const historyEndDate = ref('')\r\n        const showAddStudentModal = ref(false)\r\n        const showAddSingleStudentModal = ref(false)\r\n        const availableYears = ['1st', '2nd', '3rd', '4th']\r\n        const availableSections = ['South 1', 'South 2', 'South 3']\r\n        const newStudent = ref({\r\n            studentId: '',\r\n            firstName: '',\r\n            middleName: '',\r\n            lastName: '',\r\n            email: '',\r\n            contactNumber: '',\r\n            year: '',\r\n            section: ''\r\n        })\r\n        const isAddingStudent = ref(false)\r\n\r\n        // Add pagination state\r\n        const currentPage = ref(1)\r\n        const itemsPerPage = 25\r\n\r\n        // Compute total pages\r\n        const totalPages = computed(() => Math.ceil(sortedStudents.value.length / itemsPerPage))\r\n\r\n        // Get paginated students\r\n        const paginatedStudents = computed(() => {\r\n            const start = (currentPage.value - 1) * itemsPerPage\r\n            const end = start + itemsPerPage\r\n            return sortedStudents.value.slice(start, end)\r\n        })\r\n\r\n        // Compute pagination info\r\n        const paginationInfo = computed(() => {\r\n            const start = (currentPage.value - 1) * itemsPerPage + 1\r\n            const end = Math.min(start + itemsPerPage - 1, sortedStudents.value.length)\r\n            return { start, end }\r\n        })\r\n\r\n        // Pagination methods\r\n        const nextPage = () => {\r\n            if (currentPage.value < totalPages.value) {\r\n                currentPage.value++\r\n            }\r\n        }\r\n\r\n        const previousPage = () => {\r\n            if (currentPage.value > 1) {\r\n                currentPage.value--\r\n            }\r\n        }\r\n\r\n        // Reset pagination when filters change\r\n        watch([searchQuery, selectedYear, selectedSection], () => {\r\n            currentPage.value = 1\r\n        })\r\n\r\n        // Initialize data on component mount\r\n        onMounted(async () => {\r\n            if (store.getters.isLoggedIn) {\r\n                await fetchStudents();\r\n            }\r\n\r\n            // Initialize dropdowns after a short delay to ensure DOM is ready\r\n            nextTick(() => {\r\n                const dropdownElements = document.querySelectorAll('[data-bs-toggle=\"dropdown\"]')\r\n                const dropdownInstances = []\r\n\r\n                dropdownElements.forEach(element => {\r\n                    if (element) {\r\n                        dropdownInstances.push(new Dropdown(element))\r\n                    }\r\n                })\r\n\r\n                // Cleanup dropdowns on unmount\r\n                onUnmounted(() => {\r\n                    dropdownInstances.forEach(dropdown => {\r\n                        if (dropdown && typeof dropdown.dispose === 'function') {\r\n                            dropdown.dispose()\r\n                        }\r\n                    })\r\n                })\r\n            })\r\n        })\r\n\r\n        // Watch for auth state changes\r\n        watch(() => store.state.auth.token, (newToken) => {\r\n            if (newToken) {\r\n                fetchStudents();\r\n            }\r\n        });\r\n\r\n        // File upload handlers\r\n        const handleFileChange = (event) => {\r\n            const file = event.target.files[0]\r\n            if (file && file.type !== 'text/csv') {\r\n                alert('Please select a CSV file')\r\n                event.target.value = ''\r\n                selectedFile.value = null\r\n                return\r\n            }\r\n            selectedFile.value = file\r\n            console.log('File selected:', file?.name)\r\n        }\r\n\r\n        const handleFileUpload = async () => {\r\n            if (!selectedFile.value || !uploadYear.value) {\r\n                alert('Please select both a year and a CSV file')\r\n                return\r\n            }\r\n\r\n            isUploading.value = true\r\n            const formData = new FormData()\r\n            formData.append('file', selectedFile.value)\r\n            formData.append('year', uploadYear.value)\r\n\r\n            try {\r\n                console.log('Starting upload...', {\r\n                    year: uploadYear.value,\r\n                    fileName: selectedFile.value.name\r\n                })\r\n\r\n                const token = store.state.auth.token\r\n                if (!token) {\r\n                    throw new Error('No authentication token found')\r\n                }\r\n\r\n                // Log the form data to verify what's being sent\r\n                console.log('Form data contents:', {\r\n                    file: selectedFile.value,\r\n                    year: uploadYear.value\r\n                })\r\n\r\n                const response = await api.post('/students/upload', formData, {\r\n                    headers: {\r\n                        'Authorization': `Bearer ${token}`,\r\n                        'Content-Type': 'multipart/form-data'\r\n                    }\r\n                })\r\n\r\n                console.log('Upload successful:', response.data)\r\n\r\n                if (response.data.errors && response.data.errors.length > 0) {\r\n                    const errorMessage = response.data.errors.join('\\n')\r\n                    alert(`Upload completed with some errors:\\n${errorMessage}`)\r\n                } else {\r\n                    const counts = response.data.sectionCounts\r\n                    alert(`File uploaded successfully!\\n\\nStudent distribution:\\nSouth 1: ${counts['South 1']} students\\nSouth 2: ${counts['South 2']} students\\nSouth 3: ${counts['South 3']} students`)\r\n                }\r\n\r\n                // Reset form\r\n                selectedFile.value = null\r\n                uploadYear.value = ''\r\n\r\n                // Refresh student list and close modal\r\n                await fetchStudents()\r\n\r\n                // Debug: Check if emails are included in the fetched students after upload\r\n                console.log('Students after upload:', students.value);\r\n                if (students.value.length > 0) {\r\n                    console.log('First student after upload:', students.value[0]);\r\n                    console.log('Email field exists after upload:', 'email' in students.value[0]);\r\n                    console.log('Email value after upload:', students.value[0].email);\r\n                }\r\n\r\n                showAddStudentModal.value = false\r\n            } catch (error) {\r\n                console.error('Upload failed:', error)\r\n                alert('Error uploading file: ' + (error.response?.data?.message || error.message))\r\n            } finally {\r\n                isUploading.value = false\r\n            }\r\n        }\r\n\r\n        // Filter students\r\n        const filteredStudents = computed(() => {\r\n            return students.value.filter(student => {\r\n                const searchLower = searchQuery.value.toLowerCase();\r\n                const matchesSearch =\r\n                    student.info.studentId.toLowerCase().includes(searchLower) ||\r\n                    student.info.firstName.toLowerCase().includes(searchLower) ||\r\n                    student.info.lastName.toLowerCase().includes(searchLower);\r\n\r\n                // Apply year and section filters\r\n                const matchesYear = !selectedYear.value || student.info.year === selectedYear.value;\r\n                const matchesSection = !selectedSection.value || student.info.section === selectedSection.value;\r\n\r\n                // Check if the student has completed the survey\r\n                const hasCompletedSurvey = student.hasCompletedSurvey === true;\r\n\r\n                // Only include students who have not completed the survey\r\n                return matchesSearch && matchesYear && matchesSection && !hasCompletedSurvey;\r\n            });\r\n        });\r\n\r\n        // Student actions\r\n        const closeStudentModal = () => {\r\n            if (performanceChart.value) {\r\n                const existingChart = Chart.getChart(performanceChart.value);\r\n                if (existingChart) {\r\n                    existingChart.destroy();\r\n                }\r\n            }\r\n            selectedStudent.value = null;\r\n        };\r\n\r\n        const confirmDelete = (student) => {\r\n            studentToDelete.value = student;\r\n            showDeleteModal.value = true;\r\n        }\r\n\r\n        const deleteStudent = async (student) => {\r\n            try {\r\n                const token = store.state.auth.token;\r\n\r\n                // Delete the student from students collection using MongoDB _id\r\n                await api.delete(\r\n                    '/students/' + student._id,\r\n                    {\r\n                        headers: {\r\n                            'Authorization': `Bearer ${token}`\r\n                        }\r\n                    }\r\n                );\r\n\r\n                // Update local state\r\n                students.value = students.value.filter(s => s._id !== student._id);\r\n                selectedStudent.value = null;\r\n                showDeleteModal.value = false;\r\n                studentToDelete.value = null;\r\n                alert('Student deleted successfully');\r\n            } catch (error) {\r\n                console.error('Failed to delete student:', error);\r\n                alert('Failed to delete student. Please try again.');\r\n            }\r\n        }\r\n\r\n        const startEditing = (student) => {\r\n            editingStudent.value = { ...student }\r\n            isEditing.value = true\r\n        }\r\n\r\n        const cancelEditing = () => {\r\n            editingStudent.value = null\r\n            isEditing.value = false\r\n        }\r\n\r\n        const saveStudentChanges = async () => {\r\n            try {\r\n                const token = store.state.auth.token\r\n\r\n                // Update student information\r\n                const studentResponse = await api.put('/students/' + editingStudent.value._id, {\r\n                    studentId: editingStudent.value.studentId,\r\n                    firstName: editingStudent.value.firstName,\r\n                    lastName: editingStudent.value.lastName,\r\n                    email: editingStudent.value.email,\r\n                    year: editingStudent.value.year,\r\n                    section: editingStudent.value.section\r\n                }, {\r\n                    headers: {\r\n                        'Authorization': `Bearer ${token}`\r\n                    }\r\n                })\r\n\r\n                if (studentResponse.data) {\r\n                    // Update local state\r\n                    const index = students.value.findIndex(s => s._id === editingStudent.value._id)\r\n                    if (index !== -1) {\r\n                        students.value[index] = { ...editingStudent.value }\r\n                    }\r\n\r\n                    selectedStudent.value = null\r\n                    editingStudent.value = null\r\n                    isEditing.value = false\r\n                    alert('Student information updated successfully')\r\n                } else {\r\n                    throw new Error('Failed to update student information')\r\n                }\r\n            } catch (error) {\r\n                console.error('Failed to update student:', error)\r\n                alert('Failed to update student information. Please try again.')\r\n            }\r\n        }\r\n\r\n        const sortBy = (field) => {\r\n            if (sortField.value === field) {\r\n                sortOrder.value = sortOrder.value === 'asc' ? 'desc' : 'asc'\r\n            } else {\r\n                sortField.value = field\r\n                sortOrder.value = 'asc'\r\n            }\r\n        }\r\n\r\n        const getSortIcon = (field) => {\r\n            if (sortField.value !== field) return 'fas fa-sort'\r\n            return sortOrder.value === 'asc' ? 'fas fa-sort-up' : 'fas fa-sort-down'\r\n        }\r\n\r\n        const sortedStudents = computed(() => {\r\n            let students = filteredStudents.value\r\n\r\n            if (sortField.value) {\r\n                students = [...students].sort((a, b) => {\r\n                    let aVal = a[sortField.value]\r\n                    let bVal = b[sortField.value]\r\n\r\n                    // Handle case-insensitive string comparison\r\n                    if (typeof aVal === 'string') aVal = aVal.toLowerCase()\r\n                    if (typeof bVal === 'string') bVal = bVal.toLowerCase()\r\n\r\n                    if (aVal < bVal) return sortOrder.value === 'asc' ? -1 : 1\r\n                    if (aVal > bVal) return sortOrder.value === 'asc' ? 1 : -1\r\n                    return 0\r\n                })\r\n            }\r\n\r\n            return students\r\n        })\r\n\r\n        const toggleSearch = () => {\r\n            showSearch.value = !showSearch.value\r\n            if (!showSearch.value) {\r\n                searchQuery.value = ''\r\n            }\r\n        }\r\n\r\n        const handleSearch = () => {\r\n            // Implement any additional search logic here if needed\r\n            console.log('Searching for:', searchQuery.value)\r\n        }\r\n\r\n        const clearSearch = () => {\r\n            searchQuery.value = ''\r\n            handleSearch()\r\n        }\r\n\r\n        // Add getAcademicYearRange function\r\n        const getAcademicYearRange = (year) => {\r\n            const currentYear = new Date().getFullYear()\r\n            let yearNumber = 0\r\n\r\n            switch (year) {\r\n                case '1st':\r\n                    yearNumber = 1\r\n                    break\r\n                case '2nd':\r\n                    yearNumber = 2\r\n                    break\r\n                case '3rd':\r\n                    yearNumber = 3\r\n                    break\r\n                case '4th':\r\n                    yearNumber = 4\r\n                    break\r\n                default:\r\n                    return 'N/A'\r\n            }\r\n\r\n            const startYear = currentYear - yearNumber + 1\r\n            return `${startYear} - ${startYear + 1}`\r\n        }\r\n\r\n        // Add hasActiveFilters computed property\r\n        const hasActiveFilters = computed(() => {\r\n            return selectedYear.value || selectedSection.value;\r\n        });\r\n\r\n        // Add viewStudent function\r\n        const viewStudent = async (student) => {\r\n            selectedStudent.value = student;\r\n            // Fetch student's attendance\r\n            const response = await api.get(\r\n            `/attendance/${student._id}/history`,\r\n            {\r\n                params: {\r\n                all : true,\r\n                subject: '',\r\n                startDate: '',\r\n                endDate: ''\r\n                },\r\n                headers: { 'Authorization': `Bearer ${store.state.auth.token}` }\r\n            }\r\n            )\r\n            selectedStudent.value = {\r\n                ...selectedStudent.value,\r\n                attendanceHistory : response.data\r\n            }\r\n\r\n            // Get Student survey\r\n\r\n            const surveyResponse = await api.get(`/survey/stats`,{\r\n                params: {\r\n                    _id : student._id\r\n                }\r\n            })\r\n            selectedStudent.value = {\r\n                ...selectedStudent.value,\r\n                survey : surveyResponse.data\r\n            }\r\n            survey.value = surveyResponse.data;\r\n            // Initialize charts if needed\r\n            if (performanceChart.value) {\r\n                const ctx = performanceChart.value.getContext('2d');\r\n                // Add your chart initialization logic here\r\n            }\r\n        };\r\n\r\n        // Add clearFilters function\r\n        const clearFilters = () => {\r\n            selectedYear.value = '';\r\n            selectedSection.value = '';\r\n            searchQuery.value = '';\r\n        };\r\n\r\n        const applyFilters = () => {\r\n            fetchStudents();\r\n        };\r\n\r\n        // Function to handle adding a single student\r\n        const handleAddSingleStudent = async () => {\r\n            try {\r\n                isAddingStudent.value = true\r\n\r\n                // Validate required fields\r\n                const requiredFields = ['studentId', 'firstName', 'middleName', 'lastName', 'email', 'contactNumber', 'year', 'section']\r\n                for (const field of requiredFields) {\r\n                    if (!newStudent.value[field]) {\r\n                        throw new Error(`${field.charAt(0).toUpperCase() + field.slice(1)} is required`)\r\n                    }\r\n                }\r\n\r\n                // Validate email format\r\n                const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/\r\n                if (!emailRegex.test(newStudent.value.email)) {\r\n                    throw new Error('Please enter a valid email address')\r\n                }\r\n\r\n                const token = store.state.auth.token\r\n                if (!token) {\r\n                    throw new Error('No authentication token found')\r\n                }\r\n\r\n                // Send request to add student\r\n                const response = await api.post('/students', {\r\n                    ...newStudent.value,\r\n                    // Calculate academic years based on current year and student's year level\r\n                    academicYears: calculateAcademicYears(newStudent.value.year)\r\n                }, {\r\n                    headers: {\r\n                        'Authorization': `Bearer ${token}`\r\n                    }\r\n                })\r\n\r\n                console.log('Student added successfully:', response.data)\r\n\r\n                // Reset form and close modal\r\n                resetNewStudentForm()\r\n                showAddSingleStudentModal.value = false\r\n\r\n                // Refresh student list\r\n                await fetchStudents()\r\n\r\n                alert('Student added successfully')\r\n            } catch (error) {\r\n                console.error('Failed to add student:', error)\r\n                alert('Error adding student: ' + (error.response?.data?.message || error.message))\r\n            } finally {\r\n                isAddingStudent.value = false\r\n            }\r\n        }\r\n\r\n        // Helper function to reset the new student form\r\n        const resetNewStudentForm = () => {\r\n            newStudent.value = {\r\n                studentId: '',\r\n                firstName: '',\r\n                middleName: '',\r\n                lastName: '',\r\n                email: '',\r\n                contactNumber: '',\r\n                year: '',\r\n                section: ''\r\n            }\r\n        }\r\n\r\n        // Helper function to calculate academic years\r\n        const calculateAcademicYears = (year) => {\r\n            const currentYear = new Date().getFullYear()\r\n            let startYear, endYear\r\n\r\n            switch (year) {\r\n                case '1st':\r\n                    startYear = currentYear\r\n                    endYear = currentYear + 4\r\n                    break\r\n                case '2nd':\r\n                    startYear = currentYear - 1\r\n                    endYear = currentYear + 3\r\n                    break\r\n                case '3rd':\r\n                    startYear = currentYear - 2\r\n                    endYear = currentYear + 2\r\n                    break\r\n                case '4th':\r\n                    startYear = currentYear - 3\r\n                    endYear = currentYear + 1\r\n                    break\r\n                default:\r\n                    startYear = currentYear\r\n                    endYear = currentYear + 4\r\n            }\r\n\r\n            return { startYear, endYear }\r\n        }\r\n\r\n        // Add fetchStudents function that was accidentally removed\r\n        const fetchStudents = async () => {\r\n            try {\r\n                const token = store.state.auth.token;\r\n                loading.value = true;\r\n                \r\n                // Fetch failing students list\r\n                const response = await api.get('/students/failing/list', {\r\n                    headers: {\r\n                        'Authorization': `Bearer ${token}`\r\n                    }\r\n                });\r\n                const studentList = response.data?.list || [];\r\n                assessments.value = response.data?.assessments || [];\r\n                \r\n                // Fetch surveys to check which students have completed\r\n                const surveysResponse = await axios.get('http://localhost:8000/api/survey/submitted', {\r\n                    headers: { 'Authorization': `Bearer ${token}` }\r\n                });\r\n                \r\n                const completedSurveyIds = new Set();\r\n                if (surveysResponse.data && Array.isArray(surveysResponse.data)) {\r\n                    surveysResponse.data.forEach(survey => {\r\n                        completedSurveyIds.add(survey.studentId);\r\n                    });\r\n                }\r\n                \r\n                // Mark students who have completed surveys\r\n                studentList.forEach(student => {\r\n                    student.hasCompletedSurvey = completedSurveyIds.has(student.info._id);\r\n                });\r\n                \r\n                students.value = studentList;\r\n            } catch (error) {\r\n                console.error('Failed to fetch students:', error);\r\n                alert('Failed to fetch students. Please try again.');\r\n            } finally {\r\n                loading.value = false;\r\n            }\r\n        };\r\n\r\n        return {\r\n            students,\r\n            searchQuery,\r\n            selectedStudent,\r\n            performanceChart,\r\n            sortField,\r\n            sortOrder,\r\n            showDeleteModal,\r\n            studentToDelete,\r\n            isEditing,\r\n            editingStudent,\r\n            showSearch,\r\n            showAddStudentModal,\r\n            showAddSingleStudentModal,\r\n            selectedFile,\r\n            uploadYear,\r\n            isUploading,\r\n            availableYears,\r\n            availableSections,\r\n            newStudent,\r\n            isAddingStudent,\r\n            handleFileChange,\r\n            handleFileUpload,\r\n            handleAddSingleStudent,\r\n            resetNewStudentForm,\r\n            filteredStudents,\r\n            closeStudentModal,\r\n            confirmDelete,\r\n            deleteStudent,\r\n            startEditing,\r\n            cancelEditing,\r\n            saveStudentChanges,\r\n            sortBy,\r\n            getSortIcon,\r\n            sortedStudents,\r\n            toggleSearch,\r\n            handleSearch,\r\n            clearSearch,\r\n            fetchStudents,\r\n            hasActiveFilters,\r\n            selectedYear,\r\n            selectedSection,\r\n            viewStudent,\r\n            getAcademicYearRange,\r\n            clearFilters,\r\n            applyFilters,\r\n            currentPage,\r\n            totalPages,\r\n            paginatedStudents,\r\n            paginationInfo,\r\n            nextPage,\r\n            previousPage,\r\n            formatDate,\r\n            assessments,\r\n            survey,\r\n            loading\r\n        }\r\n    }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n/* Base z-index hierarchy */\r\n:root {\r\n    --z-base: 1;\r\n    --z-table: 1010;\r\n    --z-controls: 1020;\r\n    --z-dropdown: 1030;\r\n    --z-modal-backdrop: 1040;\r\n    --z-modal: 1050;\r\n}\r\n\r\n.student-management {\r\n    padding: 20px;\r\n    position: relative;\r\n}\r\n\r\n/* Button container styles */\r\n.d-flex.gap-2.mb-3 {\r\n    position: static;\r\n    top: auto;\r\n    right: auto;\r\n    z-index: auto;\r\n}\r\n\r\n/* Modal Styles */\r\n.modal-wrapper {\r\n    position: fixed;\r\n    top: 0;\r\n    left: 0;\r\n    width: 100vw;\r\n    height: 100vh;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    z-index: 2000;\r\n}\r\n\r\n.modal-backdrop {\r\n    position: fixed;\r\n    top: 0;\r\n    left: 0;\r\n    width: 100vw;\r\n    height: 100vh;\r\n    background-color: rgba(0, 0, 0, 0.5);\r\n    z-index: 1999;\r\n}\r\n\r\n.modal {\r\n    position: relative;\r\n    width: 100%;\r\n    max-width: 500px;\r\n    margin: 2rem;\r\n    z-index: 2001;\r\n    background: white;\r\n    border-radius: 12px;\r\n    box-shadow: 0 20px 25px -5px rgba(0, 0, 0, 0.1), 0 10px 10px -5px rgba(0, 0, 0, 0.04);\r\n    overflow: hidden;\r\n}\r\n\r\n.modal-content {\r\n    position: relative;\r\n    width: 100%;\r\n    background: white;\r\n    border-radius: 12px;\r\n    overflow: hidden;\r\n}\r\n\r\n.modal-header {\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n    padding: 1rem 1.5rem;\r\n    border-bottom: 1px solid #e2e8f0;\r\n}\r\n\r\n.modal-header.bg-primary {\r\n    background-color: #003366 !important;\r\n}\r\n\r\n.btn-close-white {\r\n    filter: brightness(0) invert(1);\r\n}\r\n\r\n.modal-body {\r\n    padding: 1.5rem;\r\n}\r\n\r\n.form-label {\r\n    font-weight: 500;\r\n    color: #2d3748;\r\n    margin-bottom: 0.5rem;\r\n}\r\n\r\n.form-select,\r\n.form-control {\r\n    border: 2px solid #e2e8f0;\r\n    border-radius: 8px;\r\n    padding: 0.75rem;\r\n    width: 100%;\r\n    transition: all 0.2s;\r\n}\r\n\r\n.form-select:focus,\r\n.form-control:focus {\r\n    border-color: #003366;\r\n    box-shadow: 0 0 0 2px rgba(0, 51, 102, 0.1);\r\n}\r\n\r\n.text-muted {\r\n    color: #718096 !important;\r\n}\r\n\r\n.btn {\r\n    padding: 0.75rem 1.5rem;\r\n    font-weight: 500;\r\n    border-radius: 8px;\r\n    transition: all 0.2s;\r\n}\r\n\r\n.btn-primary {\r\n    background-color: #003366;\r\n    border: none;\r\n}\r\n\r\n.btn-primary:hover:not(:disabled) {\r\n    background-color: #004080;\r\n}\r\n\r\n.btn-secondary {\r\n    background-color: #e2e8f0;\r\n    border: none;\r\n    color: #4a5568;\r\n}\r\n\r\n.btn-secondary:hover {\r\n    background-color: #cbd5e1;\r\n}\r\n\r\n.btn:disabled {\r\n    opacity: 0.7;\r\n    cursor: not-allowed;\r\n}\r\n\r\n/* Table container styles */\r\n.table-container {\r\n    margin-top: 0;\r\n}\r\n\r\n/* Table Styles */\r\n.table-responsive {\r\n    position: relative;\r\n    z-index: 1010;\r\n    background: white;\r\n    border-radius: 12px;\r\n    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.05);\r\n    overflow: hidden;\r\n}\r\n\r\n.table {\r\n    margin-bottom: 0;\r\n}\r\n\r\n.table thead th {\r\n    position: sticky;\r\n    top: 0;\r\n    background: white;\r\n    z-index: 1011;\r\n    padding: 1rem;\r\n    font-weight: 600;\r\n    color: #4a5568;\r\n    border-bottom: 2px solid #e2e8f0;\r\n}\r\n\r\n/* Student Info Card */\r\n.student-info-card {\r\n    background: white;\r\n    border-radius: 12px;\r\n    box-shadow: 0 2px 8px rgba(0, 0, 0, 0.05);\r\n    margin-bottom: 1.5rem;\r\n}\r\n\r\n.student-info-header {\r\n    padding: 1rem 1.25rem;\r\n    background: #f8f9fa;\r\n    border-bottom: 1px solid #e9ecef;\r\n    font-weight: 600;\r\n    color: #2d3748;\r\n}\r\n\r\n.student-info-content {\r\n    padding: 1.25rem;\r\n}\r\n\r\n.info-grid {\r\n    display: grid;\r\n    grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));\r\n    gap: 1.25rem;\r\n}\r\n\r\n.info-item {\r\n    display: flex;\r\n    flex-direction: column;\r\n    gap: 0.5rem;\r\n}\r\n\r\n.info-item label {\r\n    font-size: 0.875rem;\r\n    color: #718096;\r\n    font-weight: 500;\r\n}\r\n\r\n.info-item span {\r\n    color: #2d3748;\r\n    font-weight: 500;\r\n}\r\n\r\n/* Performance Card */\r\n.performance-card {\r\n    background: white;\r\n    border-radius: 12px;\r\n    box-shadow: 0 2px 8px rgba(0, 0, 0, 0.05);\r\n    margin-bottom: 1.5rem;\r\n}\r\n\r\n.performance-header {\r\n    padding: 1rem 1.25rem;\r\n    background: #f8f9fa;\r\n    border-bottom: 1px solid #e9ecef;\r\n    font-weight: 600;\r\n    color: #2d3748;\r\n    display: flex;\r\n    align-items: center;\r\n    gap: 0.75rem;\r\n}\r\n\r\n.performance-content {\r\n    padding: 1.25rem;\r\n}\r\n\r\n.chart-container {\r\n    background: white;\r\n    padding: 1.25rem;\r\n    border-radius: 8px;\r\n    box-shadow: 0 1px 3px rgba(0, 0, 0, 0.05);\r\n}\r\n\r\n/* History Card */\r\n.history-card {\r\n    background: white;\r\n    border-radius: 12px;\r\n    box-shadow: 0 2px 8px rgba(0, 0, 0, 0.05);\r\n}\r\n\r\n.history-header {\r\n    padding: 1rem 1.25rem;\r\n    background: #003366;\r\n    color: white;\r\n    font-weight: 600;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n    border-bottom: 1px solid rgba(255, 255, 255, 0.1);\r\n}\r\n\r\n.history-content {\r\n    padding: 1.25rem;\r\n}\r\n\r\n/* Dropdown Styles */\r\n.dropdown {\r\n    position: relative;\r\n    z-index: 1030;\r\n}\r\n\r\n.dropdown-menu {\r\n    position: absolute;\r\n    z-index: 1031;\r\n    min-width: 200px;\r\n    background: white;\r\n    border-radius: 12px;\r\n    box-shadow: 0 4px 20px rgba(0, 0, 0, 0.15);\r\n    border: none;\r\n    padding: 0.5rem 0;\r\n    margin-top: 0.5rem;\r\n}\r\n\r\n.dropdown-menu.show {\r\n    display: block !important;\r\n}\r\n\r\n/* Button Styles */\r\n.btn-control {\r\n    height: 38px;\r\n    background: #f8fafc;\r\n    border: 1px solid #e2e8f0;\r\n    color: #4a5568;\r\n    font-size: 0.9rem;\r\n    padding: 0.5rem 1rem;\r\n    display: flex;\r\n    align-items: center;\r\n    gap: 0.5rem;\r\n    border-radius: 8px;\r\n    transition: all 0.2s ease;\r\n}\r\n\r\n.btn-control:hover,\r\n.btn-control:focus {\r\n    background: #f1f5f9;\r\n    border-color: #cbd5e1;\r\n    color: #2d3748;\r\n}\r\n\r\n/* Search Control */\r\n.search-control {\r\n    position: relative;\r\n    z-index: var(--z-controls);\r\n    width: 300px;\r\n}\r\n\r\n.search-control .input-group {\r\n    border-radius: 8px;\r\n    overflow: hidden;\r\n    box-shadow: 0 1px 3px rgba(0, 0, 0, 0.05);\r\n}\r\n\r\n.search-control .input-group-text {\r\n    background: white;\r\n    border: 1px solid #e2e8f0;\r\n    color: #718096;\r\n    padding-right: 0;\r\n}\r\n\r\n.search-control .form-control {\r\n    border: 1px solid #e2e8f0;\r\n    padding: 0.5rem 0.75rem;\r\n    font-size: 0.9rem;\r\n}\r\n\r\n/* Filter Badge */\r\n.filter-badge {\r\n    position: absolute;\r\n    top: -6px;\r\n    right: -6px;\r\n    background: #e53e3e;\r\n    color: white;\r\n    width: 18px;\r\n    height: 18px;\r\n    border-radius: 50%;\r\n    font-size: 0.7rem;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    border: 2px solid white;\r\n}\r\n\r\n/* Table styles */\r\n.table {\r\n    margin-bottom: 0;\r\n    background: white;\r\n}\r\n\r\n.table thead th {\r\n    position: sticky;\r\n    top: 0;\r\n    background: white;\r\n    z-index: 1020;\r\n    padding: 1rem;\r\n    font-weight: 600;\r\n    color: #4a5568;\r\n    border-bottom: 2px solid #e2e8f0;\r\n}\r\n\r\n/* Search control */\r\n.search-control {\r\n    position: relative;\r\n    z-index: var(--z-controls);\r\n}\r\n\r\n/* Controls wrapper */\r\n.controls-wrapper {\r\n    position: relative;\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    gap: 1rem;\r\n}\r\n\r\n.controls-left {\r\n    display: flex;\r\n    align-items: center;\r\n    gap: 0.75rem;\r\n    z-index: var(--z-controls);\r\n}\r\n\r\n.btn-light {\r\n    background: #f8fafc;\r\n    border: 1px solid #e2e8f0;\r\n    color: #4a5568;\r\n}\r\n\r\n.btn-light:hover {\r\n    background: #f1f5f9;\r\n    border-color: #cbd5e1;\r\n    color: #2d3748;\r\n}\r\n\r\n.btn-primary {\r\n    background: #4299e1;\r\n    border: none;\r\n    color: white;\r\n}\r\n\r\n.btn-primary:hover {\r\n    background: #3182ce;\r\n}\r\n\r\n.student-info p {\r\n    margin-bottom: 0.75rem;\r\n    padding-bottom: 0.75rem;\r\n    border-bottom: 1px solid #eee;\r\n}\r\n\r\n.student-info p:last-child {\r\n    border-bottom: none;\r\n}\r\n\r\n.student-info strong {\r\n    color: #666;\r\n    display: inline-block;\r\n    width: 100px;\r\n}\r\n\r\n.empty-state-message {\r\n    padding: 2rem 0;\r\n}\r\n\r\n.empty-state-message i {\r\n    font-size: 2rem;\r\n    display: block;\r\n    margin-bottom: 0.5rem;\r\n}\r\n\r\n.empty-state-message p {\r\n    margin: 0;\r\n    color: #6c757d;\r\n}\r\n\r\n.clickable-row {\r\n    cursor: pointer;\r\n    transition: background-color 0.2s ease;\r\n}\r\n\r\n.clickable-row:hover {\r\n    background-color: rgba(0, 51, 102, 0.05) !important;\r\n}\r\n\r\n.student-info-card,\r\n.performance-card,\r\n.history-card {\r\n    background: white;\r\n    border-radius: 10px;\r\n    box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);\r\n    overflow: hidden;\r\n}\r\n\r\n.student-info-header,\r\n.performance-header,\r\n.history-header {\r\n    background-color: #f8f9fa;\r\n    padding: 1rem;\r\n    font-weight: 600;\r\n    color: #2c3e50;\r\n    border-bottom: 1px solid #eee;\r\n    display: flex;\r\n    align-items: center;\r\n}\r\n\r\n.student-info-content,\r\n.performance-content,\r\n.history-content {\r\n    padding: 1.5rem;\r\n}\r\n\r\n.info-grid {\r\n    display: grid;\r\n    grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));\r\n    gap: 1.5rem;\r\n    padding: 1rem;\r\n}\r\n\r\n.info-item {\r\n    display: flex;\r\n    flex-direction: column;\r\n}\r\n\r\n.info-item label {\r\n    font-weight: 600;\r\n    color: #666;\r\n    margin-bottom: 0.25rem;\r\n}\r\n\r\n.info-item span {\r\n    color: #333;\r\n}\r\n\r\n.chart-container {\r\n    background: white;\r\n    padding: 1rem;\r\n    border-radius: 8px;\r\n    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.05);\r\n}\r\n\r\n.badge {\r\n    font-size: 1rem;\r\n    padding: 0.5em 1em;\r\n}\r\n\r\n.badge-quiz {\r\n    background-color: #4e73df;\r\n    color: white;\r\n}\r\n\r\n.badge-activity {\r\n    background-color: #1cc88a;\r\n    color: white;\r\n}\r\n\r\n.badge-performance {\r\n    background-color: #f6c23e;\r\n    color: white;\r\n}\r\n\r\n.score-excellent {\r\n    color: #1cc88a;\r\n    font-weight: 600;\r\n}\r\n\r\n.score-good {\r\n    color: #4e73df;\r\n    font-weight: 600;\r\n}\r\n\r\n.score-average {\r\n    color: #f6c23e;\r\n    font-weight: 600;\r\n}\r\n\r\n.score-poor {\r\n    color: #e74a3b;\r\n    font-weight: 600;\r\n}\r\n\r\n.modal-header.bg-primary {\r\n    background-color: #003366 !important;\r\n}\r\n\r\n.btn-close-white {\r\n    filter: brightness(0) invert(1);\r\n}\r\n\r\n.date-filter .form-control {\r\n    background-color: rgba(255, 255, 255, 0.1);\r\n    border: 1px solid rgba(255, 255, 255, 0.2);\r\n    color: white;\r\n    width: 150px;\r\n}\r\n\r\n.date-filter .form-control::-webkit-calendar-picker-indicator {\r\n    filter: invert(1);\r\n}\r\n\r\n.date-filter .form-control:focus {\r\n    background-color: rgba(255, 255, 255, 0.2);\r\n    border-color: rgba(255, 255, 255, 0.3);\r\n    color: white;\r\n}\r\n\r\n.date-filter span {\r\n    padding: 0 0.5rem;\r\n}\r\n\r\n.date-input-container {\r\n    position: relative;\r\n    display: inline-block;\r\n}\r\n\r\n.date-picker-dropdown {\r\n    position: absolute;\r\n    top: 100%;\r\n    left: 0;\r\n    margin-top: 4px;\r\n    background: white;\r\n    border-radius: 8px;\r\n    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);\r\n    padding: 12px;\r\n    min-width: 250px;\r\n}\r\n\r\n.date-picker-header {\r\n    display: flex;\r\n    justify-content: flex-end;\r\n    margin-bottom: 8px;\r\n}\r\n\r\n.close-btn {\r\n    background: none;\r\n    border: none;\r\n    color: #666;\r\n    cursor: pointer;\r\n    padding: 4px;\r\n    font-size: 14px;\r\n}\r\n\r\n.close-btn:hover {\r\n    color: #333;\r\n}\r\n\r\n.date-picker-input {\r\n    width: 100%;\r\n    padding: 8px;\r\n    border: 1px solid #ddd;\r\n    border-radius: 4px;\r\n    font-size: 14px;\r\n}\r\n\r\n.date-picker-input::-webkit-calendar-picker-indicator {\r\n    cursor: pointer;\r\n    padding: 4px;\r\n}\r\n\r\n.date-filter .form-control {\r\n    background-color: rgba(255, 255, 255, 0.1);\r\n    border: 1px solid rgba(255, 255, 255, 0.2);\r\n    color: white;\r\n    width: 150px;\r\n    cursor: pointer;\r\n}\r\n\r\n.date-filter .form-control:hover {\r\n    background-color: rgba(255, 255, 255, 0.2);\r\n}\r\n\r\n.date-filter span {\r\n    padding: 0 0.5rem;\r\n    color: white;\r\n}\r\n\r\n.history-card {\r\n    position: relative;\r\n    overflow: visible !important;\r\n}\r\n\r\n.history-header {\r\n    position: relative;\r\n    overflow: visible;\r\n}\r\n\r\n.table {\r\n    width: 100%;\r\n    margin-bottom: 0;\r\n    border-collapse: collapse;\r\n}\r\n\r\n.table th {\r\n    position: sticky;\r\n    top: 0;\r\n    background: white;\r\n    z-index: 10;\r\n    padding: 1rem;\r\n    font-weight: 600;\r\n    color: #4a5568;\r\n    border-bottom: 2px solid #e2e8f0;\r\n}\r\n\r\n.table td {\r\n    padding: 1rem;\r\n    vertical-align: middle;\r\n    border-bottom: 1px solid #e2e8f0;\r\n}\r\n\r\n.table tbody tr:hover {\r\n    background-color: #f8f9fa;\r\n}\r\n\r\n.btn {\r\n    padding: 0.5rem 1rem;\r\n    border-radius: 8px;\r\n    font-weight: 500;\r\n    display: inline-flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    gap: 0.5rem;\r\n}\r\n\r\n.btn i {\r\n    font-size: 0.875rem;\r\n}\r\n\r\n.form-control,\r\n.form-select {\r\n    border: 2px solid #eee;\r\n    border-radius: 8px;\r\n    padding: 0.75rem;\r\n    transition: all 0.3s;\r\n}\r\n\r\n.form-control:focus,\r\n.form-select:focus {\r\n    border-color: var(--primary-color);\r\n    box-shadow: 0 0 0 0.2rem rgba(0, 51, 102, 0.15);\r\n}\r\n\r\n/* Table Controls */\r\n.table-controls {\r\n    position: relative;\r\n    z-index: 1030;\r\n    background: white;\r\n    padding: 1rem;\r\n    border-radius: 12px;\r\n    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.05);\r\n    margin-bottom: 1rem;\r\n}\r\n\r\n.dropdown {\r\n    position: relative;\r\n}\r\n\r\n.dropdown-menu {\r\n    position: absolute;\r\n    z-index: 1031;\r\n    min-width: 200px;\r\n    background: white;\r\n    border-radius: 12px;\r\n    box-shadow: 0 4px 20px rgba(0, 0, 0, 0.15);\r\n    border: none;\r\n    padding: 0.5rem 0;\r\n    margin-top: 0.5rem;\r\n}\r\n\r\n.dropdown-menu.show {\r\n    display: block !important;\r\n}\r\n\r\n/* Modal Styles */\r\n.modal-dialog {\r\n    max-width: 900px;\r\n    margin: 1.75rem auto;\r\n}\r\n\r\n.modal-content {\r\n    background: white;\r\n    border-radius: 16px;\r\n    box-shadow: 0 20px 25px -5px rgba(0, 0, 0, 0.1), 0 10px 10px -5px rgba(0, 0, 0, 0.04);\r\n    border: 1px solid rgba(255, 255, 255, 0.1);\r\n    overflow: hidden;\r\n}\r\n\r\n.modal-header {\r\n    background: #003366;\r\n    color: white;\r\n    padding: 1.25rem 1.5rem;\r\n    border-bottom: 1px solid rgba(255, 255, 255, 0.1);\r\n}\r\n\r\n.modal-header .modal-title {\r\n    font-size: 1.25rem;\r\n    font-weight: 600;\r\n    margin: 0;\r\n}\r\n\r\n.modal-body {\r\n    padding: 1.5rem;\r\n}\r\n\r\n/* Student Details Layout */\r\n.student-details {\r\n    display: grid;\r\n    grid-template-columns: 350px 1fr;\r\n    gap: 2rem;\r\n    max-height: calc(90vh - 4rem);\r\n    overflow-y: auto;\r\n}\r\n\r\n.student-info {\r\n    background: #f8fafc;\r\n    padding: 1.5rem;\r\n    border-radius: 12px;\r\n    height: fit-content;\r\n}\r\n\r\n.info-title {\r\n    color: #2d3748;\r\n    font-size: 1.1rem;\r\n    font-weight: 600;\r\n    margin-bottom: 1.5rem;\r\n    padding-bottom: 0.75rem;\r\n    border-bottom: 2px solid #e2e8f0;\r\n}\r\n\r\n.info-content p {\r\n    margin-bottom: 1rem;\r\n    padding-bottom: 0.75rem;\r\n    border-bottom: 1px solid #e2e8f0;\r\n    font-size: 1rem;\r\n}\r\n\r\n.info-content p:last-child {\r\n    margin-bottom: 0;\r\n    padding-bottom: 0;\r\n    border-bottom: none;\r\n}\r\n\r\n.info-content strong {\r\n    color: #4a5568;\r\n    display: inline-block;\r\n    width: 120px;\r\n    font-weight: 600;\r\n}\r\n\r\n.student-charts {\r\n    display: grid;\r\n    grid-template-rows: 1fr 1fr;\r\n    gap: 1.5rem;\r\n}\r\n\r\n.chart-section {\r\n    background: white;\r\n    border-radius: 12px;\r\n    padding: 1.5rem;\r\n    box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n.chart-section h6 {\r\n    color: #2d3748;\r\n    font-size: 1.1rem;\r\n    font-weight: 600;\r\n    margin-bottom: 1.5rem;\r\n    padding-bottom: 0.75rem;\r\n    border-bottom: 2px solid #e2e8f0;\r\n}\r\n\r\n/* Table Styles */\r\n.table-responsive {\r\n    position: relative;\r\n    z-index: 1020;\r\n    background: white;\r\n    border-radius: 12px;\r\n    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.05);\r\n    overflow: hidden;\r\n}\r\n\r\n/* Update existing styles */\r\n.table-container {\r\n    background: white;\r\n    border-radius: 12px;\r\n    box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06);\r\n    overflow: hidden;\r\n}\r\n\r\n.table-controls {\r\n    background: #f8fafc;\r\n    padding: 1rem;\r\n    border-bottom: 1px solid #e2e8f0;\r\n}\r\n\r\n.modal-dialog.modal-xxl {\r\n    max-width: 90%;\r\n    width: 1400px;\r\n    margin: 2rem auto;\r\n}\r\n\r\n.student-details {\r\n    display: grid;\r\n    grid-template-columns: 350px 1fr;\r\n    gap: 2rem;\r\n    max-height: calc(90vh - 4rem);\r\n    overflow-y: auto;\r\n}\r\n\r\n.student-info {\r\n    background: #f8fafc;\r\n    padding: 2rem;\r\n    border-radius: 12px;\r\n    height: fit-content;\r\n}\r\n\r\n.info-title {\r\n    color: #2d3748;\r\n    font-size: 1.4rem;\r\n    font-weight: 600;\r\n    margin-bottom: 2rem;\r\n    padding-bottom: 1rem;\r\n    border-bottom: 2px solid #e2e8f0;\r\n}\r\n\r\n.info-content p {\r\n    margin-bottom: 1.25rem;\r\n    padding-bottom: 1.25rem;\r\n    border-bottom: 1px solid #e2e8f0;\r\n    font-size: 1.2rem;\r\n    line-height: 1.5;\r\n}\r\n\r\n.info-content strong {\r\n    color: #4a5568;\r\n    display: inline-block;\r\n    width: 160px;\r\n    font-weight: 600;\r\n}\r\n\r\n.chart-section {\r\n    background: white;\r\n    border-radius: 12px;\r\n    padding: 2rem;\r\n    box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n.chart-section h6 {\r\n    color: #2d3748;\r\n    font-size: 1.4rem;\r\n    font-weight: 600;\r\n    margin-bottom: 2rem;\r\n    padding-bottom: 1rem;\r\n    border-bottom: 2px solid #e2e8f0;\r\n}\r\n\r\n.attendance-table {\r\n    margin-top: 1rem;\r\n    font-size: 1.1rem;\r\n}\r\n\r\n.attendance-table th {\r\n    font-size: 1.1rem;\r\n    font-weight: 600;\r\n    color: #2d3748;\r\n}\r\n\r\n.attendance-table td {\r\n    font-size: 1.1rem;\r\n    color: #4a5568;\r\n}\r\n\r\n.badge {\r\n    font-size: 1rem;\r\n    padding: 0.5em 1em;\r\n}\r\n\r\n/* Fix z-index issues */\r\n.modal-wrapper {\r\n    z-index: 9999 !important;\r\n}\r\n\r\n.modal-backdrop {\r\n    position: fixed;\r\n    top: 0;\r\n    left: 0;\r\n    width: 100vw;\r\n    height: 100vh;\r\n    background-color: rgba(0, 0, 0, 0.5);\r\n    z-index: 9998;\r\n    backdrop-filter: blur(4px);\r\n}\r\n\r\n.modal-dialog {\r\n    z-index: 9999 !important;\r\n}\r\n\r\n.table-controls {\r\n    position: relative;\r\n    z-index: 1020;\r\n}\r\n\r\n.dropdown-menu {\r\n    z-index: 1030;\r\n}\r\n\r\n.table-responsive {\r\n    position: relative;\r\n    z-index: 1010;\r\n}\r\n\r\n/* Ensure dropdowns are hidden when modal is open */\r\n.modal-wrapper~.table-controls .dropdown-menu {\r\n    display: none !important;\r\n}\r\n\r\n/* Timeline Styles */\r\n.timeline {\r\n    position: relative;\r\n    padding: 1rem 0;\r\n}\r\n\r\n.timeline::before {\r\n    content: '';\r\n    position: absolute;\r\n    top: 0;\r\n    left: 1rem;\r\n    height: 100%;\r\n    width: 2px;\r\n    background: #e2e8f0;\r\n}\r\n\r\n.timeline-item {\r\n    position: relative;\r\n    padding-left: 2.5rem;\r\n    padding-bottom: 2rem;\r\n}\r\n\r\n.timeline-item:last-child {\r\n    padding-bottom: 0;\r\n}\r\n\r\n.timeline-marker {\r\n    position: absolute;\r\n    left: 0;\r\n    width: 24px;\r\n    height: 24px;\r\n    border-radius: 50%;\r\n    background: #e2e8f0;\r\n    border: 4px solid #fff;\r\n    box-shadow: 0 0 0 2px #e2e8f0;\r\n    z-index: 1;\r\n}\r\n\r\n.timeline-content {\r\n    background: white;\r\n    padding: 1rem;\r\n    border-radius: 8px;\r\n    box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n.timeline-content h6 {\r\n    margin: 0;\r\n    font-size: 1.1rem;\r\n    color: #2d3748;\r\n}\r\n\r\n.timeline-status {\r\n    margin: 0.5rem 0 0;\r\n    font-size: 0.95rem;\r\n    color: #718096;\r\n}\r\n\r\n.timeline-item.completed .timeline-marker {\r\n    background: #003366;\r\n    box-shadow: 0 0 0 2px #003366;\r\n}\r\n\r\n.timeline-item.completed .timeline-content {\r\n    border-left: 3px solid #003366;\r\n}\r\n\r\n.timeline-item.completed .timeline-status {\r\n    color: #003366;\r\n    font-weight: 500;\r\n}\r\n\r\n.timeline-item.current .timeline-marker {\r\n    background: #4299e1;\r\n    box-shadow: 0 0 0 2px #4299e1;\r\n}\r\n\r\n.timeline-item.current .timeline-content {\r\n    border-left: 3px solid #4299e1;\r\n    background: #ebf8ff;\r\n}\r\n\r\n.timeline-item.current .timeline-status {\r\n    color: #4299e1;\r\n    font-weight: 500;\r\n}\r\n\r\n/* Add Student Modal Styles */\r\n.add-student-modal {\r\n    position: fixed;\r\n    top: 0;\r\n    left: 0;\r\n    width: 100%;\r\n    height: 100%;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    z-index: 9999;\r\n}\r\n\r\n.add-student-backdrop {\r\n    position: fixed;\r\n    top: 0;\r\n    left: 0;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: rgba(0, 0, 0, 0.5);\r\n    z-index: 9998;\r\n}\r\n\r\n.add-student-dialog {\r\n    position: relative;\r\n    width: 100%;\r\n    max-width: 500px;\r\n    margin: 1.75rem;\r\n    z-index: 10000;\r\n}\r\n\r\n.add-student-content {\r\n    position: relative;\r\n    display: flex;\r\n    flex-direction: column;\r\n    background-color: #fff;\r\n    border-radius: 12px;\r\n    box-shadow: 0 20px 25px -5px rgba(0, 0, 0, 0.1), 0 10px 10px -5px rgba(0, 0, 0, 0.04);\r\n    overflow: hidden;\r\n}\r\n\r\n.modal-header {\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n    padding: 1rem 1.5rem;\r\n}\r\n\r\n.modal-header.bg-primary {\r\n    background-color: #003366 !important;\r\n}\r\n\r\n.modal-body {\r\n    padding: 1.5rem;\r\n}\r\n\r\n.btn-close-white {\r\n    filter: brightness(0) invert(1);\r\n}\r\n\r\n/* Form Styles */\r\n.form-label {\r\n    font-weight: 500;\r\n    color: #2d3748;\r\n    margin-bottom: 0.5rem;\r\n}\r\n\r\n.form-select,\r\n.form-control {\r\n    border: 2px solid #e2e8f0;\r\n    border-radius: 8px;\r\n    padding: 0.75rem;\r\n    width: 100%;\r\n    transition: all 0.2s;\r\n}\r\n\r\n.form-select:focus,\r\n.form-control:focus {\r\n    border-color: #003366;\r\n    box-shadow: 0 0 0 2px rgba(0, 51, 102, 0.1);\r\n}\r\n\r\n.text-muted {\r\n    color: #718096 !important;\r\n}\r\n\r\n.btn {\r\n    padding: 0.75rem 1.5rem;\r\n    font-weight: 500;\r\n    border-radius: 8px;\r\n    transition: all 0.2s;\r\n}\r\n\r\n.btn-primary {\r\n    background-color: #003366;\r\n    border: none;\r\n}\r\n\r\n.btn-primary:hover:not(:disabled) {\r\n    background-color: #004080;\r\n}\r\n\r\n.btn-secondary {\r\n    background-color: #e2e8f0;\r\n    border: none;\r\n    color: #4a5568;\r\n}\r\n\r\n.btn-secondary:hover {\r\n    background-color: #cbd5e1;\r\n}\r\n\r\n.btn:disabled {\r\n    opacity: 0.7;\r\n    cursor: not-allowed;\r\n}\r\n\r\n/* Add CSS styles for the success button and modal */\r\n.btn-success {\r\n    background-color: #10B981;\r\n    border: none;\r\n    color: white;\r\n}\r\n\r\n.btn-success:hover:not(:disabled) {\r\n    background-color: #059669;\r\n}\r\n\r\n.modal-header.bg-success {\r\n    background-color: #10B981 !important;\r\n}\r\n\r\n/* Form validation styles */\r\n.form-control.is-invalid,\r\n.form-select.is-invalid {\r\n    border-color: #dc3545;\r\n    background-image: url(\"data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 12 12' width='12' height='12' fill='none' stroke='%23dc3545'%3e%3ccircle cx='6' cy='6' r='4.5'/%3e%3cpath stroke-linejoin='round' d='M5.8 3.6h.4L6 6.5z'/%3e%3ccircle cx='6' cy='8.2' r='.6' fill='%23dc3545' stroke='none'/%3e%3c/svg%3e\");\r\n    background-repeat: no-repeat;\r\n    background-position: right calc(0.375em + 0.1875rem) center;\r\n    background-size: calc(0.75em + 0.375rem) calc(0.75em + 0.375rem);\r\n}\r\n\r\n.invalid-feedback {\r\n    display: block;\r\n    width: 100%;\r\n    margin-top: 0.25rem;\r\n    font-size: 0.875em;\r\n    color: #dc3545;\r\n}\r\n\r\n/* Add sticky controls styles */\r\n.sticky-controls {\r\n    position: sticky;\r\n    top: 0;\r\n    background: white;\r\n    padding: 1rem;\r\n    z-index: 1040;\r\n    border-bottom: 1px solid #e2e8f0;\r\n    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.05);\r\n}\r\n\r\n/* Add pagination styles */\r\n.pagination-controls {\r\n    background: white;\r\n    padding: 1rem;\r\n    border-top: 1px solid #e2e8f0;\r\n}\r\n\r\n.pagination-info {\r\n    color: #4a5568;\r\n    font-size: 0.9rem;\r\n}\r\n\r\n.pagination-buttons .btn {\r\n    min-width: 100px;\r\n}\r\n\r\n/* Update table styles for fixed height */\r\n.table-responsive {\r\n    max-height: calc(100vh - 250px);\r\n    overflow-y: auto;\r\n}\r\n\r\n/* Ensure sticky header stays in place */\r\n.table thead th {\r\n    position: sticky;\r\n    top: 0;\r\n    background: white;\r\n    z-index: 1020;\r\n}\r\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}