{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, createTextVNode as _createTextVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, vModelSelect as _vModelSelect, withDirectives as _withDirectives } from \"vue\";\nconst _hoisted_1 = {\n  class: \"dashboard\",\n  ref: \"dashboardContainer\"\n};\nconst _hoisted_2 = {\n  class: \"greeting-section mb-4\"\n};\nconst _hoisted_3 = {\n  class: \"greeting\"\n};\nconst _hoisted_4 = {\n  class: \"d-flex justify-content-between align-items-center mb-4\"\n};\nconst _hoisted_5 = {\n  class: \"dropdown\"\n};\nconst _hoisted_6 = {\n  class: \"btn btn-filter dropdown-toggle\",\n  type: \"button\",\n  id: \"filterDropdown\",\n  \"data-bs-toggle\": \"dropdown\",\n  \"aria-expanded\": \"false\"\n};\nconst _hoisted_7 = {\n  class: \"dropdown-menu filter-menu p-3\",\n  \"aria-labelledby\": \"filterDropdown\"\n};\nconst _hoisted_8 = {\n  class: \"mb-3\"\n};\nconst _hoisted_9 = [\"value\"];\nconst _hoisted_10 = {\n  class: \"mb-3\"\n};\nconst _hoisted_11 = [\"disabled\"];\nconst _hoisted_12 = [\"value\"];\nconst _hoisted_13 = {\n  class: \"mb-3\"\n};\nconst _hoisted_14 = [\"disabled\"];\nconst _hoisted_15 = [\"value\"];\nconst _hoisted_16 = {\n  class: \"d-flex justify-content-between\"\n};\nconst _hoisted_17 = {\n  key: 0,\n  class: \"last-update-badge\"\n};\nconst _hoisted_18 = {\n  class: \"row g-4 mb-4\"\n};\nconst _hoisted_19 = {\n  class: \"col-md-4\"\n};\nconst _hoisted_20 = {\n  class: \"dashboard-card\"\n};\nconst _hoisted_21 = {\n  class: \"card-info\"\n};\nconst _hoisted_22 = {\n  key: 0,\n  class: \"stat-value\"\n};\nconst _hoisted_23 = {\n  key: 1,\n  class: \"stat-value loading\"\n};\nconst _hoisted_24 = {\n  class: \"col-md-4\"\n};\nconst _hoisted_25 = {\n  class: \"dashboard-card\"\n};\nconst _hoisted_26 = {\n  class: \"card-info\"\n};\nconst _hoisted_27 = {\n  key: 0,\n  class: \"stat-value\"\n};\nconst _hoisted_28 = {\n  key: 1,\n  class: \"stat-value loading\"\n};\nconst _hoisted_29 = {\n  class: \"col-md-4\"\n};\nconst _hoisted_30 = {\n  class: \"dashboard-card\"\n};\nconst _hoisted_31 = {\n  class: \"card-info\"\n};\nconst _hoisted_32 = {\n  key: 0,\n  class: \"stat-value\"\n};\nconst _hoisted_33 = {\n  key: 1,\n  class: \"stat-value loading\"\n};\nconst _hoisted_34 = {\n  class: \"row g-4 mb-4\"\n};\nconst _hoisted_35 = {\n  class: \"col-md-6\"\n};\nconst _hoisted_36 = {\n  class: \"dashboard-card\"\n};\nconst _hoisted_37 = {\n  class: \"card-info\"\n};\nconst _hoisted_38 = {\n  key: 0,\n  class: \"stat-value\"\n};\nconst _hoisted_39 = {\n  key: 1,\n  class: \"stat-value loading\"\n};\nconst _hoisted_40 = {\n  key: 2,\n  class: \"no-data\"\n};\nconst _hoisted_41 = {\n  class: \"col-md-6\"\n};\nconst _hoisted_42 = {\n  class: \"dashboard-card\"\n};\nconst _hoisted_43 = {\n  class: \"card-info\"\n};\nconst _hoisted_44 = {\n  key: 0,\n  class: \"stat-value\"\n};\nconst _hoisted_45 = {\n  key: 1,\n  class: \"stat-value loading\"\n};\nconst _hoisted_46 = {\n  key: 2,\n  class: \"no-data\"\n};\nconst _hoisted_47 = {\n  class: \"row mb-4\"\n};\nconst _hoisted_48 = {\n  class: \"col-md-6 mb-4\"\n};\nconst _hoisted_49 = {\n  class: \"chart-card\"\n};\nconst _hoisted_50 = {\n  class: \"card-body\"\n};\nconst _hoisted_51 = {\n  class: \"chart-container\"\n};\nconst _hoisted_52 = {\n  key: 0,\n  class: \"loading-overlay\"\n};\nconst _hoisted_53 = {\n  ref: \"performanceChart\"\n};\nconst _hoisted_54 = {\n  key: 1,\n  class: \"no-data-message\"\n};\nconst _hoisted_55 = {\n  class: \"col-md-6 mb-4\"\n};\nconst _hoisted_56 = {\n  class: \"chart-card\"\n};\nconst _hoisted_57 = {\n  class: \"card-body\"\n};\nconst _hoisted_58 = {\n  class: \"chart-container\"\n};\nconst _hoisted_59 = {\n  key: 0,\n  class: \"loading-overlay\"\n};\nconst _hoisted_60 = {\n  ref: \"assessmentTypeChart\"\n};\nconst _hoisted_61 = {\n  key: 1,\n  class: \"no-data-message\"\n};\nconst _hoisted_62 = {\n  class: \"col-md-6 mb-4\"\n};\nconst _hoisted_63 = {\n  class: \"chart-card\"\n};\nconst _hoisted_64 = {\n  class: \"card-body\"\n};\nconst _hoisted_65 = {\n  class: \"chart-container\"\n};\nconst _hoisted_66 = {\n  key: 0,\n  class: \"loading-overlay\"\n};\nconst _hoisted_67 = {\n  ref: \"performanceTrendChart\"\n};\nconst _hoisted_68 = {\n  key: 1,\n  class: \"no-data-message\"\n};\nconst _hoisted_69 = {\n  class: \"col-md-6 mb-4\"\n};\nconst _hoisted_70 = {\n  class: \"chart-card\"\n};\nconst _hoisted_71 = {\n  class: \"card-body\"\n};\nconst _hoisted_72 = {\n  class: \"chart-container\"\n};\nconst _hoisted_73 = {\n  key: 0,\n  class: \"loading-overlay\"\n};\nconst _hoisted_74 = {\n  ref: \"sectionChart\"\n};\nconst _hoisted_75 = {\n  key: 1,\n  class: \"no-data-message\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createCommentVNode(\" Greeting Section \"), _createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"h2\", _hoisted_3, \"Welcome, Dean \" + _toDisplayString($setup.userName), 1 /* TEXT */), _cache[9] || (_cache[9] = _createElementVNode(\"p\", {\n    class: \"greeting-subtitle\"\n  }, \"Computer and Information Technology Department Dashboard\", -1 /* HOISTED */))]), _createElementVNode(\"div\", _hoisted_4, [_createCommentVNode(\" Combined Filter Dropdown \"), _createElementVNode(\"div\", _hoisted_5, [_createElementVNode(\"button\", _hoisted_6, [_cache[10] || (_cache[10] = _createElementVNode(\"i\", {\n    class: \"fas fa-filter me-2\"\n  }, null, -1 /* HOISTED */)), _createTextVNode(\" \" + _toDisplayString($setup.getFilterDisplay()), 1 /* TEXT */)]), _createElementVNode(\"div\", _hoisted_7, [_cache[17] || (_cache[17] = _createElementVNode(\"h6\", {\n    class: \"dropdown-header\"\n  }, \"Filter Options\", -1 /* HOISTED */)), _createElementVNode(\"div\", _hoisted_8, [_cache[12] || (_cache[12] = _createElementVNode(\"label\", {\n    class: \"form-label\"\n  }, \"Academic Year\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"select\", {\n    class: \"form-select mb-2\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $setup.selectedYear = $event),\n    onChange: _cache[1] || (_cache[1] = (...args) => $setup.handleYearChange && $setup.handleYearChange(...args))\n  }, [_cache[11] || (_cache[11] = _createElementVNode(\"option\", {\n    value: \"\"\n  }, \"All Years\", -1 /* HOISTED */)), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.availableYears, year => {\n    return _openBlock(), _createElementBlock(\"option\", {\n      key: year,\n      value: year\n    }, _toDisplayString(year) + \" Year\", 9 /* TEXT, PROPS */, _hoisted_9);\n  }), 128 /* KEYED_FRAGMENT */))], 544 /* NEED_HYDRATION, NEED_PATCH */), [[_vModelSelect, $setup.selectedYear]])]), _createElementVNode(\"div\", _hoisted_10, [_cache[14] || (_cache[14] = _createElementVNode(\"label\", {\n    class: \"form-label\"\n  }, \"Section\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"select\", {\n    class: \"form-select mb-2\",\n    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $setup.selectedSection = $event),\n    onChange: _cache[3] || (_cache[3] = (...args) => $setup.handleSectionChange && $setup.handleSectionChange(...args)),\n    disabled: !$setup.selectedYear\n  }, [_cache[13] || (_cache[13] = _createElementVNode(\"option\", {\n    value: \"\"\n  }, \"All Sections\", -1 /* HOISTED */)), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.sections, section => {\n    return _openBlock(), _createElementBlock(\"option\", {\n      key: section.id,\n      value: section.name\n    }, _toDisplayString(section.name) + \" - \" + _toDisplayString(section.teacherName || 'No Teacher Assigned'), 9 /* TEXT, PROPS */, _hoisted_12);\n  }), 128 /* KEYED_FRAGMENT */))], 40 /* PROPS, NEED_HYDRATION */, _hoisted_11), [[_vModelSelect, $setup.selectedSection]])]), _createElementVNode(\"div\", _hoisted_13, [_cache[16] || (_cache[16] = _createElementVNode(\"label\", {\n    class: \"form-label\"\n  }, \"Subject\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"select\", {\n    class: \"form-select mb-2\",\n    \"onUpdate:modelValue\": _cache[4] || (_cache[4] = $event => $setup.selectedSubject = $event),\n    onChange: _cache[5] || (_cache[5] = (...args) => $setup.handleFilterChange && $setup.handleFilterChange(...args)),\n    disabled: !$setup.selectedYear\n  }, [_cache[15] || (_cache[15] = _createElementVNode(\"option\", {\n    value: \"\"\n  }, \"All Subjects\", -1 /* HOISTED */)), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.subjects, subject => {\n    return _openBlock(), _createElementBlock(\"option\", {\n      key: subject.id,\n      value: subject.name\n    }, _toDisplayString(subject.name) + \" - \" + _toDisplayString(subject.teacherName || 'No Teacher Assigned'), 9 /* TEXT, PROPS */, _hoisted_15);\n  }), 128 /* KEYED_FRAGMENT */))], 40 /* PROPS, NEED_HYDRATION */, _hoisted_14), [[_vModelSelect, $setup.selectedSubject]])]), _createElementVNode(\"div\", _hoisted_16, [_createElementVNode(\"button\", {\n    class: \"btn btn-outline-secondary\",\n    onClick: _cache[6] || (_cache[6] = (...args) => $setup.clearFilters && $setup.clearFilters(...args))\n  }, \"Clear Filters\"), _createElementVNode(\"button\", {\n    class: \"btn btn-primary\",\n    onClick: _cache[7] || (_cache[7] = (...args) => $setup.refreshDashboard && $setup.refreshDashboard(...args))\n  }, \"Apply\")])])]), _createCommentVNode(\" Last Updated \"), $setup.lastUpdate ? (_openBlock(), _createElementBlock(\"div\", _hoisted_17, [_createTextVNode(\" Last updated: \" + _toDisplayString($setup.formatDate($setup.lastUpdate)) + \" \", 1 /* TEXT */), _createElementVNode(\"button\", {\n    class: \"btn btn-refresh ms-2\",\n    onClick: _cache[8] || (_cache[8] = (...args) => $setup.refreshDashboard && $setup.refreshDashboard(...args)),\n    title: \"Refresh Dashboard\"\n  }, _cache[18] || (_cache[18] = [_createElementVNode(\"i\", {\n    class: \"fas fa-sync-alt\"\n  }, null, -1 /* HOISTED */)]))])) : _createCommentVNode(\"v-if\", true)]), _createCommentVNode(\" Stats Cards \"), _createElementVNode(\"div\", _hoisted_18, [_createCommentVNode(\" Total Students Card \"), _createElementVNode(\"div\", _hoisted_19, [_createElementVNode(\"div\", _hoisted_20, [_cache[21] || (_cache[21] = _createElementVNode(\"div\", {\n    class: \"icon-container\"\n  }, [_createElementVNode(\"i\", {\n    class: \"fas fa-user-graduate\"\n  })], -1 /* HOISTED */)), _createElementVNode(\"div\", _hoisted_21, [_cache[20] || (_cache[20] = _createElementVNode(\"h3\", {\n    class: \"stat-title\"\n  }, \"Total Students\", -1 /* HOISTED */)), !$setup.isLoading ? (_openBlock(), _createElementBlock(\"div\", _hoisted_22, _toDisplayString($setup.totalStudents), 1 /* TEXT */)) : (_openBlock(), _createElementBlock(\"div\", _hoisted_23, _cache[19] || (_cache[19] = [_createElementVNode(\"i\", {\n    class: \"fas fa-spinner fa-spin\"\n  }, null, -1 /* HOISTED */)])))])])]), _createCommentVNode(\" Total Teachers Card \"), _createElementVNode(\"div\", _hoisted_24, [_createElementVNode(\"div\", _hoisted_25, [_cache[24] || (_cache[24] = _createElementVNode(\"div\", {\n    class: \"icon-container\"\n  }, [_createElementVNode(\"i\", {\n    class: \"fas fa-chalkboard-teacher\"\n  })], -1 /* HOISTED */)), _createElementVNode(\"div\", _hoisted_26, [_cache[23] || (_cache[23] = _createElementVNode(\"h3\", {\n    class: \"stat-title\"\n  }, \"Total Teachers\", -1 /* HOISTED */)), !$setup.isLoading ? (_openBlock(), _createElementBlock(\"div\", _hoisted_27, _toDisplayString($setup.totalTeachers), 1 /* TEXT */)) : (_openBlock(), _createElementBlock(\"div\", _hoisted_28, _cache[22] || (_cache[22] = [_createElementVNode(\"i\", {\n    class: \"fas fa-spinner fa-spin\"\n  }, null, -1 /* HOISTED */)])))])])]), _createCommentVNode(\" Active Sections Card \"), _createElementVNode(\"div\", _hoisted_29, [_createElementVNode(\"div\", _hoisted_30, [_cache[27] || (_cache[27] = _createElementVNode(\"div\", {\n    class: \"icon-container\"\n  }, [_createElementVNode(\"i\", {\n    class: \"fas fa-users\"\n  })], -1 /* HOISTED */)), _createElementVNode(\"div\", _hoisted_31, [_cache[26] || (_cache[26] = _createElementVNode(\"h3\", {\n    class: \"stat-title\"\n  }, \"Active Sections\", -1 /* HOISTED */)), !$setup.isLoading ? (_openBlock(), _createElementBlock(\"div\", _hoisted_32, _toDisplayString($setup.activeSections), 1 /* TEXT */)) : (_openBlock(), _createElementBlock(\"div\", _hoisted_33, _cache[25] || (_cache[25] = [_createElementVNode(\"i\", {\n    class: \"fas fa-spinner fa-spin\"\n  }, null, -1 /* HOISTED */)])))])])])]), _createCommentVNode(\" Performance Stats \"), _createElementVNode(\"div\", _hoisted_34, [_createCommentVNode(\" Average Attendance Card \"), _createElementVNode(\"div\", _hoisted_35, [_createElementVNode(\"div\", _hoisted_36, [_cache[30] || (_cache[30] = _createElementVNode(\"div\", {\n    class: \"icon-container\"\n  }, [_createElementVNode(\"i\", {\n    class: \"fas fa-clock\"\n  })], -1 /* HOISTED */)), _createElementVNode(\"div\", _hoisted_37, [_cache[29] || (_cache[29] = _createElementVNode(\"h3\", {\n    class: \"stat-title\"\n  }, \"Average Attendance\", -1 /* HOISTED */)), !$setup.isLoading && $setup.hasAttendanceData ? (_openBlock(), _createElementBlock(\"div\", _hoisted_38, _toDisplayString($setup.averageAttendance) + \"%\", 1 /* TEXT */)) : $setup.isLoading ? (_openBlock(), _createElementBlock(\"div\", _hoisted_39, _cache[28] || (_cache[28] = [_createElementVNode(\"i\", {\n    class: \"fas fa-spinner fa-spin\"\n  }, null, -1 /* HOISTED */)]))) : (_openBlock(), _createElementBlock(\"div\", _hoisted_40, \"No data available\"))])])]), _createCommentVNode(\" Average Score Card \"), _createElementVNode(\"div\", _hoisted_41, [_createElementVNode(\"div\", _hoisted_42, [_cache[33] || (_cache[33] = _createElementVNode(\"div\", {\n    class: \"icon-container\"\n  }, [_createElementVNode(\"i\", {\n    class: \"fas fa-chart-line\"\n  })], -1 /* HOISTED */)), _createElementVNode(\"div\", _hoisted_43, [_cache[32] || (_cache[32] = _createElementVNode(\"h3\", {\n    class: \"stat-title\"\n  }, \"Average Score\", -1 /* HOISTED */)), !$setup.isLoading && $setup.hasScoreData ? (_openBlock(), _createElementBlock(\"div\", _hoisted_44, _toDisplayString($setup.averageScore) + \"%\", 1 /* TEXT */)) : $setup.isLoading ? (_openBlock(), _createElementBlock(\"div\", _hoisted_45, _cache[31] || (_cache[31] = [_createElementVNode(\"i\", {\n    class: \"fas fa-spinner fa-spin\"\n  }, null, -1 /* HOISTED */)]))) : (_openBlock(), _createElementBlock(\"div\", _hoisted_46, \"No data available\"))])])])]), _createCommentVNode(\" Charts Row \"), _createElementVNode(\"div\", _hoisted_47, [_createCommentVNode(\" Attendance Distribution Chart \"), _createElementVNode(\"div\", _hoisted_48, [_createElementVNode(\"div\", _hoisted_49, [_createElementVNode(\"div\", _hoisted_50, [_cache[35] || (_cache[35] = _createElementVNode(\"h5\", {\n    class: \"card-title\"\n  }, [_createElementVNode(\"i\", {\n    class: \"fas fa-calendar-check me-2\"\n  }), _createTextVNode(\" Attendance Distribution \")], -1 /* HOISTED */)), _cache[36] || (_cache[36] = _createElementVNode(\"p\", {\n    class: \"chart-description\"\n  }, \"Breakdown of student attendance patterns across the department\", -1 /* HOISTED */)), _createElementVNode(\"div\", _hoisted_51, [$setup.isLoading ? (_openBlock(), _createElementBlock(\"div\", _hoisted_52, _cache[34] || (_cache[34] = [_createElementVNode(\"i\", {\n    class: \"fas fa-spinner fa-spin\"\n  }, null, -1 /* HOISTED */), _createElementVNode(\"p\", null, \"Loading chart data...\", -1 /* HOISTED */)]))) : _createCommentVNode(\"v-if\", true), _createElementVNode(\"canvas\", _hoisted_53, null, 512 /* NEED_PATCH */), !$setup.hasAttendanceData && !$setup.isLoading ? (_openBlock(), _createElementBlock(\"p\", _hoisted_54, \"No attendance data available\")) : _createCommentVNode(\"v-if\", true)])])])]), _createCommentVNode(\" Assessment Type Distribution \"), _createElementVNode(\"div\", _hoisted_55, [_createElementVNode(\"div\", _hoisted_56, [_createElementVNode(\"div\", _hoisted_57, [_cache[38] || (_cache[38] = _createElementVNode(\"h5\", {\n    class: \"card-title\"\n  }, [_createElementVNode(\"i\", {\n    class: \"fas fa-tasks me-2\"\n  }), _createTextVNode(\" Assessment Performance Analysis \")], -1 /* HOISTED */)), _cache[39] || (_cache[39] = _createElementVNode(\"p\", {\n    class: \"chart-description\"\n  }, \"Average scores by assessment type across the department\", -1 /* HOISTED */)), _createElementVNode(\"div\", _hoisted_58, [$setup.isLoading ? (_openBlock(), _createElementBlock(\"div\", _hoisted_59, _cache[37] || (_cache[37] = [_createElementVNode(\"i\", {\n    class: \"fas fa-spinner fa-spin\"\n  }, null, -1 /* HOISTED */), _createElementVNode(\"p\", null, \"Loading chart data...\", -1 /* HOISTED */)]))) : _createCommentVNode(\"v-if\", true), _createElementVNode(\"canvas\", _hoisted_60, null, 512 /* NEED_PATCH */), !$setup.hasAssessmentData && !$setup.isLoading ? (_openBlock(), _createElementBlock(\"p\", _hoisted_61, \"No assessment data available\")) : _createCommentVNode(\"v-if\", true)])])])]), _createCommentVNode(\" Performance Trend Chart \"), _createElementVNode(\"div\", _hoisted_62, [_createElementVNode(\"div\", _hoisted_63, [_createElementVNode(\"div\", _hoisted_64, [_cache[41] || (_cache[41] = _createElementVNode(\"h5\", {\n    class: \"card-title\"\n  }, [_createElementVNode(\"i\", {\n    class: \"fas fa-chart-line me-2\"\n  }), _createTextVNode(\" Performance Trends Over Time \")], -1 /* HOISTED */)), _cache[42] || (_cache[42] = _createElementVNode(\"p\", {\n    class: \"chart-description\"\n  }, \"Department average scores across recent assessments\", -1 /* HOISTED */)), _createElementVNode(\"div\", _hoisted_65, [$setup.isLoading ? (_openBlock(), _createElementBlock(\"div\", _hoisted_66, _cache[40] || (_cache[40] = [_createElementVNode(\"i\", {\n    class: \"fas fa-spinner fa-spin\"\n  }, null, -1 /* HOISTED */), _createElementVNode(\"p\", null, \"Loading chart data...\", -1 /* HOISTED */)]))) : _createCommentVNode(\"v-if\", true), _createElementVNode(\"canvas\", _hoisted_67, null, 512 /* NEED_PATCH */), !$setup.hasPerformanceData && !$setup.isLoading ? (_openBlock(), _createElementBlock(\"p\", _hoisted_68, \"No performance data available\")) : _createCommentVNode(\"v-if\", true)])])])]), _createCommentVNode(\" Section Performance \"), _createElementVNode(\"div\", _hoisted_69, [_createElementVNode(\"div\", _hoisted_70, [_createElementVNode(\"div\", _hoisted_71, [_cache[44] || (_cache[44] = _createElementVNode(\"h5\", {\n    class: \"card-title\"\n  }, [_createElementVNode(\"i\", {\n    class: \"fas fa-users me-2\"\n  }), _createTextVNode(\" Section Performance \")], -1 /* HOISTED */)), _cache[45] || (_cache[45] = _createElementVNode(\"p\", {\n    class: \"chart-description\"\n  }, \"Comparison of performance across different sections\", -1 /* HOISTED */)), _createElementVNode(\"div\", _hoisted_72, [$setup.isLoading ? (_openBlock(), _createElementBlock(\"div\", _hoisted_73, _cache[43] || (_cache[43] = [_createElementVNode(\"i\", {\n    class: \"fas fa-spinner fa-spin\"\n  }, null, -1 /* HOISTED */), _createElementVNode(\"p\", null, \"Loading chart data...\", -1 /* HOISTED */)]))) : _createCommentVNode(\"v-if\", true), _createElementVNode(\"canvas\", _hoisted_74, null, 512 /* NEED_PATCH */), !$setup.hasSectionData && !$setup.isLoading ? (_openBlock(), _createElementBlock(\"p\", _hoisted_75, \"No section data available\")) : _createCommentVNode(\"v-if\", true)])])])])])], 512 /* NEED_PATCH */);\n}","map":{"version":3,"names":["class","ref","type","id","key","_createElementBlock","_hoisted_1","_createCommentVNode","_createElementVNode","_hoisted_2","_hoisted_3","_toDisplayString","$setup","userName","_hoisted_4","_hoisted_5","_hoisted_6","_createTextVNode","getFilterDisplay","_hoisted_7","_hoisted_8","_cache","$event","selectedYear","onChange","args","handleYearChange","value","_Fragment","_renderList","availableYears","year","_hoisted_9","_hoisted_10","selectedSection","handleSectionChange","disabled","sections","section","name","teacherName","_hoisted_12","_hoisted_11","_hoisted_13","selectedSubject","handleFilterChange","subjects","subject","_hoisted_15","_hoisted_14","_hoisted_16","onClick","clearFilters","refreshDashboard","lastUpdate","_hoisted_17","formatDate","title","_hoisted_18","_hoisted_19","_hoisted_20","_hoisted_21","isLoading","_hoisted_22","totalStudents","_hoisted_23","_hoisted_24","_hoisted_25","_hoisted_26","_hoisted_27","totalTeachers","_hoisted_28","_hoisted_29","_hoisted_30","_hoisted_31","_hoisted_32","activeSections","_hoisted_33","_hoisted_34","_hoisted_35","_hoisted_36","_hoisted_37","hasAttendanceData","_hoisted_38","averageAttendance","_hoisted_39","_hoisted_40","_hoisted_41","_hoisted_42","_hoisted_43","hasScoreData","_hoisted_44","averageScore","_hoisted_45","_hoisted_46","_hoisted_47","_hoisted_48","_hoisted_49","_hoisted_50","_hoisted_51","_hoisted_52","_hoisted_53","_hoisted_54","_hoisted_55","_hoisted_56","_hoisted_57","_hoisted_58","_hoisted_59","_hoisted_60","hasAssessmentData","_hoisted_61","_hoisted_62","_hoisted_63","_hoisted_64","_hoisted_65","_hoisted_66","_hoisted_67","hasPerformanceData","_hoisted_68","_hoisted_69","_hoisted_70","_hoisted_71","_hoisted_72","_hoisted_73","_hoisted_74","hasSectionData","_hoisted_75"],"sources":["D:\\au_dev\\client\\src\\views\\Dashboard.vue"],"sourcesContent":["<template>\n  <div class=\"dashboard\" ref=\"dashboardContainer\">\n    <!-- Greeting Section -->\n    <div class=\"greeting-section mb-4\">\n      <h2 class=\"greeting\">Welcome, Dean {{ userName }}</h2>\n      <p class=\"greeting-subtitle\">Computer and Information Technology Department Dashboard</p>\n    </div>\n    \n    <div class=\"d-flex justify-content-between align-items-center mb-4\">\n      <!-- Combined Filter Dropdown -->\n      <div class=\"dropdown\">\n        <button class=\"btn btn-filter dropdown-toggle\" type=\"button\" id=\"filterDropdown\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\n          <i class=\"fas fa-filter me-2\"></i>\n          {{ getFilterDisplay() }}\n        </button>\n        <div class=\"dropdown-menu filter-menu p-3\" aria-labelledby=\"filterDropdown\">\n          <h6 class=\"dropdown-header\">Filter Options</h6>\n          <div class=\"mb-3\">\n            <label class=\"form-label\">Academic Year</label>\n            <select class=\"form-select mb-2\" v-model=\"selectedYear\" @change=\"handleYearChange\">\n              <option value=\"\">All Years</option>\n              <option v-for=\"year in availableYears\" :key=\"year\" :value=\"year\">{{ year }} Year</option>\n            </select>\n          </div>\n          <div class=\"mb-3\">\n            <label class=\"form-label\">Section</label>\n            <select class=\"form-select mb-2\" v-model=\"selectedSection\" @change=\"handleSectionChange\" :disabled=\"!selectedYear\">\n              <option value=\"\">All Sections</option>\n              <option v-for=\"section in sections\" :key=\"section.id\" :value=\"section.name\">\n                {{ section.name }} - {{ section.teacherName || 'No Teacher Assigned' }}\n              </option>\n            </select>\n          </div>\n          <div class=\"mb-3\">\n            <label class=\"form-label\">Subject</label>\n            <select class=\"form-select mb-2\" v-model=\"selectedSubject\" @change=\"handleFilterChange\" :disabled=\"!selectedYear\">\n              <option value=\"\">All Subjects</option>\n              <option v-for=\"subject in subjects\" :key=\"subject.id\" :value=\"subject.name\">\n                {{ subject.name }} - {{ subject.teacherName || 'No Teacher Assigned' }}\n              </option>\n            </select>\n          </div>\n          <div class=\"d-flex justify-content-between\">\n            <button class=\"btn btn-outline-secondary\" @click=\"clearFilters\">Clear Filters</button>\n            <button class=\"btn btn-primary\" @click=\"refreshDashboard\">Apply</button>\n          </div>\n        </div>\n      </div>\n      \n      <!-- Last Updated -->\n      <div class=\"last-update-badge\" v-if=\"lastUpdate\">\n        Last updated: {{ formatDate(lastUpdate) }}\n        <button class=\"btn btn-refresh ms-2\" @click=\"refreshDashboard\" title=\"Refresh Dashboard\">\n          <i class=\"fas fa-sync-alt\"></i>\n        </button>\n      </div>\n    </div>\n\n    <!-- Stats Cards -->\n    <div class=\"row g-4 mb-4\">\n      <!-- Total Students Card -->\n      <div class=\"col-md-4\">\n        <div class=\"dashboard-card\">\n          <div class=\"icon-container\">\n            <i class=\"fas fa-user-graduate\"></i>\n          </div>\n          <div class=\"card-info\">\n            <h3 class=\"stat-title\">Total Students</h3>\n            <div class=\"stat-value\" v-if=\"!isLoading\">{{ totalStudents }}</div>\n            <div class=\"stat-value loading\" v-else><i class=\"fas fa-spinner fa-spin\"></i></div>\n          </div>\n        </div>\n      </div>\n\n      <!-- Total Teachers Card -->\n      <div class=\"col-md-4\">\n        <div class=\"dashboard-card\">\n          <div class=\"icon-container\">\n            <i class=\"fas fa-chalkboard-teacher\"></i>\n          </div>\n          <div class=\"card-info\">\n            <h3 class=\"stat-title\">Total Teachers</h3>\n            <div class=\"stat-value\" v-if=\"!isLoading\">{{ totalTeachers }}</div>\n            <div class=\"stat-value loading\" v-else><i class=\"fas fa-spinner fa-spin\"></i></div>\n          </div>\n        </div>\n      </div>\n\n      <!-- Active Sections Card -->\n      <div class=\"col-md-4\">\n        <div class=\"dashboard-card\">\n          <div class=\"icon-container\">\n            <i class=\"fas fa-users\"></i>\n          </div>\n          <div class=\"card-info\">\n            <h3 class=\"stat-title\">Active Sections</h3>\n            <div class=\"stat-value\" v-if=\"!isLoading\">{{ activeSections }}</div>\n            <div class=\"stat-value loading\" v-else><i class=\"fas fa-spinner fa-spin\"></i></div>\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <!-- Performance Stats -->\n    <div class=\"row g-4 mb-4\">\n      <!-- Average Attendance Card -->\n      <div class=\"col-md-6\">\n        <div class=\"dashboard-card\">\n          <div class=\"icon-container\">\n            <i class=\"fas fa-clock\"></i>\n          </div>\n          <div class=\"card-info\">\n            <h3 class=\"stat-title\">Average Attendance</h3>\n            <div class=\"stat-value\" v-if=\"!isLoading && hasAttendanceData\">{{ averageAttendance }}%</div>\n            <div class=\"stat-value loading\" v-else-if=\"isLoading\"><i class=\"fas fa-spinner fa-spin\"></i></div>\n            <div class=\"no-data\" v-else>No data available</div>\n          </div>\n        </div>\n      </div>\n      \n      <!-- Average Score Card -->\n      <div class=\"col-md-6\">\n        <div class=\"dashboard-card\">\n          <div class=\"icon-container\">\n            <i class=\"fas fa-chart-line\"></i>\n          </div>\n          <div class=\"card-info\">\n            <h3 class=\"stat-title\">Average Score</h3>\n            <div class=\"stat-value\" v-if=\"!isLoading && hasScoreData\">{{ averageScore }}%</div>\n            <div class=\"stat-value loading\" v-else-if=\"isLoading\"><i class=\"fas fa-spinner fa-spin\"></i></div>\n            <div class=\"no-data\" v-else>No data available</div>\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <!-- Charts Row -->\n    <div class=\"row mb-4\">\n      <!-- Attendance Distribution Chart -->\n      <div class=\"col-md-6 mb-4\">\n        <div class=\"chart-card\">\n          <div class=\"card-body\">\n            <h5 class=\"card-title\">\n              <i class=\"fas fa-calendar-check me-2\"></i>\n              Attendance Distribution\n            </h5>\n            <p class=\"chart-description\">Breakdown of student attendance patterns across the department</p>\n            <div class=\"chart-container\">\n              <div v-if=\"isLoading\" class=\"loading-overlay\">\n                <i class=\"fas fa-spinner fa-spin\"></i>\n                <p>Loading chart data...</p>\n              </div>\n              <canvas ref=\"performanceChart\"></canvas>\n              <p v-if=\"!hasAttendanceData && !isLoading\" class=\"no-data-message\">No attendance data available</p>\n            </div>\n          </div>\n        </div>\n      </div>\n      \n      <!-- Assessment Type Distribution -->\n      <div class=\"col-md-6 mb-4\">\n        <div class=\"chart-card\">\n          <div class=\"card-body\">\n            <h5 class=\"card-title\">\n              <i class=\"fas fa-tasks me-2\"></i>\n              Assessment Performance Analysis\n            </h5>\n            <p class=\"chart-description\">Average scores by assessment type across the department</p>\n            <div class=\"chart-container\">\n              <div v-if=\"isLoading\" class=\"loading-overlay\">\n                <i class=\"fas fa-spinner fa-spin\"></i>\n                <p>Loading chart data...</p>\n              </div>\n              <canvas ref=\"assessmentTypeChart\"></canvas>\n              <p v-if=\"!hasAssessmentData && !isLoading\" class=\"no-data-message\">No assessment data available</p>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <!-- Performance Trend Chart -->\n      <div class=\"col-md-6 mb-4\">\n        <div class=\"chart-card\">\n          <div class=\"card-body\">\n            <h5 class=\"card-title\">\n              <i class=\"fas fa-chart-line me-2\"></i>\n              Performance Trends Over Time\n            </h5>\n            <p class=\"chart-description\">Department average scores across recent assessments</p>\n            <div class=\"chart-container\">\n              <div v-if=\"isLoading\" class=\"loading-overlay\">\n                <i class=\"fas fa-spinner fa-spin\"></i>\n                <p>Loading chart data...</p>\n              </div>\n              <canvas ref=\"performanceTrendChart\"></canvas>\n              <p v-if=\"!hasPerformanceData && !isLoading\" class=\"no-data-message\">No performance data available</p>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <!-- Section Performance -->\n      <div class=\"col-md-6 mb-4\">\n        <div class=\"chart-card\">\n          <div class=\"card-body\">\n            <h5 class=\"card-title\">\n              <i class=\"fas fa-users me-2\"></i>\n              Section Performance\n            </h5>\n            <p class=\"chart-description\">Comparison of performance across different sections</p>\n            <div class=\"chart-container\">\n              <div v-if=\"isLoading\" class=\"loading-overlay\">\n                <i class=\"fas fa-spinner fa-spin\"></i>\n                <p>Loading chart data...</p>\n              </div>\n              <canvas ref=\"sectionChart\"></canvas>\n              <p v-if=\"!hasSectionData && !isLoading\" class=\"no-data-message\">No section data available</p>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { ref, onMounted, computed, watch, onUnmounted, nextTick } from 'vue'\nimport { useStore } from 'vuex'\nimport Chart from 'chart.js/auto'\nimport axios from 'axios'\nimport moment from 'moment'\n\n// Create axios instance with default config\nconst api = axios.create({\n  baseURL: 'http://localhost:8000/api'\n});\n\nexport default {\n  name: 'Dashboard',\n  setup() {\n    const store = useStore()\n    const performanceChart = ref(null)\n    const assessmentTypeChart = ref(null)\n    const performanceTrendChart = ref(null)\n    const sectionChart = ref(null)\n    const selectedYear = ref('')\n    const selectedSection = ref('')\n    const selectedSubject = ref('')\n    const dashboardContainer = ref(null)\n    const isLoading = ref(false)\n    const lastUpdate = ref(null)\n    const autoRefreshInterval = ref(null)\n    const sections = ref([])\n    const subjects = ref([])\n    const availableYears = ref(['1st', '2nd', '3rd', '4th'])\n\n    // Computed properties\n    const isCITHead = computed(() => store.getters.isCITHead)\n    const token = computed(() => store.state.auth.token)\n    \n    // Get user name\n    const userName = computed(() => {\n      const user = store.state.auth.user;\n      return user ? user.name || `${user.firstName || ''} ${user.lastName || ''}`.trim() || 'User' : 'User';\n    });\n    \n    // Check if filters are active\n    const hasActiveFilters = computed(() => {\n      return Boolean(selectedYear.value || selectedSection.value || selectedSubject.value);\n    });\n\n    // Set auth token for all requests\n    watch(token, (newToken) => {\n      if (newToken) {\n        api.defaults.headers.common['Authorization'] = `Bearer ${newToken}`;\n      }\n    }, { immediate: true });\n\n    // Dashboard stats\n    const totalStudents = ref(0)\n    const totalTeachers = ref(0)\n    const averageAttendance = ref(0)\n    const averageScore = ref(0)\n    const activeSections = ref(0)\n    const data = ref(null)\n\n    // Computed properties for data availability\n    const hasAttendanceData = computed(() => {\n      if (data.value && data.value.attendanceDistribution) {\n        return data.value.attendanceDistribution.some(val => val > 0);\n      }\n      return false;\n    });\n\n    const hasScoreData = computed(() => {\n      return data.value?.averageScore > 0;\n    });\n\n    const hasPerformanceData = computed(() => {\n      // Check if we have any assessment or performance data\n      if (data.value) {\n        // Check for averageScore > 0\n        if (typeof data.value.averageScore === 'number' && data.value.averageScore > 0) {\n          return true;\n        }\n        \n        // Check for performance trends\n        if (Array.isArray(data.value.performanceTrends) && data.value.performanceTrends.length > 0) {\n          return true;\n        }\n      }\n      return false;\n    });\n\n    const hasAssessmentData = computed(() => {\n      if (data.value) {\n        // Check directly in assessmentTypes\n        if (data.value.assessmentTypes) {\n          const assessmentTypes = Object.values(data.value.assessmentTypes);\n          return assessmentTypes.some(type => type.count > 0);\n        }\n        \n        // Fallback to assessmentTypeDistribution\n        if (data.value.assessmentTypeDistribution) {\n          return true;\n        }\n      }\n      return false;\n    });\n\n    const hasSectionData = computed(() => {\n      return data.value?.sections?.length > 0;\n    });\n\n    // Fetch sections and subjects\n    const fetchSectionsAndSubjects = async (year = '') => {\n      try {\n        const response = await api.get('/department/sections-subjects-by-teacher', {\n          params: { year }\n        });\n        \n        if (response.data) {\n          // Extract unique sections and subjects with teacher info\n          sections.value = response.data.sections || [];\n          subjects.value = response.data.subjects || [];\n        }\n      } catch (error) {\n        console.error('Error fetching sections and subjects:', error);\n        sections.value = [];\n        subjects.value = [];\n      }\n    };\n\n    const fetchDashboardData = async () => {\n      try {\n        isLoading.value = true;\n        \n        // Fetch basic stats\n        const statsResponse = await api.get('/dashboard/stats', {\n          params: {\n            year: selectedYear.value,\n            section: selectedSection.value,\n            subject: selectedSubject.value\n          }\n        });\n        \n        data.value = statsResponse.data;\n        \n        // Update basic stats\n        totalStudents.value = data.value.totalStudents || 0;\n        totalTeachers.value = data.value.totalTeachers || 0;\n        activeSections.value = data.value.activeSections || 0;\n        \n        // Fetch attendance data\n        const attendanceResponse = await api.get('/dashboard/attendance', {\n          params: {\n            year: selectedYear.value,\n            section: selectedSection.value,\n            subject: selectedSubject.value\n          }\n        });\n        \n        if (attendanceResponse.data) {\n          // Update attendance stats\n          data.value.attendanceDistribution = attendanceResponse.data.distribution || [0, 0, 0];\n          data.value.averageAttendance = attendanceResponse.data.average || 0;\n          averageAttendance.value = data.value.averageAttendance;\n        }\n        \n        // Fetch assessment data\n        const assessmentResponse = await api.get('/dashboard/assessments', {\n          params: {\n            year: selectedYear.value,\n            section: selectedSection.value,\n            subject: selectedSubject.value\n          }\n        });\n        \n        if (assessmentResponse.data) {\n          // Update assessment stats\n          data.value.assessmentTypes = assessmentResponse.data.types || [];\n          data.value.performanceTrends = assessmentResponse.data.trends || [];\n          data.value.averageScore = assessmentResponse.data.average || 0;\n          averageScore.value = data.value.averageScore;\n        }\n        \n        // Fetch section performance data\n        const sectionResponse = await api.get('/dashboard/section-performance', {\n          params: {\n            year: selectedYear.value,\n            section: selectedSection.value,\n            subject: selectedSubject.value\n          }\n        });\n        \n        if (sectionResponse.data) {\n          data.value.sections = sectionResponse.data.sections || [];\n        }\n        \n        // Update charts with new data\n        if (data.value) {\n          updateCharts(data.value);\n        }\n        \n        lastUpdate.value = new Date();\n      } catch (error) {\n        console.error('Failed to fetch dashboard data:', error);\n        if (error.response) {\n          console.error('Error response:', error.response.data);\n        }\n      } finally {\n        isLoading.value = false;\n      }\n    };\n\n    const updateCharts = (data) => {\n      updatePerformanceChart(data);\n      updateAssessmentTypeChart(data);\n      updatePerformanceTrendChart(data);\n      updateSectionChart(data);\n    };\n\n    // Initialize dummy data for charts when no data is available\n    const initDummyData = () => {\n      updatePerformanceChart({\n        attendanceDistribution: [0, 0, 0]\n      });\n      \n      updateAssessmentTypeChart({\n        assessmentData: [\n          { type: 'Quiz', averageScore: 0 },\n          { type: 'Activity', averageScore: 0 },\n          { type: 'Performance Task', averageScore: 0 }\n        ]\n      });\n      \n      updatePerformanceTrendChart([]);\n      updateSectionChart({ sections: [] });\n    };\n\n    // Format date for display\n    const formatDate = (date) => {\n      if (!date) return '';\n      return moment(date).format('MMMM D, YYYY h:mm A');\n    };\n\n    // Handle year change\n    const handleYearChange = async () => {\n      selectedSection.value = '';\n      selectedSubject.value = '';\n      \n      if (selectedYear.value) {\n        await fetchSectionsAndSubjects(selectedYear.value);\n      } else {\n        sections.value = [];\n        subjects.value = [];\n      }\n      \n      await fetchDashboardData();\n    };\n\n    // Handle section change\n    const handleSectionChange = () => {\n      // If a section is selected, filter subjects by that section\n      if (selectedSection.value) {\n        fetchSubjectsBySection(selectedYear.value, selectedSection.value);\n      } else {\n        // If no section selected, fetch all subjects for the year\n        fetchSectionsAndSubjects(selectedYear.value);\n      }\n      \n      fetchDashboardData();\n    };\n\n    // Fetch subjects for a specific section\n    const fetchSubjectsBySection = async (year, section) => {\n      try {\n        const response = await api.get('/department/subjects-by-section', {\n          params: { year, section }\n        });\n        \n        if (response.data) {\n          subjects.value = response.data.subjects || [];\n        }\n      } catch (error) {\n        console.error('Error fetching subjects by section:', error);\n        subjects.value = [];\n      }\n    };\n\n    // Handle filter change\n    const handleFilterChange = () => {\n      fetchDashboardData();\n    };\n\n    // Clear all filters\n    const clearFilters = () => {\n      selectedYear.value = '';\n      selectedSection.value = '';\n      selectedSubject.value = '';\n      sections.value = [];\n      subjects.value = [];\n      fetchDashboardData();\n    };\n\n    // Get filter display text\n    const getFilterDisplay = () => {\n      const filters = [];\n      if (selectedYear.value) filters.push(selectedYear.value + ' Year');\n      \n      if (selectedSection.value) {\n        // Find the section object to get teacher name\n        const sectionObj = sections.value.find(s => s.name === selectedSection.value);\n        if (sectionObj && sectionObj.teacherName) {\n          filters.push(`${selectedSection.value} (${sectionObj.teacherName})`);\n        } else {\n          filters.push(selectedSection.value);\n        }\n      }\n      \n      if (selectedSubject.value) {\n        // Find the subject object to get teacher name\n        const subjectObj = subjects.value.find(s => s.name === selectedSubject.value);\n        if (subjectObj && subjectObj.teacherName) {\n          filters.push(`${selectedSubject.value} (${subjectObj.teacherName})`);\n        } else {\n          filters.push(selectedSubject.value);\n        }\n      }\n      \n      return filters.length > 0 ? filters.join(' - ') : 'Filter View';\n    };\n\n    // Update charts with data\n    const updatePerformanceChart = (data) => {\n      if (performanceChart.value) {\n        const ctx = performanceChart.value.getContext('2d');\n        \n        // Dispose of existing chart if it exists\n        if (ctx.chart) {\n          ctx.chart.destroy();\n        }\n        \n        // Attendance status distribution data\n        const attendanceLabels = ['Present', 'Late', 'Absent'];\n        const attendanceData = data.attendanceDistribution || [0, 0, 0];\n        \n        // Create chart\n        ctx.chart = new Chart(ctx, {\n          type: 'doughnut',\n          data: {\n            labels: attendanceLabels,\n            datasets: [{\n              data: attendanceData,\n              backgroundColor: ['#10b981', '#f59e0b', '#ef4444'],\n              borderWidth: 0,\n              hoverOffset: 4\n            }]\n          },\n          options: {\n            responsive: true,\n            maintainAspectRatio: false,\n            cutout: '70%',\n            plugins: {\n              legend: {\n                position: 'bottom',\n                labels: {\n                  usePointStyle: true,\n                  padding: 15,\n                  font: {\n                    size: 12\n                  }\n                }\n              },\n              tooltip: {\n                callbacks: {\n                  label: function(context) {\n                    const label = context.label || '';\n                    const value = context.raw || 0;\n                    const total = context.chart.data.datasets[0].data.reduce((a, b) => a + b, 0);\n                    const percentage = total > 0 ? Math.round((value / total) * 100) : 0;\n                    return `${label}: ${value} (${percentage}%)`;\n                  }\n                }\n              }\n            }\n          }\n        });\n      }\n    };\n\n    const updateAssessmentTypeChart = (data) => {\n      if (assessmentTypeChart.value) {\n        const ctx = assessmentTypeChart.value.getContext('2d');\n        \n        // Dispose of existing chart if it exists\n        if (ctx.chart) {\n          ctx.chart.destroy();\n        }\n        \n        // Assessment types data\n        const assessmentData = data.assessmentTypes || [];\n        const labels = [];\n        const values = [];\n        const colors = ['#3b82f6', '#10b981', '#f59e0b', '#8b5cf6', '#ec4899', '#6366f1'];\n        \n        // Extract assessment types data\n        if (Array.isArray(assessmentData)) {\n          // If array format\n          assessmentData.forEach((item, index) => {\n            labels.push(item.type);\n            values.push(item.averageScore);\n          });\n        } else {\n          // If object format\n          Object.entries(assessmentData).forEach(([type, data], index) => {\n            labels.push(type);\n            values.push(data.averageScore || 0);\n          });\n        }\n        \n        // Create chart\n        ctx.chart = new Chart(ctx, {\n          type: 'bar',\n          data: {\n            labels: labels,\n            datasets: [{\n              label: 'Average Score (%)',\n              data: values,\n              backgroundColor: colors,\n              borderWidth: 0,\n              borderRadius: 6,\n              maxBarThickness: 50\n            }]\n          },\n          options: {\n            responsive: true,\n            maintainAspectRatio: false,\n            plugins: {\n              legend: {\n                display: false\n              },\n              tooltip: {\n                callbacks: {\n                  label: function(context) {\n                    return `Average Score: ${context.raw}%`;\n                  }\n                }\n              }\n            },\n            scales: {\n              y: {\n                beginAtZero: true,\n                max: 100,\n                ticks: {\n                  callback: function(value) {\n                    return value + '%';\n                  }\n                }\n              }\n            }\n          }\n        });\n      }\n    };\n\n    const updatePerformanceTrendChart = (data) => {\n      if (performanceTrendChart.value) {\n        const ctx = performanceTrendChart.value.getContext('2d');\n        \n        // Dispose of existing chart if it exists\n        if (ctx.chart) {\n          ctx.chart.destroy();\n        }\n        \n        // Performance trends data\n        const performanceTrends = data.performanceTrends || [];\n        const labels = [];\n        const scores = [];\n        \n        // Extract performance trends data\n        performanceTrends.forEach(item => {\n          // Format date if available\n          const date = item.date ? moment(item.date).format('MMM D') : '';\n          // Use assessment title or date as label\n          labels.push(item.title ? `${item.title} (${date})` : date);\n          scores.push(item.averageScore || 0);\n        });\n        \n        // Create chart\n        ctx.chart = new Chart(ctx, {\n          type: 'line',\n          data: {\n            labels: labels,\n            datasets: [{\n              label: 'Average Score',\n              data: scores,\n              backgroundColor: 'rgba(59, 130, 246, 0.1)',\n              borderColor: '#3b82f6',\n              borderWidth: 2,\n              tension: 0.4,\n              fill: true,\n              pointBackgroundColor: '#3b82f6',\n              pointRadius: 4,\n              pointHoverRadius: 6\n            }]\n          },\n          options: {\n            responsive: true,\n            maintainAspectRatio: false,\n            plugins: {\n              legend: {\n                display: false\n              },\n              tooltip: {\n                callbacks: {\n                  label: function(context) {\n                    return `Average Score: ${context.raw}%`;\n                  }\n                }\n              }\n            },\n            scales: {\n              y: {\n                beginAtZero: true,\n                max: 100,\n                ticks: {\n                  callback: function(value) {\n                    return value + '%';\n                  }\n                }\n              },\n              x: {\n                ticks: {\n                  maxRotation: 45,\n                  minRotation: 45\n                }\n              }\n            }\n          }\n        });\n      }\n    };\n\n    const updateSectionChart = (data) => {\n      if (sectionChart.value) {\n        const ctx = sectionChart.value.getContext('2d');\n        \n        // Dispose of existing chart if it exists\n        if (ctx.chart) {\n          ctx.chart.destroy();\n        }\n        \n        // Section performance data\n        const sectionData = data.sections || [];\n        const labels = [];\n        const performanceData = [];\n        const attendanceData = [];\n        \n        // Extract section performance data\n        sectionData.forEach(section => {\n          labels.push(section.name);\n          performanceData.push(section.averageScore || 0);\n          attendanceData.push(section.attendanceRate || 0);\n        });\n        \n        // Create chart\n        ctx.chart = new Chart(ctx, {\n          type: 'bar',\n          data: {\n            labels: labels,\n            datasets: [\n              {\n                label: 'Average Score',\n                data: performanceData,\n                backgroundColor: '#3b82f6',\n                borderWidth: 0,\n                borderRadius: 6,\n                maxBarThickness: 30\n              },\n              {\n                label: 'Attendance Rate',\n                data: attendanceData,\n                backgroundColor: '#10b981',\n                borderWidth: 0,\n                borderRadius: 6,\n                maxBarThickness: 30\n              }\n            ]\n          },\n          options: {\n            responsive: true,\n            maintainAspectRatio: false,\n            plugins: {\n              legend: {\n                position: 'bottom',\n                labels: {\n                  usePointStyle: true,\n                  padding: 15,\n                  font: {\n                    size: 12\n                  }\n                }\n              },\n              tooltip: {\n                callbacks: {\n                  label: function(context) {\n                    const label = context.dataset.label || '';\n                    const value = context.raw || 0;\n                    return `${label}: ${value}%`;\n                  }\n                }\n              }\n            },\n            scales: {\n              y: {\n                beginAtZero: true,\n                max: 100,\n                ticks: {\n                  callback: function(value) {\n                    return value + '%';\n                  }\n                }\n              }\n            }\n          }\n        });\n      }\n    };\n\n    const refreshDashboard = () => {\n      fetchDashboardData();\n    };\n\n    const scrollToSection = (sectionId) => {\n      const section = document.getElementById(sectionId);\n      if (section) {\n        section.scrollIntoView({ behavior: 'smooth' });\n      }\n    };\n\n    // Auto-refresh logic\n    const setupAutoRefresh = () => {\n      // Clear any existing interval\n      if (autoRefreshInterval.value) {\n        clearInterval(autoRefreshInterval.value);\n      }\n      \n      // Set new interval (every 5 minutes)\n      autoRefreshInterval.value = setInterval(() => {\n        fetchDashboardData();\n      }, 5 * 60 * 1000);\n    };\n\n    // Fetch data on component mount\n    onMounted(async () => {\n      try {\n        // Initialize with dummy data while loading\n        nextTick(() => {\n          initDummyData();\n        });\n        \n        // Fetch sections and subjects\n        if (selectedYear.value) {\n          await fetchSectionsAndSubjects(selectedYear.value);\n        }\n        \n        // Fetch dashboard data\n        await fetchDashboardData();\n        setupAutoRefresh();\n      } catch (error) {\n        console.error('Error initializing dashboard:', error);\n      }\n    });\n\n    // Clean up on component unmount\n    onUnmounted(() => {\n      if (autoRefreshInterval.value) {\n        clearInterval(autoRefreshInterval.value);\n      }\n    });\n\n    return {\n      performanceChart,\n      assessmentTypeChart,\n      performanceTrendChart,\n      sectionChart,\n      selectedYear,\n      selectedSection,\n      selectedSubject,\n      sections,\n      subjects,\n      availableYears,\n      isCITHead,\n      userName,\n      hasActiveFilters,\n      totalStudents,\n      totalTeachers,\n      averageAttendance,\n      averageScore,\n      activeSections,\n      hasAttendanceData,\n      hasScoreData,\n      hasPerformanceData,\n      hasAssessmentData,\n      hasSectionData,\n      dashboardContainer,\n      isLoading,\n      lastUpdate,\n      formatDate,\n      scrollToSection,\n      handleYearChange,\n      handleSectionChange,\n      handleFilterChange,\n      clearFilters,\n      getFilterDisplay,\n      refreshDashboard\n    }\n  }\n}\n</script>\n\n<style scoped>\n.dashboard {\n  padding: 2rem;\n  background-color: #f8f9fa;\n  min-height: 100vh;\n}\n\n/* Greeting Section Styles */\n.greeting-section {\n  padding-bottom: 1.5rem;\n  border-bottom: 1px solid rgba(0, 0, 0, 0.05);\n}\n\n.greeting {\n  font-size: 2.25rem;\n  font-weight: 700;\n  color: #003366;\n  margin-bottom: 0.5rem;\n  letter-spacing: -0.5px;\n}\n\n.greeting-subtitle {\n  color: #64748b;\n  font-size: 1.125rem;\n  font-weight: 400;\n  margin: 0;\n}\n\n/* Filter and Form Styles */\n.btn-filter {\n  background-color: white;\n  border: 1px solid #e2e8f0;\n  padding: 0.75rem 1.25rem;\n  font-size: 0.9rem;\n  color: #1e293b;\n  min-width: 220px;\n  text-align: left;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  border-radius: 8px;\n  font-weight: 500;\n  transition: all 0.2s ease;\n}\n\n.btn-filter:hover {\n  background-color: #f8fafc;\n  border-color: #003366;\n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.05);\n}\n\n.filter-menu {\n  width: 320px;\n  padding: 1.25rem;\n  border: none;\n  box-shadow: 0 4px 20px rgba(0, 0, 0, 0.15);\n  border-radius: 12px;\n}\n\n.dropdown-header {\n  color: #003366;\n  font-weight: 700;\n  padding: 0;\n  margin-bottom: 1.25rem;\n  font-size: 1rem;\n}\n\n.form-label {\n  font-weight: 600;\n  color: #475569;\n  margin-bottom: 0.5rem;\n  font-size: 0.875rem;\n}\n\n.last-update-badge {\n  font-size: 0.85rem;\n  color: #64748b;\n  display: flex;\n  align-items: center;\n}\n\n.btn-refresh {\n  background: white;\n  border: 1px solid #e2e8f0;\n  color: #4a5568;\n  padding: 0.5rem;\n  border-radius: 8px;\n  width: 36px;\n  height: 36px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  transition: all 0.2s ease;\n}\n\n.btn-refresh:hover {\n  background: #f7fafc;\n  color: #2d3748;\n  border-color: #cbd5e1;\n}\n\n/* Dashboard Cards */\n.dashboard-card {\n  background: #fff;\n  border-radius: 12px;\n  padding: 1.5rem;\n  box-shadow: 0 2px 12px rgba(0, 0, 0, 0.08);\n  display: flex;\n  align-items: center;\n  gap: 1.25rem;\n  height: 100%;\n  transition: transform 0.2s ease, box-shadow 0.2s ease;\n}\n\n.dashboard-card:hover {\n  transform: translateY(-2px);\n  box-shadow: 0 4px 15px rgba(0, 0, 0, 0.1);\n}\n\n.icon-container {\n  width: 52px;\n  height: 52px;\n  border-radius: 12px;\n  background-color: #003366;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  transition: transform 0.2s ease;\n}\n\n.dashboard-card:hover .icon-container {\n  transform: scale(1.05);\n}\n\n.icon-container i {\n  color: white;\n  font-size: 1.5rem;\n}\n\n.card-info {\n  flex: 1;\n}\n\n.stat-title {\n  font-size: 0.875rem;\n  color: #64748b;\n  margin: 0 0 0.5rem 0;\n  font-weight: 600;\n  letter-spacing: 0.3px;\n}\n\n.stat-value {\n  font-size: 1.75rem;\n  font-weight: 700;\n  color: #1e293b;\n  line-height: 1.2;\n}\n\n.stat-value.loading {\n  color: #94a3b8;\n  font-size: 1.5rem;\n}\n\n.no-data {\n  color: #94a3b8;\n  font-style: italic;\n  font-size: 0.875rem;\n}\n\n/* Chart Cards */\n.chart-card {\n  background: white;\n  border-radius: 12px;\n  box-shadow: 0 2px 12px rgba(0, 0, 0, 0.08);\n  height: 100%;\n}\n\n.card-body {\n  padding: 1.5rem;\n}\n\n.card-title {\n  font-size: 1.125rem;\n  font-weight: 700;\n  color: #1e293b;\n  margin-bottom: 0.5rem;\n  letter-spacing: -0.3px;\n}\n\n.chart-description {\n  font-size: 0.85rem;\n  color: #64748b;\n  margin-bottom: 1.25rem;\n  font-style: italic;\n}\n\n.chart-container {\n  position: relative;\n  height: 400px;\n  width: 100%;\n  margin-bottom: 1rem;\n}\n\n.loading-overlay {\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  background-color: rgba(255, 255, 255, 0.8);\n  z-index: 10;\n  border-radius: 8px;\n}\n\n.loading-overlay i {\n  font-size: 2rem;\n  color: #003366;\n  margin-bottom: 1rem;\n}\n\n.loading-overlay p {\n  font-size: 0.9rem;\n  color: #64748b;\n}\n\n.no-data-message {\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  color: #94a3b8;\n  font-style: italic;\n  text-align: center;\n  width: 100%;\n  padding: 1rem;\n}\n\n/* Responsive adjustments */\n@media (max-width: 768px) {\n  .dashboard {\n    padding: 1rem;\n  }\n  \n  .greeting {\n    font-size: 1.75rem;\n  }\n  \n  .filter-menu {\n    width: 100%;\n    max-width: 320px;\n  }\n\n  .btn-filter {\n    min-width: auto;\n    width: 100%;\n  }\n  \n  .chart-container {\n    height: 300px;\n  }\n}\n</style> "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}