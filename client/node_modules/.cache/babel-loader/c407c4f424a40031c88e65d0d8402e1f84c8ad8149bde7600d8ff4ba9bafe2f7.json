{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.for-each.js\";\nimport \"core-js/modules/es.iterator.map.js\";\nimport { Chart as ChartJS, Title, Tooltip, Legend, BarElement, CategoryScale, LinearScale } from 'chart.js';\nimport { ref } from 'vue';\nimport { Bar } from 'vue-chartjs';\nexport default {\n  __name: 'StudentAssessmentChart',\n  props: {\n    assessments: Array,\n    studentId: String\n  },\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const props = __props;\n    const myAssessments = ref([]);\n    props.assessments.map(assess => {\n      Object.entries(assess?.scores).forEach(([id, score]) => {\n        if (id === props.studentId) {\n          myAssessments.value.push({\n            ...assess,\n            scores: score\n          });\n          return;\n        } else {\n          console.log(id);\n        }\n      });\n    });\n    ChartJS.register(CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend);\n    const options = ref({\n      //   responsive: true,\n      //   maintainAspectRatio: false\n    });\n    const data = ref({\n      labels: myAssessments.value.map(a => `${a.subject} (${a.type})`),\n      datasets: [{\n        label: 'Max Score',\n        backgroundColor: '#4a5568',\n        data: myAssessments.value.map(a => a.maxScore)\n      }, {\n        label: \"Student's Score\",\n        backgroundColor: '#f87979',\n        data: myAssessments.value.map(a => a.scores)\n      }]\n    });\n    const __returned__ = {\n      props,\n      myAssessments,\n      options,\n      data,\n      get ChartJS() {\n        return ChartJS;\n      },\n      get Title() {\n        return Title;\n      },\n      get Tooltip() {\n        return Tooltip;\n      },\n      get Legend() {\n        return Legend;\n      },\n      get BarElement() {\n        return BarElement;\n      },\n      get CategoryScale() {\n        return CategoryScale;\n      },\n      get LinearScale() {\n        return LinearScale;\n      },\n      ref,\n      get Bar() {\n        return Bar;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["Chart","ChartJS","Title","Tooltip","Legend","BarElement","CategoryScale","LinearScale","ref","Bar","props","__props","myAssessments","assessments","map","assess","Object","entries","scores","forEach","id","score","studentId","value","push","console","log","register","options","data","labels","a","subject","type","datasets","label","backgroundColor","maxScore"],"sources":["D:/au_dev/client/src/components/StudentAssessmentChart.vue"],"sourcesContent":["<template>\r\n    <Bar :data=\"data\" :options=\"options\" />\r\n</template>\r\n\r\n<script setup>\r\nimport {\r\n    Chart as ChartJS,\r\n    Title,\r\n    Tooltip,\r\n    Legend,\r\n    BarElement,\r\n    CategoryScale,\r\n    LinearScale\r\n} from 'chart.js'\r\nimport { ref } from 'vue'\r\nimport { Bar } from 'vue-chartjs'\r\n\r\nconst props = defineProps({\r\n    assessments: Array,\r\n    studentId: String\r\n})\r\n\r\nconst myAssessments = ref([])\r\n\r\nprops.assessments.map((assess) => {\r\n    Object.entries(assess?.scores).forEach(([id, score]) => {\r\n        if (id === props.studentId) {\r\n            myAssessments.value.push({\r\n                ...assess,\r\n                scores: score\r\n            })\r\n            return;\r\n        } else {\r\n            console.log(id);\r\n        }\r\n    })\r\n})\r\n\r\nChartJS.register(CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend)\r\n\r\nconst options = ref({\r\n    //   responsive: true,\r\n    //   maintainAspectRatio: false\r\n})\r\n\r\nconst data = ref({\r\n    labels: myAssessments.value.map(a => `${a.subject} (${a.type})`),\r\n    datasets: [\r\n        {\r\n            label: 'Max Score',\r\n            backgroundColor: '#4a5568',\r\n            data: myAssessments.value.map(a => a.maxScore)\r\n        },\r\n        {\r\n            label: \"Student's Score\",\r\n            backgroundColor: '#f87979',\r\n            data: myAssessments.value.map(a => a.scores)\r\n        }\r\n    ]\r\n\r\n})\r\n</script>"],"mappings":";;;;AAKA,SACIA,KAAK,IAAIC,OAAO,EAChBC,KAAK,EACLC,OAAO,EACPC,MAAM,EACNC,UAAU,EACVC,aAAa,EACbC,WAAW,QACR,UAAU;AACjB,SAASC,GAAG,QAAQ,KAAK;AACzB,SAASC,GAAG,QAAQ,aAAa;;;;;;;;;;;IAEjC,MAAMC,KAAK,GAAGC,OAGZ;IAEF,MAAMC,aAAa,GAAGJ,GAAG,CAAC,EAAE,CAAC;IAE7BE,KAAK,CAACG,WAAW,CAACC,GAAG,CAAEC,MAAM,IAAK;MAC9BC,MAAM,CAACC,OAAO,CAACF,MAAM,EAAEG,MAAM,CAAC,CAACC,OAAO,CAAC,CAAC,CAACC,EAAE,EAAEC,KAAK,CAAC,KAAK;QACpD,IAAID,EAAE,KAAKV,KAAK,CAACY,SAAS,EAAE;UACxBV,aAAa,CAACW,KAAK,CAACC,IAAI,CAAC;YACrB,GAAGT,MAAM;YACTG,MAAM,EAAEG;UACZ,CAAC,CAAC;UACF;QACJ,CAAC,MAAM;UACHI,OAAO,CAACC,GAAG,CAACN,EAAE,CAAC;QACnB;MACJ,CAAC,CAAC;IACN,CAAC,CAAC;IAEFnB,OAAO,CAAC0B,QAAQ,CAACrB,aAAa,EAAEC,WAAW,EAAEF,UAAU,EAAEH,KAAK,EAAEC,OAAO,EAAEC,MAAM,CAAC;IAEhF,MAAMwB,OAAO,GAAGpB,GAAG,CAAC;MAChB;MACA;IAAA,CACH,CAAC;IAEF,MAAMqB,IAAI,GAAGrB,GAAG,CAAC;MACbsB,MAAM,EAAElB,aAAa,CAACW,KAAK,CAACT,GAAG,CAACiB,CAAC,IAAI,GAAGA,CAAC,CAACC,OAAO,KAAKD,CAAC,CAACE,IAAI,GAAG,CAAC;MAChEC,QAAQ,EAAE,CACN;QACIC,KAAK,EAAE,WAAW;QAClBC,eAAe,EAAE,SAAS;QAC1BP,IAAI,EAAEjB,aAAa,CAACW,KAAK,CAACT,GAAG,CAACiB,CAAC,IAAIA,CAAC,CAACM,QAAQ;MACjD,CAAC,EACD;QACIF,KAAK,EAAE,iBAAiB;QACxBC,eAAe,EAAE,SAAS;QAC1BP,IAAI,EAAEjB,aAAa,CAACW,KAAK,CAACT,GAAG,CAACiB,CAAC,IAAIA,CAAC,CAACb,MAAM;MAC/C,CAAC;IAGT,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}