{"ast":null,"code":"import axios from 'axios';\nconst state = {\n  token: localStorage.getItem('token') || null,\n  user: JSON.parse(localStorage.getItem('user')) || null\n};\nconst getters = {\n  isLoggedIn: state => !!state.token,\n  currentUser: state => state.user,\n  isCITHead: state => state.user?.role === 'citHead',\n  isTeacher: state => state.user?.role === 'teacher',\n  isSSPHead: state => state.user?.role === 'sspHead',\n  isSSP: state => state.user?.role === 'ssp'\n};\nconst actions = {\n  async login({\n    commit\n  }, credentials) {\n    try {\n      console.log('Making login request with:', {\n        ...credentials,\n        password: '****'\n      });\n      const response = await axios.post('http://localhost:8000/api/auth/login', credentials);\n      console.log('Login response:', response.data);\n      const {\n        token,\n        user\n      } = response.data;\n      localStorage.setItem('token', token);\n      localStorage.setItem('user', JSON.stringify(user));\n      commit('SET_TOKEN', token);\n      commit('SET_USER', user);\n\n      // Set axios default header\n      axios.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n      return response;\n    } catch (error) {\n      console.error('Login error in store:', error.response || error);\n      // Clear any partial state on error\n      commit('SET_TOKEN', null);\n      commit('SET_USER', null);\n      throw error;\n    }\n  },\n  logout({\n    commit\n  }) {\n    // Clear localStorage\n    localStorage.removeItem('token');\n    localStorage.removeItem('user');\n\n    // Clear state\n    commit('SET_TOKEN', null);\n    commit('SET_USER', null);\n\n    // Remove axios default header\n    delete axios.defaults.headers.common['Authorization'];\n  },\n  async updateProfile({\n    commit\n  }, userData) {\n    try {\n      const response = await axios.put('http://localhost:8000/api/users/profile', userData);\n      const updatedUser = response.data;\n\n      // Update localStorage\n      localStorage.setItem('user', JSON.stringify(updatedUser));\n\n      // Update state\n      commit('SET_USER', updatedUser);\n      return response;\n    } catch (error) {\n      throw error;\n    }\n  }\n};\nconst mutations = {\n  SET_TOKEN(state, token) {\n    state.token = token;\n  },\n  SET_USER(state, user) {\n    state.user = user;\n  }\n};\nexport default {\n  state,\n  getters,\n  actions,\n  mutations\n};","map":{"version":3,"names":["axios","state","token","localStorage","getItem","user","JSON","parse","getters","isLoggedIn","currentUser","isCITHead","role","isTeacher","isSSPHead","isSSP","actions","login","commit","credentials","console","log","password","response","post","data","setItem","stringify","defaults","headers","common","error","logout","removeItem","updateProfile","userData","put","updatedUser","mutations","SET_TOKEN","SET_USER"],"sources":["D:/au_dev/client/src/store/modules/auth.js"],"sourcesContent":["import axios from 'axios'\n\nconst state = {\n  token: localStorage.getItem('token') || null,\n  user: JSON.parse(localStorage.getItem('user')) || null\n}\n\nconst getters = {\n  isLoggedIn: state => !!state.token,\n  currentUser: state => state.user,\n  isCITHead: state => state.user?.role === 'citHead',\n  isTeacher: state => state.user?.role === 'teacher',\n  isSSPHead: state => state.user?.role === 'sspHead',\n  isSSP: state => state.user?.role === 'ssp',\n}\n\nconst actions = {\n  async login({ commit }, credentials) {\n    try {\n      console.log('Making login request with:', { ...credentials, password: '****' })\n      const response = await axios.post('http://localhost:8000/api/auth/login', credentials)\n      console.log('Login response:', response.data)\n      \n      const { token, user } = response.data\n      localStorage.setItem('token', token)\n      localStorage.setItem('user', JSON.stringify(user))\n      commit('SET_TOKEN', token)\n      commit('SET_USER', user)\n      \n      // Set axios default header\n      axios.defaults.headers.common['Authorization'] = `Bearer ${token}`\n      \n      return response\n    } catch (error) {\n      console.error('Login error in store:', error.response || error)\n      // Clear any partial state on error\n      commit('SET_TOKEN', null)\n      commit('SET_USER', null)\n      throw error\n    }\n  },\n\n  logout({ commit }) {\n    // Clear localStorage\n    localStorage.removeItem('token')\n    localStorage.removeItem('user')\n\n    // Clear state\n    commit('SET_TOKEN', null)\n    commit('SET_USER', null)\n\n    // Remove axios default header\n    delete axios.defaults.headers.common['Authorization']\n  },\n\n  async updateProfile({ commit }, userData) {\n    try {\n      const response = await axios.put('http://localhost:8000/api/users/profile', userData)\n      const updatedUser = response.data\n\n      // Update localStorage\n      localStorage.setItem('user', JSON.stringify(updatedUser))\n\n      // Update state\n      commit('SET_USER', updatedUser)\n\n      return response\n    } catch (error) {\n      throw error\n    }\n  }\n}\n\nconst mutations = {\n  SET_TOKEN(state, token) {\n    state.token = token\n  },\n  SET_USER(state, user) {\n    state.user = user\n  }\n}\n\nexport default {\n  state,\n  getters,\n  actions,\n  mutations\n} "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}