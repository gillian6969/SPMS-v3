{"ast":null,"code":"import { defineComponent, computed, inject } from 'vue';\nimport { toastState } from '@/plugins/toast';\nexport default defineComponent({\n  name: 'ToastNotification',\n  setup() {\n    const toast = inject('toast');\n    const toasts = computed(() => toastState.toasts);\n    const getIcon = type => {\n      switch (type) {\n        case 'success':\n          return 'fas fa-check-circle';\n        case 'error':\n          return 'fas fa-exclamation-circle';\n        case 'warning':\n          return 'fas fa-exclamation-triangle';\n        case 'info':\n          return 'fas fa-info-circle';\n        default:\n          return 'fas fa-info-circle';\n      }\n    };\n    const removeToast = id => {\n      toast.remove(id);\n    };\n    return {\n      toasts,\n      getIcon,\n      removeToast\n    };\n  }\n});","map":{"version":3,"names":["defineComponent","computed","inject","toastState","name","setup","toast","toasts","getIcon","type","removeToast","id","remove"],"sources":["D:\\au_dev\\client\\src\\components\\ToastNotification.vue"],"sourcesContent":["<template>\r\n  <div class=\"toast-container\">\r\n    <transition-group name=\"toast\">\r\n      <div v-for=\"toast in toasts\" :key=\"toast.id\" :class=\"['toast-notification', `toast-${toast.type}`]\">\r\n        <div class=\"toast-icon\">\r\n          <i :class=\"getIcon(toast.type)\"></i>\r\n        </div>\r\n        <div class=\"toast-content\">\r\n          <div v-if=\"toast.title\" class=\"toast-title\">{{ toast.title }}</div>\r\n          <div class=\"toast-message\">{{ toast.message }}</div>\r\n        </div>\r\n        <button class=\"toast-close\" @click=\"removeToast(toast.id)\">\r\n          <i class=\"fas fa-times\"></i>\r\n        </button>\r\n      </div>\r\n    </transition-group>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { defineComponent, computed, inject } from 'vue'\r\nimport { toastState } from '@/plugins/toast'\r\n\r\nexport default defineComponent({\r\n  name: 'ToastNotification',\r\n  setup() {\r\n    const toast = inject('toast')\r\n    \r\n    const toasts = computed(() => toastState.toasts)\r\n\r\n    const getIcon = (type) => {\r\n      switch (type) {\r\n        case 'success': return 'fas fa-check-circle'\r\n        case 'error': return 'fas fa-exclamation-circle'\r\n        case 'warning': return 'fas fa-exclamation-triangle'\r\n        case 'info': return 'fas fa-info-circle'\r\n        default: return 'fas fa-info-circle'\r\n      }\r\n    }\r\n\r\n    const removeToast = (id) => {\r\n      toast.remove(id)\r\n    }\r\n\r\n    return {\r\n      toasts,\r\n      getIcon,\r\n      removeToast\r\n    }\r\n  }\r\n})\r\n</script>\r\n\r\n<style scoped>\r\n.toast-container {\r\n  position: fixed;\r\n  top: 20px;\r\n  right: 20px;\r\n  z-index: 9999;\r\n  width: 350px;\r\n  max-width: calc(100vw - 40px);\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 10px;\r\n}\r\n\r\n.toast-notification {\r\n  display: flex;\r\n  align-items: flex-start;\r\n  background-color: white;\r\n  padding: 15px;\r\n  border-radius: 8px;\r\n  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);\r\n  animation: toast-in 0.3s ease-out;\r\n  overflow: hidden;\r\n}\r\n\r\n.toast-icon {\r\n  margin-right: 15px;\r\n  font-size: 1.2rem;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n}\r\n\r\n.toast-content {\r\n  flex: 1;\r\n  padding-right: 10px;\r\n}\r\n\r\n.toast-title {\r\n  font-weight: bold;\r\n  margin-bottom: 5px;\r\n}\r\n\r\n.toast-message {\r\n  word-break: break-word;\r\n}\r\n\r\n.toast-close {\r\n  background: transparent;\r\n  border: none;\r\n  cursor: pointer;\r\n  padding: 0;\r\n  font-size: 1rem;\r\n  color: inherit;\r\n  opacity: 0.5;\r\n  transition: opacity 0.2s;\r\n}\r\n\r\n.toast-close:hover {\r\n  opacity: 1;\r\n}\r\n\r\n/* Toast types */\r\n.toast-success {\r\n  border-left: 5px solid #2ecc71;\r\n  background-color: #f0fff4;\r\n}\r\n\r\n.toast-success .toast-icon {\r\n  color: #2ecc71;\r\n}\r\n\r\n.toast-error {\r\n  border-left: 5px solid #e74c3c;\r\n  background-color: #fff5f5;\r\n}\r\n\r\n.toast-error .toast-icon {\r\n  color: #e74c3c;\r\n}\r\n\r\n.toast-warning {\r\n  border-left: 5px solid #f39c12;\r\n  background-color: #fffbeb;\r\n}\r\n\r\n.toast-warning .toast-icon {\r\n  color: #f39c12;\r\n}\r\n\r\n.toast-info {\r\n  border-left: 5px solid #3498db;\r\n  background-color: #ebf8ff;\r\n}\r\n\r\n.toast-info .toast-icon {\r\n  color: #3498db;\r\n}\r\n\r\n/* Transition animations */\r\n.toast-enter-active {\r\n  transition: all 0.3s ease-out;\r\n}\r\n\r\n.toast-leave-active {\r\n  transition: all 0.2s ease-in;\r\n}\r\n\r\n.toast-enter-from {\r\n  transform: translateX(100%);\r\n  opacity: 0;\r\n}\r\n\r\n.toast-leave-to {\r\n  transform: translateX(100%);\r\n  opacity: 0;\r\n}\r\n</style> "],"mappings":"AAoBA,SAASA,eAAe,EAAEC,QAAQ,EAAEC,MAAK,QAAS,KAAI;AACtD,SAASC,UAAS,QAAS,iBAAgB;AAE3C,eAAeH,eAAe,CAAC;EAC7BI,IAAI,EAAE,mBAAmB;EACzBC,KAAKA,CAAA,EAAG;IACN,MAAMC,KAAI,GAAIJ,MAAM,CAAC,OAAO;IAE5B,MAAMK,MAAK,GAAIN,QAAQ,CAAC,MAAME,UAAU,CAACI,MAAM;IAE/C,MAAMC,OAAM,GAAKC,IAAI,IAAK;MACxB,QAAQA,IAAI;QACV,KAAK,SAAS;UAAE,OAAO,qBAAoB;QAC3C,KAAK,OAAO;UAAE,OAAO,2BAA0B;QAC/C,KAAK,SAAS;UAAE,OAAO,6BAA4B;QACnD,KAAK,MAAM;UAAE,OAAO,oBAAmB;QACvC;UAAS,OAAO,oBAAmB;MACrC;IACF;IAEA,MAAMC,WAAU,GAAKC,EAAE,IAAK;MAC1BL,KAAK,CAACM,MAAM,CAACD,EAAE;IACjB;IAEA,OAAO;MACLJ,MAAM;MACNC,OAAO;MACPE;IACF;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}