{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.filter.js\";\nimport \"core-js/modules/es.iterator.for-each.js\";\nimport \"core-js/modules/es.iterator.reduce.js\";\nimport { ref, computed, reactive, onMounted, onUnmounted, watch, nextTick } from 'vue';\nimport { useStore } from 'vuex';\nimport axios from 'axios';\nimport Chart from 'chart.js/auto';\nimport { Dropdown } from 'bootstrap';\nimport { formatDate } from '../utils';\nimport StudentAssessmentChart from '../components/StudentAssessmentChart.vue';\n\n// Create axios instance with correct base URL\nconst api = axios.create({\n  baseURL: 'http://localhost:8081/api',\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\nexport default {\n  name: 'StudentManagement',\n  components: {\n    StudentAssessmentChart\n  },\n  setup() {\n    const store = useStore();\n    const students = ref([]);\n    const searchQuery = ref('');\n    const selectedStudent = ref(null);\n    const performanceChart = ref(null);\n    const sortField = ref('');\n    const sortOrder = ref('asc');\n    const showDeleteModal = ref(false);\n    const studentToDelete = ref(null);\n    const isEditing = ref(false);\n    const editingStudent = ref(null);\n    const showSearch = ref(false);\n    const assessments = ref([]);\n    const selectedYear = ref('');\n    const selectedSection = ref('');\n    const selectedFile = ref(null);\n    const uploadYear = ref('');\n    const isUploading = ref(false);\n    const subjectChart = ref(null);\n    const attendanceChart = ref(null);\n    const historyStartDate = ref('');\n    const historyEndDate = ref('');\n    const showStartDatePicker = ref(false);\n    const showEndDatePicker = ref(false);\n    const showAddStudentModal = ref(false);\n    const showAddSingleStudentModal = ref(false);\n    const availableYears = ['1st', '2nd', '3rd', '4th'];\n    const availableSections = ['South 1', 'South 2', 'South 3'];\n    const newStudent = ref({\n      studentId: '',\n      firstName: '',\n      middleName: '',\n      lastName: '',\n      email: '',\n      contactNumber: '',\n      year: '',\n      section: ''\n    });\n    const isAddingStudent = ref(false);\n\n    // Add chart refs and new state for tabs and attendance\n    const selectedTab = ref('info');\n    const attendanceHistory = ref([]);\n    const attendanceChartInstance = ref(null);\n    const isLoadingAttendance = ref(false);\n    const isLoadingAssessments = ref(false);\n    const attendanceFilter = reactive({\n      startDate: (() => {\n        const date = new Date();\n        date.setDate(date.getDate() - 30);\n        return date.toISOString().split('T')[0];\n      })(),\n      endDate: new Date().toISOString().split('T')[0]\n    });\n    const attendanceCounts = reactive({\n      present: 0,\n      late: 0,\n      absent: 0\n    });\n\n    // Add computed properties for checking if we have data\n    const hasAttendanceData = computed(() => {\n      return attendanceHistory.value.length > 0;\n    });\n    const hasAssessmentData = computed(() => {\n      if (!assessments.value || !selectedStudent.value) return false;\n\n      // Filter assessments for the current student\n      const studentAssessments = assessments.value.filter(a => a.studentId === selectedStudent.value.studentId);\n      return studentAssessments.length > 0;\n    });\n\n    // Add pagination state\n    const currentPage = ref(1);\n    const itemsPerPage = 25;\n\n    // Compute total pages\n    const totalPages = computed(() => Math.ceil(sortedStudents.value.length / itemsPerPage));\n\n    // Get paginated students\n    const paginatedStudents = computed(() => {\n      const start = (currentPage.value - 1) * itemsPerPage;\n      const end = start + itemsPerPage;\n      return sortedStudents.value.slice(start, end);\n    });\n\n    // Compute pagination info\n    const paginationInfo = computed(() => {\n      const start = (currentPage.value - 1) * itemsPerPage + 1;\n      const end = Math.min(start + itemsPerPage - 1, sortedStudents.value.length);\n      return {\n        start,\n        end\n      };\n    });\n\n    // Pagination methods\n    const nextPage = () => {\n      if (currentPage.value < totalPages.value) {\n        currentPage.value++;\n      }\n    };\n    const previousPage = () => {\n      if (currentPage.value > 1) {\n        currentPage.value--;\n      }\n    };\n\n    // Reset pagination when filters change\n    watch([searchQuery, selectedYear, selectedSection], () => {\n      currentPage.value = 1;\n    });\n\n    // Initialize data on component mount\n    onMounted(async () => {\n      if (store.getters.isLoggedIn) {\n        await fetchStudents();\n      }\n\n      // Initialize dropdowns after a short delay to ensure DOM is ready\n      nextTick(() => {\n        const dropdownElements = document.querySelectorAll('[data-bs-toggle=\"dropdown\"]');\n        const dropdownInstances = [];\n        dropdownElements.forEach(element => {\n          if (element) {\n            dropdownInstances.push(new Dropdown(element));\n          }\n        });\n\n        // Cleanup dropdowns on unmount\n        onUnmounted(() => {\n          dropdownInstances.forEach(dropdown => {\n            if (dropdown && typeof dropdown.dispose === 'function') {\n              dropdown.dispose();\n            }\n          });\n        });\n      });\n    });\n\n    // Watch for auth state changes\n    watch(() => store.state.auth.token, newToken => {\n      if (newToken) {\n        fetchStudents();\n      }\n    });\n\n    // File upload handlers\n    const handleFileChange = event => {\n      const file = event.target.files[0];\n      if (file && file.type !== 'text/csv') {\n        alert('Please select a CSV file');\n        event.target.value = '';\n        selectedFile.value = null;\n        return;\n      }\n      selectedFile.value = file;\n      console.log('File selected:', file?.name);\n    };\n    const handleFileUpload = async () => {\n      if (!selectedFile.value || !uploadYear.value) {\n        alert('Please select both a year and a CSV file');\n        return;\n      }\n      isUploading.value = true;\n      const formData = new FormData();\n      formData.append('file', selectedFile.value);\n      formData.append('year', uploadYear.value);\n      try {\n        console.log('Starting upload...', {\n          year: uploadYear.value,\n          fileName: selectedFile.value.name\n        });\n        const token = store.state.auth.token;\n        if (!token) {\n          throw new Error('No authentication token found');\n        }\n\n        // Log the form data to verify what's being sent\n        console.log('Form data contents:', {\n          file: selectedFile.value,\n          year: uploadYear.value\n        });\n        const response = await api.post('/students/upload', formData, {\n          headers: {\n            'Authorization': `Bearer ${token}`,\n            'Content-Type': 'multipart/form-data'\n          }\n        });\n        console.log('Upload successful:', response.data);\n        if (response.data.errors && response.data.errors.length > 0) {\n          const errorMessage = response.data.errors.join('\\n');\n          alert(`Upload completed with some errors:\\n${errorMessage}`);\n        } else {\n          const counts = response.data.sectionCounts;\n          alert(`File uploaded successfully!\\n\\nStudent distribution:\\nSouth 1: ${counts['South 1']} students\\nSouth 2: ${counts['South 2']} students\\nSouth 3: ${counts['South 3']} students`);\n        }\n\n        // Reset form\n        selectedFile.value = null;\n        uploadYear.value = '';\n\n        // Refresh student list and close modal\n        await fetchStudents();\n\n        // Debug: Check if emails are included in the fetched students after upload\n        console.log('Students after upload:', students.value);\n        if (students.value.length > 0) {\n          console.log('First student after upload:', students.value[0]);\n          console.log('Email field exists after upload:', 'email' in students.value[0]);\n          console.log('Email value after upload:', students.value[0].email);\n        }\n        showAddStudentModal.value = false;\n      } catch (error) {\n        console.error('Upload failed:', error);\n        alert('Error uploading file: ' + (error.response?.data?.message || error.message));\n      } finally {\n        isUploading.value = false;\n      }\n    };\n\n    // Filter students\n    const filteredStudents = computed(() => {\n      return students.value.filter(student => {\n        const searchLower = searchQuery.value.toLowerCase();\n        const matchesSearch = student.studentId.toLowerCase().includes(searchLower) || student.firstName.toLowerCase().includes(searchLower) || student.lastName.toLowerCase().includes(searchLower);\n\n        // Apply year and section filters\n        const matchesYear = !selectedYear.value || student.year === selectedYear.value;\n        const matchesSection = !selectedSection.value || student.section === selectedSection.value;\n        return matchesSearch && matchesYear && matchesSection;\n      });\n    });\n\n    // New function to handle tab changes\n    const changeTab = tab => {\n      selectedTab.value = tab;\n\n      // If changing to attendance tab, fetch the data\n      if (tab === 'attendance') {\n        fetchAttendanceHistory();\n      } else if (tab === 'info') {\n        // Fetch assessment data when going to info tab\n        fetchStudentAssessments();\n      }\n    };\n\n    // Function to fetch assessment data for a specific student\n    const fetchStudentAssessments = async () => {\n      if (!selectedStudent.value) return;\n      isLoadingAssessments.value = true;\n      try {\n        const response = await api.get(`/students/assessments/${selectedStudent.value.studentId}`, {\n          headers: {\n            Authorization: `Bearer ${store.state.auth.token}`\n          }\n        });\n        if (response.data && response.data.assessments) {\n          assessments.value = response.data.assessments;\n        }\n      } catch (error) {\n        console.error('Failed to fetch student assessments:', error);\n        assessments.value = [];\n      } finally {\n        isLoadingAssessments.value = false;\n      }\n    };\n\n    // New function to fetch attendance history\n    const fetchAttendanceHistory = async () => {\n      if (!selectedStudent.value) return;\n      isLoadingAttendance.value = true;\n      try {\n        const response = await api.get(`/attendance/${selectedStudent.value.studentId}/history`, {\n          params: {\n            startDate: attendanceFilter.startDate,\n            endDate: attendanceFilter.endDate,\n            section: selectedStudent.value.section,\n            year: selectedStudent.value.year\n          },\n          headers: {\n            Authorization: `Bearer ${store.state.auth.token}`\n          }\n        });\n        if (response.data && response.data.records) {\n          attendanceHistory.value = response.data.records;\n\n          // Count attendance statuses\n          attendanceCounts.present = 0;\n          attendanceCounts.late = 0;\n          attendanceCounts.absent = 0;\n          attendanceHistory.value.forEach(record => {\n            if (record.status in attendanceCounts) {\n              attendanceCounts[record.status]++;\n            }\n          });\n\n          // Update chart on next DOM update\n          nextTick(() => {\n            initAttendanceChart();\n          });\n        }\n      } catch (error) {\n        console.error('Failed to fetch attendance history:', error);\n        attendanceHistory.value = [];\n      } finally {\n        isLoadingAttendance.value = false;\n      }\n    };\n\n    // New function to initialize the attendance chart\n    const initAttendanceChart = () => {\n      const ctx = attendanceChart.value;\n      if (!ctx) return;\n\n      // Destroy previous chart instance if it exists\n      if (attendanceChartInstance.value) {\n        attendanceChartInstance.value.destroy();\n      }\n      attendanceChartInstance.value = new Chart(ctx, {\n        type: 'doughnut',\n        data: {\n          labels: ['Present', 'Late', 'Absent'],\n          datasets: [{\n            data: [attendanceCounts.present, attendanceCounts.late, attendanceCounts.absent],\n            backgroundColor: ['#10b981', '#f59e0b', '#ef4444'],\n            borderWidth: 0,\n            hoverOffset: 4\n          }]\n        },\n        options: {\n          responsive: true,\n          maintainAspectRatio: false,\n          cutout: '70%',\n          plugins: {\n            legend: {\n              position: 'bottom',\n              labels: {\n                usePointStyle: true,\n                padding: 15,\n                font: {\n                  size: 12\n                }\n              }\n            },\n            tooltip: {\n              callbacks: {\n                label: function (context) {\n                  const label = context.label || '';\n                  const value = context.raw || 0;\n                  const total = context.chart.data.datasets[0].data.reduce((a, b) => a + b, 0);\n                  const percentage = total > 0 ? Math.round(value / total * 100) : 0;\n                  return `${label}: ${value} (${percentage}%)`;\n                }\n              }\n            }\n          }\n        }\n      });\n    };\n\n    // Student actions\n    const closeStudentModal = () => {\n      // Destroy charts if they exist\n      if (attendanceChartInstance.value) {\n        attendanceChartInstance.value.destroy();\n        attendanceChartInstance.value = null;\n      }\n      selectedStudent.value = null;\n      selectedTab.value = 'info'; // Reset to info tab when closing\n    };\n    const confirmDelete = student => {\n      studentToDelete.value = student;\n      showDeleteModal.value = true;\n    };\n    const deleteStudent = async student => {\n      try {\n        const token = store.state.auth.token;\n\n        // Delete the student from students collection using MongoDB _id\n        await api.delete('/students/' + student._id, {\n          headers: {\n            'Authorization': `Bearer ${token}`\n          }\n        });\n\n        // Update local state\n        students.value = students.value.filter(s => s._id !== student._id);\n        selectedStudent.value = null;\n        showDeleteModal.value = false;\n        studentToDelete.value = null;\n        alert('Student deleted successfully');\n      } catch (error) {\n        console.error('Failed to delete student:', error);\n        alert('Failed to delete student. Please try again.');\n      }\n    };\n    const startEditing = student => {\n      editingStudent.value = {\n        ...student\n      };\n      isEditing.value = true;\n    };\n    const cancelEditing = () => {\n      editingStudent.value = null;\n      isEditing.value = false;\n    };\n    const saveStudentChanges = async () => {\n      try {\n        const token = store.state.auth.token;\n\n        // Update student information\n        const studentResponse = await api.put('/students/' + editingStudent.value._id, {\n          studentId: editingStudent.value.studentId,\n          firstName: editingStudent.value.firstName,\n          lastName: editingStudent.value.lastName,\n          email: editingStudent.value.email,\n          year: editingStudent.value.year,\n          section: editingStudent.value.section\n        }, {\n          headers: {\n            'Authorization': `Bearer ${token}`\n          }\n        });\n        if (studentResponse.data) {\n          // Update local state\n          const index = students.value.findIndex(s => s._id === editingStudent.value._id);\n          if (index !== -1) {\n            students.value[index] = {\n              ...editingStudent.value\n            };\n          }\n          selectedStudent.value = null;\n          editingStudent.value = null;\n          isEditing.value = false;\n          alert('Student information updated successfully');\n        } else {\n          throw new Error('Failed to update student information');\n        }\n      } catch (error) {\n        console.error('Failed to update student:', error);\n        alert('Failed to update student information. Please try again.');\n      }\n    };\n    const sortBy = field => {\n      if (sortField.value === field) {\n        sortOrder.value = sortOrder.value === 'asc' ? 'desc' : 'asc';\n      } else {\n        sortField.value = field;\n        sortOrder.value = 'asc';\n      }\n    };\n    const getSortIcon = field => {\n      if (sortField.value !== field) return 'fas fa-sort';\n      return sortOrder.value === 'asc' ? 'fas fa-sort-up' : 'fas fa-sort-down';\n    };\n    const sortedStudents = computed(() => {\n      let students = filteredStudents.value;\n      if (sortField.value) {\n        students = [...students].sort((a, b) => {\n          let aVal = a[sortField.value];\n          let bVal = b[sortField.value];\n\n          // Handle case-insensitive string comparison\n          if (typeof aVal === 'string') aVal = aVal.toLowerCase();\n          if (typeof bVal === 'string') bVal = bVal.toLowerCase();\n          if (aVal < bVal) return sortOrder.value === 'asc' ? -1 : 1;\n          if (aVal > bVal) return sortOrder.value === 'asc' ? 1 : -1;\n          return 0;\n        });\n      }\n      return students;\n    });\n    const toggleSearch = () => {\n      showSearch.value = !showSearch.value;\n      if (!showSearch.value) {\n        searchQuery.value = '';\n      }\n    };\n    const handleSearch = () => {\n      // Implement any additional search logic here if needed\n      console.log('Searching for:', searchQuery.value);\n    };\n    const clearSearch = () => {\n      searchQuery.value = '';\n      handleSearch();\n    };\n\n    // Add capitalize helper function\n    const capitalize = str => {\n      if (!str) return '';\n      return str.charAt(0).toUpperCase() + str.slice(1);\n    };\n\n    // Add getAcademicYearRange function\n    const getAcademicYearRange = year => {\n      const currentYear = new Date().getFullYear();\n      let yearNumber = 0;\n      switch (year) {\n        case '1st':\n          yearNumber = 1;\n          break;\n        case '2nd':\n          yearNumber = 2;\n          break;\n        case '3rd':\n          yearNumber = 3;\n          break;\n        case '4th':\n          yearNumber = 4;\n          break;\n        default:\n          return 'N/A';\n      }\n      const startYear = currentYear - yearNumber + 1;\n      return `${startYear} - ${startYear + 1}`;\n    };\n\n    // Add hasActiveFilters computed property\n    const hasActiveFilters = computed(() => {\n      return selectedYear.value || selectedSection.value;\n    });\n\n    // Update viewStudent function\n    const viewStudent = async student => {\n      selectedStudent.value = student;\n      selectedTab.value = 'info'; // Default to info tab when opening\n\n      // Fetch student data when opening modal\n      await Promise.all([fetchStudentAssessments(), fetchAttendanceHistory()]);\n    };\n\n    // Add clearFilters function\n    const clearFilters = () => {\n      selectedYear.value = '';\n      selectedSection.value = '';\n      searchQuery.value = '';\n    };\n    const applyFilters = () => {\n      fetchStudents();\n    };\n\n    // Function to handle adding a single student\n    const handleAddSingleStudent = async () => {\n      try {\n        isAddingStudent.value = true;\n\n        // Validate required fields\n        const requiredFields = ['studentId', 'firstName', 'middleName', 'lastName', 'email', 'contactNumber', 'year', 'section'];\n        for (const field of requiredFields) {\n          if (!newStudent.value[field]) {\n            throw new Error(`${field.charAt(0).toUpperCase() + field.slice(1)} is required`);\n          }\n        }\n\n        // Validate email format\n        const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n        if (!emailRegex.test(newStudent.value.email)) {\n          throw new Error('Please enter a valid email address');\n        }\n        const token = store.state.auth.token;\n        if (!token) {\n          throw new Error('No authentication token found');\n        }\n\n        // Send request to add student\n        const response = await api.post('/students', {\n          ...newStudent.value,\n          // Calculate academic years based on current year and student's year level\n          academicYears: calculateAcademicYears(newStudent.value.year)\n        }, {\n          headers: {\n            'Authorization': `Bearer ${token}`\n          }\n        });\n        console.log('Student added successfully:', response.data);\n\n        // Reset form and close modal\n        resetNewStudentForm();\n        showAddSingleStudentModal.value = false;\n\n        // Refresh student list\n        await fetchStudents();\n        alert('Student added successfully');\n      } catch (error) {\n        console.error('Failed to add student:', error);\n        alert('Error adding student: ' + (error.response?.data?.message || error.message));\n      } finally {\n        isAddingStudent.value = false;\n      }\n    };\n\n    // Helper function to reset the new student form\n    const resetNewStudentForm = () => {\n      newStudent.value = {\n        studentId: '',\n        firstName: '',\n        middleName: '',\n        lastName: '',\n        email: '',\n        contactNumber: '',\n        year: '',\n        section: ''\n      };\n    };\n\n    // Helper function to calculate academic years\n    const calculateAcademicYears = year => {\n      const currentYear = new Date().getFullYear();\n      let startYear, endYear;\n      switch (year) {\n        case '1st':\n          startYear = currentYear;\n          endYear = currentYear + 4;\n          break;\n        case '2nd':\n          startYear = currentYear - 1;\n          endYear = currentYear + 3;\n          break;\n        case '3rd':\n          startYear = currentYear - 2;\n          endYear = currentYear + 2;\n          break;\n        case '4th':\n          startYear = currentYear - 3;\n          endYear = currentYear + 1;\n          break;\n        default:\n          startYear = currentYear;\n          endYear = currentYear + 4;\n      }\n      return {\n        startYear,\n        endYear\n      };\n    };\n\n    // Add fetchStudents function that was accidentally removed\n    const fetchStudents = async () => {\n      try {\n        const token = store.state.auth.token;\n        const response = await api.get('/students', {\n          headers: {\n            'Authorization': `Bearer ${token}`\n          }\n        });\n        students.value = response.data;\n        const response1 = await api.get('/students/assessments/all', {\n          headers: {\n            'Authorization': `Bearer ${token}`\n          }\n        });\n        assessments.value = response1.data?.assessments;\n      } catch (error) {\n        console.error('Failed to fetch students:', error);\n        alert('Failed to fetch students. Please try again.');\n      }\n    };\n    return {\n      students,\n      searchQuery,\n      selectedStudent,\n      performanceChart,\n      sortField,\n      sortOrder,\n      showDeleteModal,\n      studentToDelete,\n      isEditing,\n      editingStudent,\n      showSearch,\n      showAddStudentModal,\n      showAddSingleStudentModal,\n      selectedFile,\n      uploadYear,\n      isUploading,\n      availableYears,\n      availableSections,\n      newStudent,\n      isAddingStudent,\n      handleFileChange,\n      handleFileUpload,\n      handleAddSingleStudent,\n      resetNewStudentForm,\n      filteredStudents,\n      closeStudentModal,\n      confirmDelete,\n      deleteStudent,\n      startEditing,\n      cancelEditing,\n      saveStudentChanges,\n      sortBy,\n      getSortIcon,\n      sortedStudents,\n      toggleSearch,\n      handleSearch,\n      clearSearch,\n      fetchStudents,\n      hasActiveFilters,\n      selectedYear,\n      selectedSection,\n      viewStudent,\n      getAcademicYearRange,\n      clearFilters,\n      applyFilters,\n      currentPage,\n      totalPages,\n      paginatedStudents,\n      paginationInfo,\n      nextPage,\n      previousPage,\n      formatDate,\n      assessments,\n      selectedTab,\n      attendanceHistory,\n      attendanceFilter,\n      attendanceChart,\n      isLoadingAttendance,\n      fetchAttendanceHistory,\n      capitalize,\n      changeTab,\n      isLoadingAssessments,\n      hasAttendanceData,\n      hasAssessmentData\n    };\n  }\n};","map":{"version":3,"names":["ref","computed","reactive","onMounted","onUnmounted","watch","nextTick","useStore","axios","Chart","Dropdown","formatDate","StudentAssessmentChart","api","create","baseURL","headers","name","components","setup","store","students","searchQuery","selectedStudent","performanceChart","sortField","sortOrder","showDeleteModal","studentToDelete","isEditing","editingStudent","showSearch","assessments","selectedYear","selectedSection","selectedFile","uploadYear","isUploading","subjectChart","attendanceChart","historyStartDate","historyEndDate","showStartDatePicker","showEndDatePicker","showAddStudentModal","showAddSingleStudentModal","availableYears","availableSections","newStudent","studentId","firstName","middleName","lastName","email","contactNumber","year","section","isAddingStudent","selectedTab","attendanceHistory","attendanceChartInstance","isLoadingAttendance","isLoadingAssessments","attendanceFilter","startDate","date","Date","setDate","getDate","toISOString","split","endDate","attendanceCounts","present","late","absent","hasAttendanceData","value","length","hasAssessmentData","studentAssessments","filter","a","currentPage","itemsPerPage","totalPages","Math","ceil","sortedStudents","paginatedStudents","start","end","slice","paginationInfo","min","nextPage","previousPage","getters","isLoggedIn","fetchStudents","dropdownElements","document","querySelectorAll","dropdownInstances","forEach","element","push","dropdown","dispose","state","auth","token","newToken","handleFileChange","event","file","target","files","type","alert","console","log","handleFileUpload","formData","FormData","append","fileName","Error","response","post","data","errors","errorMessage","join","counts","sectionCounts","error","message","filteredStudents","student","searchLower","toLowerCase","matchesSearch","includes","matchesYear","matchesSection","changeTab","tab","fetchAttendanceHistory","fetchStudentAssessments","get","Authorization","params","records","record","status","initAttendanceChart","ctx","destroy","labels","datasets","backgroundColor","borderWidth","hoverOffset","options","responsive","maintainAspectRatio","cutout","plugins","legend","position","usePointStyle","padding","font","size","tooltip","callbacks","label","context","raw","total","chart","reduce","b","percentage","round","closeStudentModal","confirmDelete","deleteStudent","delete","_id","s","startEditing","cancelEditing","saveStudentChanges","studentResponse","put","index","findIndex","sortBy","field","getSortIcon","sort","aVal","bVal","toggleSearch","handleSearch","clearSearch","capitalize","str","charAt","toUpperCase","getAcademicYearRange","currentYear","getFullYear","yearNumber","startYear","hasActiveFilters","viewStudent","Promise","all","clearFilters","applyFilters","handleAddSingleStudent","requiredFields","emailRegex","test","academicYears","calculateAcademicYears","resetNewStudentForm","endYear","response1"],"sources":["D:\\au_dev\\client\\src\\views\\StudentManagement.vue"],"sourcesContent":["<template>\n  <div class=\"student-management\">\n    <div class=\"sticky-controls\">\n      <div class=\"d-flex gap-2 mb-3\">\n        <button \n          class=\"btn btn-primary\" \n          @click=\"showAddStudentModal = true\"\n        >\n          <i class=\"fas fa-plus me-1\"></i> Add Student List\n        </button>\n        <button \n          class=\"btn btn-success\" \n          @click=\"showAddSingleStudentModal = true\"\n        >\n          <i class=\"fas fa-user-plus me-1\"></i> Add Single Student\n        </button>\n      </div>\n    \n        <!-- Table Controls -->\n        <div class=\"table-controls mb-3\">\n        <div class=\"d-flex justify-content-between align-items-center\">\n          <div class=\"d-flex align-items-center gap-3\">\n            <!-- Sort Dropdown -->\n            <div class=\"dropdown\">\n              <button \n                class=\"btn btn-control\" \n                type=\"button\" \n                id=\"sortDropdown\" \n                data-bs-toggle=\"dropdown\" \n                aria-expanded=\"false\"\n              >\n                <i class=\"fas fa-sort me-2\"></i> Sort by\n              </button>\n              <ul class=\"dropdown-menu shadow-lg\" aria-labelledby=\"sortDropdown\">\n                <li>\n                  <a class=\"dropdown-item d-flex align-items-center gap-2\" href=\"#\" @click.prevent=\"sortBy('studentId')\">\n                    <i class=\"fas fa-sort-numeric-down\"></i>\n                    <span>ID Number</span>\n                    <i :class=\"getSortIcon('studentId')\" class=\"ms-auto\"></i>\n                  </a>\n                </li>\n                <li>\n                  <a class=\"dropdown-item d-flex align-items-center gap-2\" href=\"#\" @click.prevent=\"sortBy('lastName')\">\n                    <i class=\"fas fa-sort-alpha-down\"></i>\n                    <span>Name</span>\n                    <i :class=\"getSortIcon('lastName')\" class=\"ms-auto\"></i>\n                  </a>\n                </li>\n              </ul>\n            </div>\n\n            <!-- Filter Dropdown -->\n            <div class=\"dropdown\">\n              <button \n                class=\"btn btn-control\" \n                type=\"button\" \n                id=\"filterDropdown\" \n                data-bs-toggle=\"dropdown\" \n                aria-expanded=\"false\"\n              >\n                <i class=\"fas fa-filter me-2\"></i> \n                {{ hasActiveFilters ? `${selectedYear || 'All Years'} - ${selectedSection || 'All Sections'}` : 'Filter Students' }}\n                <span v-if=\"hasActiveFilters\" class=\"filter-badge\">!</span>\n              </button>\n              <div class=\"dropdown-menu shadow-lg p-3\" aria-labelledby=\"filterDropdown\">\n                <div class=\"d-flex justify-content-between align-items-center mb-2\">\n                  <h6 class=\"dropdown-header px-0 mb-0\">Filter Options</h6>\n                    <button \n                    v-if=\"hasActiveFilters\"\n                    class=\"btn btn-sm btn-outline-secondary\"\n                    @click=\"clearFilters\"\n                    >\n                    Clear Filters\n                    </button>\n                  </div>\n                \n                <!-- Year Filter -->\n                <div class=\"mb-3\">\n                  <label class=\"form-label\">Year Level</label>\n                  <select class=\"form-select mb-2\" v-model=\"selectedYear\" @change=\"applyFilters\">\n                    <option value=\"\">All Years</option>\n                    <option value=\"1st\">1st Year</option>\n                    <option value=\"2nd\">2nd Year</option>\n                    <option value=\"3rd\">3rd Year</option>\n                    <option value=\"4th\">4th Year</option>\n                  </select>\n                </div>\n                \n                <!-- Section Filter -->\n                <div class=\"mb-3\">\n                  <label class=\"form-label\">Section</label>\n                  <select class=\"form-select\" v-model=\"selectedSection\" @change=\"applyFilters\">\n                    <option value=\"\">All Sections</option>\n                    <option value=\"South 1\">South 1</option>\n                    <option value=\"South 2\">South 2</option>\n                    <option value=\"South 3\">South 3</option>\n                  </select>\n                </div>\n              </div>\n            </div>\n\n            <!-- Search Control -->\n          <div class=\"search-control\">\n            <div class=\"input-group\">\n              <span class=\"input-group-text border-end-0\">\n                <i class=\"fas fa-search\"></i>\n              </span>\n                <input \n                  type=\"text\" \n                class=\"form-control border-start-0\" \n                  v-model=\"searchQuery\"\n                placeholder=\"Search students...\"\n                @input=\"handleSearch\"\n              >\n              <button \n                v-if=\"searchQuery\"\n                class=\"btn btn-outline-secondary border-start-0\" \n                type=\"button\"\n                @click=\"clearSearch\"\n              >\n                <i class=\"fas fa-times\"></i>\n              </button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n        </div>\n\n        <div class=\"table-responsive\">\n          <table class=\"table table-hover\">\n            <thead>\n              <tr>\n                <th>Student ID</th>\n                <th>Last Name</th>\n                <th>First Name</th>\n                <th>Email</th>\n                <th>Year</th>\n                <th>Section</th>\n              </tr>\n            </thead>\n            <tbody>\n          <template v-if=\"paginatedStudents.length > 0\">\n                <tr \n              v-for=\"student in paginatedStudents\" \n                  :key=\"student.studentId\"\n                  @click=\"viewStudent(student)\"\n                  class=\"clickable-row\"\n                >\n                  <td>{{ student.studentId }}</td>\n                  <td>{{ student.lastName }}</td>\n                  <td>{{ student.firstName }}</td>\n                  <td>{{ student.email }}</td>\n                  <td>{{ student.year }}</td>\n                  <td>{{ student.section }}</td>\n                </tr>\n              </template>\n              <tr v-else>\n                <td colspan=\"6\" class=\"text-center py-4\">\n                  <div class=\"empty-state-message\">\n                    <i class=\"fas fa-users text-muted mb-2\"></i>\n                    <p class=\"mb-0\">No students found</p>\n                    <p class=\"text-muted small\" v-if=\"hasActiveFilters\">\n                      Try adjusting your filters\n                    </p>\n                  </div>\n                </td>\n              </tr>\n            </tbody>\n          </table>\n    </div>\n\n    <!-- Pagination Controls -->\n    <div class=\"pagination-controls mt-3 d-flex justify-content-between align-items-center\">\n      <div class=\"pagination-info\">\n        Showing {{ paginationInfo.start }} to {{ paginationInfo.end }} of {{ sortedStudents.length }} entries\n      </div>\n      <div class=\"pagination-buttons\">\n        <button \n          class=\"btn btn-outline-primary me-2\" \n          @click=\"previousPage\" \n          :disabled=\"currentPage === 1\"\n        >\n          <i class=\"fas fa-chevron-left me-1\"></i> Previous\n        </button>\n        <button \n          class=\"btn btn-outline-primary\" \n          @click=\"nextPage\" \n          :disabled=\"currentPage >= totalPages\"\n        >\n          Next <i class=\"fas fa-chevron-right ms-1\"></i>\n        </button>\n      </div>\n    </div>\n\n    <!-- Add Student Modal -->\n    <div v-if=\"showAddStudentModal\" class=\"add-student-modal\">\n      <div class=\"add-student-backdrop\" @click=\"showAddStudentModal = false\"></div>\n      <div class=\"add-student-dialog\">\n        <div class=\"add-student-content\">\n          <div class=\"modal-header bg-primary text-white\">\n            <h5 class=\"modal-title\">Add Student List</h5>\n            <button type=\"button\" class=\"btn-close btn-close-white\" @click=\"showAddStudentModal = false\"></button>\n          </div>\n          <div class=\"modal-body\">\n            <form @submit.prevent=\"handleFileUpload\">\n              <!-- Year Selection -->\n              <div class=\"mb-3\">\n                <label class=\"form-label\">Year Level</label>\n                <select class=\"form-select\" v-model=\"uploadYear\" required>\n                  <option value=\"\">Select Year</option>\n                  <option v-for=\"year in availableYears\" :key=\"year\" :value=\"year\">{{ year }}</option>\n                </select>\n                <small class=\"text-muted d-block mt-1\">\n                  Note: Sections will be automatically assigned based on the number of students (50 students per section).\n                </small>\n              </div>\n\n              <!-- File Upload -->\n              <div class=\"mb-3\">\n                <label class=\"form-label\">CSV File</label>\n                <input \n                  type=\"file\" \n                  class=\"form-control\" \n                  accept=\".csv\"\n                  @change=\"handleFileChange\"\n                  required\n                >\n                <small class=\"text-muted d-block mt-1\">\n                  <strong>Required fields:</strong> StudentID, LastName, FirstName, MiddleName, ContactNumber, Email\n                </small>\n                <small class=\"text-muted d-block mt-1\">\n                  <strong>Important:</strong> Make sure the CSV file has an \"Email\" column with valid email addresses.\n                </small>\n                <small class=\"text-muted d-block mt-1\">\n                  File must be in CSV format with headers matching the required fields exactly.\n                </small>\n              </div>\n\n              <div class=\"text-end\">\n                <button type=\"button\" class=\"btn btn-secondary me-2\" @click=\"showAddStudentModal = false\">\n                  Cancel\n                </button>\n                <button type=\"submit\" class=\"btn btn-primary\" :disabled=\"isUploading || !selectedFile\">\n                  {{ isUploading ? 'Uploading...' : 'Upload' }}\n                </button>\n              </div>\n            </form>\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <!-- Student Details Modal -->\n    <div v-if=\"selectedStudent\" class=\"modal-wrapper\">\n      <div class=\"modal-backdrop\" @click=\"closeStudentModal\"></div>\n      <div class=\"modal-dialog modal-xxl\">\n        <div class=\"modal-content\">\n          <div class=\"modal-header bg-primary text-white\">\n            <h5 class=\"modal-title\">\n              <i class=\"fas fa-user-graduate me-2\"></i>\n              Student Details\n            </h5>\n            <button type=\"button\" class=\"btn-close btn-close-white\" @click=\"closeStudentModal\"></button>\n          </div>\n          \n          <ul class=\"nav nav-tabs mt-3 px-3\">\n            <li class=\"nav-item\">\n              <a class=\"nav-link\" :class=\"{ active: selectedTab === 'info' }\" href=\"#\" @click.prevent=\"changeTab('info')\">\n                <i class=\"fas fa-info-circle me-1\"></i> Student Overview\n              </a>\n            </li>\n            <li class=\"nav-item\">\n              <a class=\"nav-link\" :class=\"{ active: selectedTab === 'attendance' }\" href=\"#\" @click.prevent=\"changeTab('attendance')\">\n                <i class=\"fas fa-calendar-check me-1\"></i> Attendance History\n              </a>\n            </li>\n          </ul>\n          \n          <div class=\"modal-body\">\n            <!-- Student Info & Assessment Tab -->\n            <div v-if=\"selectedTab === 'info'\" class=\"overview-container\">\n              <div class=\"row\">\n                <!-- Student Info -->\n                <div class=\"col-md-4\">\n                  <div class=\"student-info-card\">\n                    <h6 class=\"info-title\">Student Information</h6>\n                    <div class=\"info-content\">\n                      <p><strong>Student ID:</strong> {{ selectedStudent.studentId }}</p>\n                      <p><strong>Name:</strong> {{ selectedStudent.firstName }} {{ selectedStudent.middleName ? selectedStudent.middleName + ' ' : '' }}{{ selectedStudent.lastName }}</p>\n                      <p><strong>Year Level:</strong> {{ selectedStudent.year }}</p>\n                      <p><strong>Academic Year:</strong> {{ getAcademicYearRange(selectedStudent.year) }}</p>\n                      <p><strong>Section:</strong> {{ selectedStudent.section }}</p>\n                      <p><strong>Email:</strong> {{ selectedStudent.email }}</p>\n                      <p><strong>Contact:</strong> {{ selectedStudent.contactNumber || 'N/A' }}</p>\n                    </div>\n                  </div>\n                </div>\n                \n                <!-- Assessment Performance -->\n                <div class=\"col-md-8\">\n                  <div class=\"chart-section\">\n                    <h6>Assessment Performance</h6>\n                    <div v-if=\"isLoadingAssessments\" class=\"d-flex justify-content-center align-items-center\" style=\"height: 300px\">\n                      <div class=\"spinner-border text-primary\" role=\"status\">\n                        <span class=\"visually-hidden\">Loading...</span>\n                      </div>\n                    </div>\n                    <div v-else-if=\"!hasAssessmentData\" class=\"no-data-message\">\n                      <i class=\"fas fa-chart-bar\"></i>\n                      <p>No assessment data available for this student.</p>\n                    </div>\n                    <div v-else class=\"chart-container\">\n                      <StudentAssessmentChart \n                        :assessments=\"assessments\" \n                        :studentId=\"selectedStudent.studentId\" \n                      />\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n              \n            <!-- Attendance History Tab -->\n            <template v-if=\"selectedTab === 'attendance'\">\n              <div class=\"attendance-history\">\n                <div class=\"chart-controls mb-3\">\n                  <div class=\"date-filter\">\n                    <div class=\"input-group input-group-sm\">\n                      <span class=\"input-group-text\">From</span>\n                      <input \n                        type=\"date\" \n                        class=\"form-control\" \n                        v-model=\"attendanceFilter.startDate\"\n                      >\n                      <span class=\"input-group-text\">To</span>\n                      <input \n                        type=\"date\" \n                        class=\"form-control\" \n                        v-model=\"attendanceFilter.endDate\"\n                      >\n                      <button class=\"btn btn-primary\" @click=\"fetchAttendanceHistory\">\n                        <i class=\"fas fa-filter me-1\"></i> Apply\n                      </button>\n                    </div>\n                  </div>\n                </div>\n\n                <div class=\"row\">\n                  <!-- Attendance Chart -->\n                  <div class=\"col-md-5\">\n                    <div class=\"chart-section\">\n                      <h6>Attendance Overview</h6>\n                      <div v-if=\"isLoadingAttendance\" class=\"d-flex justify-content-center align-items-center\" style=\"height: 300px\">\n                        <div class=\"spinner-border text-primary\" role=\"status\">\n                          <span class=\"visually-hidden\">Loading...</span>\n                        </div>\n                      </div>\n                      <div v-else-if=\"!hasAttendanceData\" class=\"no-data-message\">\n                        <i class=\"fas fa-chart-pie\"></i>\n                        <p>No attendance data available for this student.</p>\n                      </div>\n                      <div v-else class=\"chart-container\" style=\"height: 300px\">\n                        <canvas ref=\"attendanceChart\"></canvas>\n                      </div>\n                    </div>\n                  </div>\n                  \n                  <!-- Attendance History Table -->\n                  <div class=\"col-md-7\">\n                    <div class=\"chart-section\">\n                      <h6>Attendance History</h6>\n                      <div v-if=\"isLoadingAttendance\" class=\"d-flex justify-content-center align-items-center\" style=\"height: 300px\">\n                        <div class=\"spinner-border text-primary\" role=\"status\">\n                          <span class=\"visually-hidden\">Loading...</span>\n                        </div>\n                      </div>\n                      <div v-else class=\"table-responsive data-table\">\n                        <table class=\"table\">\n                          <thead>\n                            <tr>\n                              <th>Date</th>\n                              <th>Subject</th>\n                              <th>Status</th>\n                            </tr>\n                          </thead>\n                          <tbody>\n                            <template v-if=\"attendanceHistory.length > 0\">\n                              <tr v-for=\"record in attendanceHistory\" :key=\"record._id\">\n                                <td>{{ formatDate(record.date) }}</td>\n                                <td>{{ record.subject || 'N/A' }}</td>\n                                <td>\n                                  <span \n                                    class=\"status-badge\" \n                                    :class=\"{\n                                      'present': record.status === 'present',\n                                      'late': record.status === 'late',\n                                      'absent': record.status === 'absent'\n                                    }\"\n                                  >\n                                    {{ capitalize(record.status) }}\n                                  </span>\n                                </td>\n                              </tr>\n                            </template>\n                            <tr v-else>\n                              <td colspan=\"3\" class=\"text-center py-3 text-muted\">\n                                <i class=\"fas fa-info-circle me-2\"></i>No attendance records found.\n                              </td>\n                            </tr>\n                          </tbody>\n                        </table>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </template>\n          </div>\n          \n          <div class=\"modal-footer\">\n            <button type=\"button\" class=\"btn btn-danger me-auto\" @click=\"confirmDelete(selectedStudent)\">\n              <i class=\"fas fa-trash-alt me-1\"></i> Delete Student\n            </button>\n            <button type=\"button\" class=\"btn btn-secondary\" @click=\"closeStudentModal\">\n              <i class=\"fas fa-times me-1\"></i> Close\n            </button>\n            <button type=\"button\" class=\"btn btn-primary\" @click=\"startEditing(selectedStudent)\">\n              <i class=\"fas fa-edit me-1\"></i> Edit Student\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <!-- Edit Student Modal -->\n    <div v-if=\"isEditing\" class=\"modal-wrapper\">\n      <div class=\"modal-backdrop\" @click=\"cancelEditing\"></div>\n      <div class=\"modal-dialog\">\n        <div class=\"modal-content\">\n          <div class=\"modal-header\">\n            <h5 class=\"modal-title\">Edit Student</h5>\n            <button type=\"button\" class=\"btn-close\" @click=\"cancelEditing\"></button>\n          </div>\n          <div class=\"modal-body\">\n            <form @submit.prevent=\"saveStudentChanges\">\n              <div class=\"mb-3\">\n                <label class=\"form-label\">Student ID</label>\n                <input \n                  type=\"text\" \n                  class=\"form-control\" \n                  v-model=\"editingStudent.studentId\"\n                >\n              </div>\n              <div class=\"mb-3\">\n                <label class=\"form-label\">First Name</label>\n                <input \n                  type=\"text\" \n                  class=\"form-control\" \n                  v-model=\"editingStudent.firstName\"\n                >\n              </div>\n              <div class=\"mb-3\">\n                <label class=\"form-label\">Last Name</label>\n                <input \n                  type=\"text\" \n                  class=\"form-control\" \n                  v-model=\"editingStudent.lastName\"\n                >\n              </div>\n              <div class=\"mb-3\">\n                <label class=\"form-label\">Email</label>\n                <input \n                  type=\"email\" \n                  class=\"form-control\" \n                  v-model=\"editingStudent.email\"\n                >\n              </div>\n              <div class=\"mb-3\">\n                <label class=\"form-label\">Year</label>\n                <select class=\"form-select\" v-model=\"editingStudent.year\">\n                  <option v-for=\"year in availableYears\" :value=\"year\">{{ year }}</option>\n                </select>\n              </div>\n              <div class=\"mb-3\">\n                <label class=\"form-label\">Section</label>\n                <select class=\"form-select\" v-model=\"editingStudent.section\">\n                  <option v-for=\"section in availableSections\" :value=\"section\">{{ section }}</option>\n                </select>\n              </div>\n              <div class=\"d-flex justify-content-end gap-2\">\n                <button type=\"button\" class=\"btn btn-secondary\" @click=\"cancelEditing\">\n                  Cancel\n                </button>\n                <button type=\"submit\" class=\"btn btn-primary\">\n                  Save Changes\n                </button>\n              </div>\n            </form>\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <!-- Delete Confirmation Modal -->\n    <div v-if=\"showDeleteModal\" class=\"modal-wrapper\">\n      <div class=\"modal-backdrop\" @click=\"showDeleteModal = false\"></div>\n      <div class=\"modal-dialog\">\n        <div class=\"modal-content\">\n          <div class=\"modal-header\">\n            <h5 class=\"modal-title\">Confirm Delete</h5>\n            <button type=\"button\" class=\"btn-close\" @click=\"showDeleteModal = false\"></button>\n          </div>\n          <div class=\"modal-body\">\n            <p>Are you sure you want to delete this student?</p>\n            <p class=\"text-danger\">\n              <strong>{{ studentToDelete?.firstName }} {{ studentToDelete?.lastName }}</strong>\n            </p>\n            <p class=\"text-muted small\">This action cannot be undone.</p>\n          </div>\n          <div class=\"modal-footer\">\n            <button \n              type=\"button\" \n              class=\"btn btn-secondary\" \n              @click=\"showDeleteModal = false\"\n            >\n              Cancel\n            </button>\n            <button \n              type=\"button\" \n              class=\"btn btn-danger\" \n              @click=\"deleteStudent(studentToDelete)\"\n            >\n              Delete\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <!-- Add Single Student Modal -->\n    <div v-if=\"showAddSingleStudentModal\" class=\"modal-wrapper\">\n      <div class=\"modal-backdrop\" @click=\"showAddSingleStudentModal = false\"></div>\n      <div class=\"modal-dialog\">\n        <div class=\"modal-content\">\n          <div class=\"modal-header bg-success text-white\">\n            <h5 class=\"modal-title\">\n              <i class=\"fas fa-user-plus me-2\"></i>\n              Add Single Student\n            </h5>\n            <button type=\"button\" class=\"btn-close btn-close-white\" @click=\"showAddSingleStudentModal = false\"></button>\n          </div>\n          <div class=\"modal-body\">\n            <form @submit.prevent=\"handleAddSingleStudent\">\n              <div class=\"form-grid\">\n                <div class=\"form-group mb-3\">\n                  <label class=\"form-label\">Student ID <span class=\"text-danger\">*</span></label>\n                  <div class=\"input-group\">\n                    <span class=\"input-group-text\"><i class=\"fas fa-id-card\"></i></span>\n                    <input \n                      type=\"text\" \n                      class=\"form-control\" \n                      v-model=\"newStudent.studentId\"\n                      placeholder=\"Enter student ID\"\n                      required\n                    >\n                  </div>\n                </div>\n                \n                <div class=\"form-group mb-3\">\n                  <label class=\"form-label\">First Name <span class=\"text-danger\">*</span></label>\n                  <div class=\"input-group\">\n                    <span class=\"input-group-text\"><i class=\"fas fa-user\"></i></span>\n                    <input \n                      type=\"text\" \n                      class=\"form-control\" \n                      v-model=\"newStudent.firstName\"\n                      placeholder=\"Enter first name\"\n                      required\n                    >\n                  </div>\n                </div>\n                \n                <div class=\"form-group mb-3\">\n                  <label class=\"form-label\">Middle Name</label>\n                  <div class=\"input-group\">\n                    <span class=\"input-group-text\"><i class=\"fas fa-user\"></i></span>\n                    <input \n                      type=\"text\" \n                      class=\"form-control\" \n                      v-model=\"newStudent.middleName\"\n                      placeholder=\"Enter middle name\"\n                    >\n                  </div>\n                </div>\n                \n                <div class=\"form-group mb-3\">\n                  <label class=\"form-label\">Last Name <span class=\"text-danger\">*</span></label>\n                  <div class=\"input-group\">\n                    <span class=\"input-group-text\"><i class=\"fas fa-user\"></i></span>\n                    <input \n                      type=\"text\" \n                      class=\"form-control\" \n                      v-model=\"newStudent.lastName\"\n                      placeholder=\"Enter last name\"\n                      required\n                    >\n                  </div>\n                </div>\n                \n                <div class=\"form-group mb-3\">\n                  <label class=\"form-label\">Email <span class=\"text-danger\">*</span></label>\n                  <div class=\"input-group\">\n                    <span class=\"input-group-text\"><i class=\"fas fa-envelope\"></i></span>\n                    <input \n                      type=\"email\" \n                      class=\"form-control\" \n                      v-model=\"newStudent.email\"\n                      placeholder=\"Enter email address\"\n                      required\n                    >\n                  </div>\n                </div>\n                \n                <div class=\"form-group mb-3\">\n                  <label class=\"form-label\">Contact Number <span class=\"text-danger\">*</span></label>\n                  <div class=\"input-group\">\n                    <span class=\"input-group-text\"><i class=\"fas fa-phone\"></i></span>\n                    <input \n                      type=\"text\" \n                      class=\"form-control\" \n                      v-model=\"newStudent.contactNumber\"\n                      placeholder=\"Enter contact number\"\n                      required\n                    >\n                  </div>\n                </div>\n                \n                <div class=\"form-group mb-3\">\n                  <label class=\"form-label\">Year <span class=\"text-danger\">*</span></label>\n                  <div class=\"input-group\">\n                    <span class=\"input-group-text\"><i class=\"fas fa-graduation-cap\"></i></span>\n                    <select class=\"form-select\" v-model=\"newStudent.year\" required>\n                      <option value=\"\">Select Year</option>\n                      <option v-for=\"year in availableYears\" :key=\"year\" :value=\"year\">{{ year }}</option>\n                    </select>\n                  </div>\n                </div>\n                \n                <div class=\"form-group mb-3\">\n                  <label class=\"form-label\">Section <span class=\"text-danger\">*</span></label>\n                  <div class=\"input-group\">\n                    <span class=\"input-group-text\"><i class=\"fas fa-users\"></i></span>\n                    <select class=\"form-select\" v-model=\"newStudent.section\" required>\n                      <option value=\"\">Select Section</option>\n                      <option v-for=\"section in availableSections\" :key=\"section\" :value=\"section\">{{ section }}</option>\n                    </select>\n                  </div>\n                </div>\n              </div>\n              \n              <div class=\"form-footer mt-4 d-flex justify-content-end gap-2\">\n                <button type=\"button\" class=\"btn btn-secondary\" @click=\"showAddSingleStudentModal = false\">\n                  <i class=\"fas fa-times me-1\"></i> Cancel\n                </button>\n                <button type=\"submit\" class=\"btn btn-success\" :disabled=\"isAddingStudent\">\n                  <i class=\"fas fa-user-plus me-1\"></i> {{ isAddingStudent ? 'Adding...' : 'Add Student' }}\n                </button>\n              </div>\n            </form>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { ref, computed, reactive, onMounted, onUnmounted, watch, nextTick } from 'vue'\nimport { useStore } from 'vuex'\nimport axios from 'axios'\nimport Chart from 'chart.js/auto'\nimport { Dropdown } from 'bootstrap'\nimport { formatDate } from '../utils'\nimport StudentAssessmentChart from '../components/StudentAssessmentChart.vue'\n\n// Create axios instance with correct base URL\nconst api = axios.create({\n  baseURL: 'http://localhost:8081/api',\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\nexport default {\n  name: 'StudentManagement',\n  components : {\n    StudentAssessmentChart\n  },\n  setup() {\n    const store = useStore()\n    const students = ref([])\n    const searchQuery = ref('')\n    const selectedStudent = ref(null)\n    const performanceChart = ref(null)\n    const sortField = ref('')\n    const sortOrder = ref('asc')\n    const showDeleteModal = ref(false)\n    const studentToDelete = ref(null)\n    const isEditing = ref(false)\n    const editingStudent = ref(null)\n    const showSearch = ref(false)\n    const assessments = ref([])\n    const selectedYear = ref('')\n    const selectedSection = ref('')\n    const selectedFile = ref(null)\n    const uploadYear = ref('')\n    const isUploading = ref(false)\n    const subjectChart = ref(null)\n    const attendanceChart = ref(null)\n    const historyStartDate = ref('')\n    const historyEndDate = ref('')\n    const showStartDatePicker = ref(false)\n    const showEndDatePicker = ref(false)\n    const showAddStudentModal = ref(false)\n    const showAddSingleStudentModal = ref(false)\n    const availableYears = ['1st', '2nd', '3rd', '4th']\n    const availableSections = ['South 1', 'South 2', 'South 3']\n    const newStudent = ref({\n      studentId: '',\n      firstName: '',\n      middleName: '',\n      lastName: '',\n      email: '',\n      contactNumber: '',\n      year: '',\n      section: ''\n    })\n    const isAddingStudent = ref(false)\n\n    // Add chart refs and new state for tabs and attendance\n    const selectedTab = ref('info')\n    const attendanceHistory = ref([])\n    const attendanceChartInstance = ref(null)\n    const isLoadingAttendance = ref(false)\n    const isLoadingAssessments = ref(false)\n    \n    const attendanceFilter = reactive({\n      startDate: (() => {\n        const date = new Date();\n        date.setDate(date.getDate() - 30);\n        return date.toISOString().split('T')[0];\n      })(),\n      endDate: new Date().toISOString().split('T')[0]\n    });\n    \n    const attendanceCounts = reactive({\n      present: 0,\n      late: 0,\n      absent: 0\n    });\n\n    // Add computed properties for checking if we have data\n    const hasAttendanceData = computed(() => {\n      return attendanceHistory.value.length > 0;\n    });\n\n    const hasAssessmentData = computed(() => {\n      if (!assessments.value || !selectedStudent.value) return false;\n      \n      // Filter assessments for the current student\n      const studentAssessments = assessments.value.filter(\n        a => a.studentId === selectedStudent.value.studentId\n      );\n      \n      return studentAssessments.length > 0;\n    });\n\n    // Add pagination state\n    const currentPage = ref(1)\n    const itemsPerPage = 25\n\n    // Compute total pages\n    const totalPages = computed(() => Math.ceil(sortedStudents.value.length / itemsPerPage))\n\n    // Get paginated students\n    const paginatedStudents = computed(() => {\n      const start = (currentPage.value - 1) * itemsPerPage\n      const end = start + itemsPerPage\n      return sortedStudents.value.slice(start, end)\n    })\n\n    // Compute pagination info\n    const paginationInfo = computed(() => {\n      const start = (currentPage.value - 1) * itemsPerPage + 1\n      const end = Math.min(start + itemsPerPage - 1, sortedStudents.value.length)\n      return { start, end }\n    })\n\n    // Pagination methods\n    const nextPage = () => {\n      if (currentPage.value < totalPages.value) {\n        currentPage.value++\n      }\n    }\n\n    const previousPage = () => {\n      if (currentPage.value > 1) {\n        currentPage.value--\n      }\n    }\n\n    // Reset pagination when filters change\n    watch([searchQuery, selectedYear, selectedSection], () => {\n      currentPage.value = 1\n    })\n\n    // Initialize data on component mount\n    onMounted(async () => {\n      if (store.getters.isLoggedIn) {\n        await fetchStudents();\n      }\n      \n      // Initialize dropdowns after a short delay to ensure DOM is ready\n      nextTick(() => {\n        const dropdownElements = document.querySelectorAll('[data-bs-toggle=\"dropdown\"]')\n        const dropdownInstances = []\n        \n        dropdownElements.forEach(element => {\n          if (element) {\n            dropdownInstances.push(new Dropdown(element))\n          }\n        })\n\n        // Cleanup dropdowns on unmount\n        onUnmounted(() => {\n          dropdownInstances.forEach(dropdown => {\n            if (dropdown && typeof dropdown.dispose === 'function') {\n              dropdown.dispose()\n            }\n          })\n        })\n      })\n    })\n\n    // Watch for auth state changes\n    watch(() => store.state.auth.token, (newToken) => {\n      if (newToken) {\n        fetchStudents();\n      }\n    });\n\n    // File upload handlers\n    const handleFileChange = (event) => {\n      const file = event.target.files[0]\n      if (file && file.type !== 'text/csv') {\n        alert('Please select a CSV file')\n        event.target.value = ''\n        selectedFile.value = null\n        return\n      }\n      selectedFile.value = file\n      console.log('File selected:', file?.name)\n    }\n\n    const handleFileUpload = async () => {\n      if (!selectedFile.value || !uploadYear.value) {\n        alert('Please select both a year and a CSV file')\n        return\n      }\n\n      isUploading.value = true\n      const formData = new FormData()\n      formData.append('file', selectedFile.value)\n      formData.append('year', uploadYear.value)\n\n      try {\n        console.log('Starting upload...', {\n          year: uploadYear.value,\n          fileName: selectedFile.value.name\n        })\n\n        const token = store.state.auth.token\n        if (!token) {\n          throw new Error('No authentication token found')\n        }\n\n        // Log the form data to verify what's being sent\n        console.log('Form data contents:', {\n          file: selectedFile.value,\n          year: uploadYear.value\n        })\n\n        const response = await api.post('/students/upload', formData, {\n          headers: {\n            'Authorization': `Bearer ${token}`,\n            'Content-Type': 'multipart/form-data'\n          }\n        })\n\n        console.log('Upload successful:', response.data)\n\n        if (response.data.errors && response.data.errors.length > 0) {\n          const errorMessage = response.data.errors.join('\\n')\n          alert(`Upload completed with some errors:\\n${errorMessage}`)\n        } else {\n          const counts = response.data.sectionCounts\n          alert(`File uploaded successfully!\\n\\nStudent distribution:\\nSouth 1: ${counts['South 1']} students\\nSouth 2: ${counts['South 2']} students\\nSouth 3: ${counts['South 3']} students`)\n        }\n\n        // Reset form\n        selectedFile.value = null\n        uploadYear.value = ''\n        \n        // Refresh student list and close modal\n        await fetchStudents()\n    \n        // Debug: Check if emails are included in the fetched students after upload\n        console.log('Students after upload:', students.value);\n        if (students.value.length > 0) {\n          console.log('First student after upload:', students.value[0]);\n          console.log('Email field exists after upload:', 'email' in students.value[0]);\n          console.log('Email value after upload:', students.value[0].email);\n        }\n    \n        showAddStudentModal.value = false\n      } catch (error) {\n        console.error('Upload failed:', error)\n        alert('Error uploading file: ' + (error.response?.data?.message || error.message))\n      } finally {\n        isUploading.value = false\n      }\n    }\n\n    // Filter students\n    const filteredStudents = computed(() => {\n      return students.value.filter(student => {\n        const searchLower = searchQuery.value.toLowerCase();\n        const matchesSearch = \n          student.studentId.toLowerCase().includes(searchLower) ||\n          student.firstName.toLowerCase().includes(searchLower) ||\n          student.lastName.toLowerCase().includes(searchLower);\n\n        // Apply year and section filters\n        const matchesYear = !selectedYear.value || student.year === selectedYear.value;\n        const matchesSection = !selectedSection.value || student.section === selectedSection.value;\n\n        return matchesSearch && matchesYear && matchesSection;\n      });\n    });\n\n    // New function to handle tab changes\n    const changeTab = (tab) => {\n      selectedTab.value = tab;\n      \n      // If changing to attendance tab, fetch the data\n      if (tab === 'attendance') {\n        fetchAttendanceHistory();\n      } else if (tab === 'info') {\n        // Fetch assessment data when going to info tab\n        fetchStudentAssessments();\n      }\n    };\n\n    // Function to fetch assessment data for a specific student\n    const fetchStudentAssessments = async () => {\n      if (!selectedStudent.value) return;\n      \n      isLoadingAssessments.value = true;\n      \n      try {\n        const response = await api.get(`/students/assessments/${selectedStudent.value.studentId}`, {\n          headers: {\n            Authorization: `Bearer ${store.state.auth.token}`\n          }\n        });\n        \n        if (response.data && response.data.assessments) {\n          assessments.value = response.data.assessments;\n        }\n      } catch (error) {\n        console.error('Failed to fetch student assessments:', error);\n        assessments.value = [];\n      } finally {\n        isLoadingAssessments.value = false;\n      }\n    };\n\n    // New function to fetch attendance history\n    const fetchAttendanceHistory = async () => {\n      if (!selectedStudent.value) return;\n      \n      isLoadingAttendance.value = true;\n      \n      try {\n        const response = await api.get(`/attendance/${selectedStudent.value.studentId}/history`, {\n          params: {\n            startDate: attendanceFilter.startDate,\n            endDate: attendanceFilter.endDate,\n            section: selectedStudent.value.section,\n            year: selectedStudent.value.year\n          },\n          headers: {\n            Authorization: `Bearer ${store.state.auth.token}`\n          }\n        });\n        \n        if (response.data && response.data.records) {\n          attendanceHistory.value = response.data.records;\n          \n          // Count attendance statuses\n          attendanceCounts.present = 0;\n          attendanceCounts.late = 0;\n          attendanceCounts.absent = 0;\n          \n          attendanceHistory.value.forEach(record => {\n            if (record.status in attendanceCounts) {\n              attendanceCounts[record.status]++;\n            }\n          });\n          \n          // Update chart on next DOM update\n          nextTick(() => {\n            initAttendanceChart();\n          });\n        }\n      } catch (error) {\n        console.error('Failed to fetch attendance history:', error);\n        attendanceHistory.value = [];\n      } finally {\n        isLoadingAttendance.value = false;\n      }\n    };\n    \n    // New function to initialize the attendance chart\n    const initAttendanceChart = () => {\n      const ctx = attendanceChart.value;\n      if (!ctx) return;\n      \n      // Destroy previous chart instance if it exists\n      if (attendanceChartInstance.value) {\n        attendanceChartInstance.value.destroy();\n      }\n      \n      attendanceChartInstance.value = new Chart(ctx, {\n        type: 'doughnut',\n        data: {\n          labels: ['Present', 'Late', 'Absent'],\n          datasets: [{\n            data: [attendanceCounts.present, attendanceCounts.late, attendanceCounts.absent],\n            backgroundColor: ['#10b981', '#f59e0b', '#ef4444'],\n            borderWidth: 0,\n            hoverOffset: 4\n          }]\n        },\n        options: {\n          responsive: true,\n          maintainAspectRatio: false,\n          cutout: '70%',\n          plugins: {\n            legend: {\n              position: 'bottom',\n              labels: {\n                usePointStyle: true,\n                padding: 15,\n                font: {\n                  size: 12\n                }\n              }\n            },\n            tooltip: {\n              callbacks: {\n                label: function(context) {\n                  const label = context.label || '';\n                  const value = context.raw || 0;\n                  const total = context.chart.data.datasets[0].data.reduce((a, b) => a + b, 0);\n                  const percentage = total > 0 ? Math.round((value / total) * 100) : 0;\n                  return `${label}: ${value} (${percentage}%)`;\n                }\n              }\n            }\n          }\n        }\n      });\n    };\n\n    // Student actions\n    const closeStudentModal = () => {\n      // Destroy charts if they exist\n      if (attendanceChartInstance.value) {\n        attendanceChartInstance.value.destroy();\n        attendanceChartInstance.value = null;\n      }\n      selectedStudent.value = null;\n      selectedTab.value = 'info'; // Reset to info tab when closing\n    };\n\n    const confirmDelete = (student) => {\n      studentToDelete.value = student;\n      showDeleteModal.value = true;\n    }\n\n    const deleteStudent = async (student) => {\n      try {\n        const token = store.state.auth.token;\n\n        // Delete the student from students collection using MongoDB _id\n        await api.delete(\n          '/students/' + student._id,\n          {\n            headers: {\n              'Authorization': `Bearer ${token}`\n            }\n          }\n        );\n\n        // Update local state\n        students.value = students.value.filter(s => s._id !== student._id);\n        selectedStudent.value = null;\n        showDeleteModal.value = false;\n        studentToDelete.value = null;\n        alert('Student deleted successfully');\n      } catch (error) {\n        console.error('Failed to delete student:', error);\n        alert('Failed to delete student. Please try again.');\n      }\n    }\n\n    const startEditing = (student) => {\n      editingStudent.value = { ...student }\n      isEditing.value = true\n    }\n\n    const cancelEditing = () => {\n      editingStudent.value = null\n      isEditing.value = false\n    }\n\n    const saveStudentChanges = async () => {\n      try {\n        const token = store.state.auth.token\n        \n        // Update student information\n        const studentResponse = await api.put('/students/' + editingStudent.value._id, {\n          studentId: editingStudent.value.studentId,\n          firstName: editingStudent.value.firstName,\n          lastName: editingStudent.value.lastName,\n          email: editingStudent.value.email,\n          year: editingStudent.value.year,\n          section: editingStudent.value.section\n        }, {\n          headers: {\n            'Authorization': `Bearer ${token}`\n          }\n        })\n\n        if (studentResponse.data) {\n          // Update local state\n          const index = students.value.findIndex(s => s._id === editingStudent.value._id)\n          if (index !== -1) {\n            students.value[index] = { ...editingStudent.value }\n          }\n          \n          selectedStudent.value = null\n          editingStudent.value = null\n          isEditing.value = false\n          alert('Student information updated successfully')\n        } else {\n          throw new Error('Failed to update student information')\n        }\n      } catch (error) {\n        console.error('Failed to update student:', error)\n        alert('Failed to update student information. Please try again.')\n      }\n    }\n\n    const sortBy = (field) => {\n      if (sortField.value === field) {\n        sortOrder.value = sortOrder.value === 'asc' ? 'desc' : 'asc'\n      } else {\n        sortField.value = field\n        sortOrder.value = 'asc'\n      }\n    }\n\n    const getSortIcon = (field) => {\n      if (sortField.value !== field) return 'fas fa-sort'\n      return sortOrder.value === 'asc' ? 'fas fa-sort-up' : 'fas fa-sort-down'\n    }\n\n    const sortedStudents = computed(() => {\n      let students = filteredStudents.value\n\n      if (sortField.value) {\n        students = [...students].sort((a, b) => {\n          let aVal = a[sortField.value]\n          let bVal = b[sortField.value]\n\n          // Handle case-insensitive string comparison\n          if (typeof aVal === 'string') aVal = aVal.toLowerCase()\n          if (typeof bVal === 'string') bVal = bVal.toLowerCase()\n\n          if (aVal < bVal) return sortOrder.value === 'asc' ? -1 : 1\n          if (aVal > bVal) return sortOrder.value === 'asc' ? 1 : -1\n          return 0\n        })\n      }\n\n      return students\n    })\n\n    const toggleSearch = () => {\n      showSearch.value = !showSearch.value\n      if (!showSearch.value) {\n        searchQuery.value = ''\n      }\n    }\n\n    const handleSearch = () => {\n      // Implement any additional search logic here if needed\n      console.log('Searching for:', searchQuery.value)\n    }\n\n    const clearSearch = () => {\n      searchQuery.value = ''\n      handleSearch()\n    }\n\n    // Add capitalize helper function\n    const capitalize = (str) => {\n      if (!str) return '';\n      return str.charAt(0).toUpperCase() + str.slice(1);\n    };\n\n    // Add getAcademicYearRange function\n    const getAcademicYearRange = (year) => {\n      const currentYear = new Date().getFullYear()\n      let yearNumber = 0\n\n      switch(year) {\n        case '1st':\n          yearNumber = 1\n          break\n        case '2nd':\n          yearNumber = 2\n          break\n        case '3rd':\n          yearNumber = 3\n          break\n        case '4th':\n          yearNumber = 4\n          break\n        default:\n          return 'N/A'\n      }\n\n      const startYear = currentYear - yearNumber + 1\n      return `${startYear} - ${startYear + 1}`\n    }\n\n    // Add hasActiveFilters computed property\n    const hasActiveFilters = computed(() => {\n      return selectedYear.value || selectedSection.value;\n    });\n\n    // Update viewStudent function\n    const viewStudent = async (student) => {\n      selectedStudent.value = student;\n      selectedTab.value = 'info'; // Default to info tab when opening\n      \n      // Fetch student data when opening modal\n      await Promise.all([\n        fetchStudentAssessments(),\n        fetchAttendanceHistory()\n      ]);\n    };\n\n    // Add clearFilters function\n    const clearFilters = () => {\n      selectedYear.value = '';\n      selectedSection.value = '';\n      searchQuery.value = '';\n    };\n\n    const applyFilters = () => {\n      fetchStudents();\n    };\n\n    // Function to handle adding a single student\n    const handleAddSingleStudent = async () => {\n      try {\n        isAddingStudent.value = true\n        \n        // Validate required fields\n        const requiredFields = ['studentId', 'firstName', 'middleName', 'lastName', 'email', 'contactNumber', 'year', 'section']\n        for (const field of requiredFields) {\n          if (!newStudent.value[field]) {\n            throw new Error(`${field.charAt(0).toUpperCase() + field.slice(1)} is required`)\n          }\n        }\n        \n        // Validate email format\n        const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/\n        if (!emailRegex.test(newStudent.value.email)) {\n          throw new Error('Please enter a valid email address')\n        }\n        \n        const token = store.state.auth.token\n        if (!token) {\n          throw new Error('No authentication token found')\n        }\n        \n        // Send request to add student\n        const response = await api.post('/students', {\n          ...newStudent.value,\n          // Calculate academic years based on current year and student's year level\n          academicYears: calculateAcademicYears(newStudent.value.year)\n        }, {\n          headers: {\n            'Authorization': `Bearer ${token}`\n          }\n        })\n        \n        console.log('Student added successfully:', response.data)\n        \n        // Reset form and close modal\n        resetNewStudentForm()\n        showAddSingleStudentModal.value = false\n        \n        // Refresh student list\n        await fetchStudents()\n        \n        alert('Student added successfully')\n      } catch (error) {\n        console.error('Failed to add student:', error)\n        alert('Error adding student: ' + (error.response?.data?.message || error.message))\n      } finally {\n        isAddingStudent.value = false\n      }\n    }\n\n    // Helper function to reset the new student form\n    const resetNewStudentForm = () => {\n      newStudent.value = {\n        studentId: '',\n        firstName: '',\n        middleName: '',\n        lastName: '',\n        email: '',\n        contactNumber: '',\n        year: '',\n        section: ''\n      }\n    }\n\n    // Helper function to calculate academic years\n    const calculateAcademicYears = (year) => {\n      const currentYear = new Date().getFullYear()\n      let startYear, endYear\n      \n      switch(year) {\n        case '1st':\n          startYear = currentYear\n          endYear = currentYear + 4\n          break\n        case '2nd':\n          startYear = currentYear - 1\n          endYear = currentYear + 3\n          break\n        case '3rd':\n          startYear = currentYear - 2\n          endYear = currentYear + 2\n          break\n        case '4th':\n          startYear = currentYear - 3\n          endYear = currentYear + 1\n          break\n        default:\n          startYear = currentYear\n          endYear = currentYear + 4\n      }\n      \n      return { startYear, endYear }\n    }\n\n    // Add fetchStudents function that was accidentally removed\n    const fetchStudents = async () => {\n      try {\n        const token = store.state.auth.token;\n        const response = await api.get('/students', {\n          headers: {\n            'Authorization': `Bearer ${token}`\n          }\n        });\n        students.value = response.data;\n        const response1 = await api.get('/students/assessments/all', {\n          headers: {\n            'Authorization': `Bearer ${token}`\n          }\n        });\n        assessments.value = response1.data?.assessments\n      } catch (error) {\n        console.error('Failed to fetch students:', error);\n        alert('Failed to fetch students. Please try again.');\n      }\n    };\n\n    return {\n      students,\n      searchQuery,\n      selectedStudent,\n      performanceChart,\n      sortField,\n      sortOrder,\n      showDeleteModal,\n      studentToDelete,\n      isEditing,\n      editingStudent,\n      showSearch,\n      showAddStudentModal,\n      showAddSingleStudentModal,\n      selectedFile,\n      uploadYear,\n      isUploading,\n      availableYears,\n      availableSections,\n      newStudent,\n      isAddingStudent,\n      handleFileChange,\n      handleFileUpload,\n      handleAddSingleStudent,\n      resetNewStudentForm,\n      filteredStudents,\n      closeStudentModal,\n      confirmDelete,\n      deleteStudent,\n      startEditing,\n      cancelEditing,\n      saveStudentChanges,\n      sortBy,\n      getSortIcon,\n      sortedStudents,\n      toggleSearch,\n      handleSearch,\n      clearSearch,\n      fetchStudents,\n      hasActiveFilters,\n      selectedYear,\n      selectedSection,\n      viewStudent,\n      getAcademicYearRange,\n      clearFilters,\n      applyFilters,\n      currentPage,\n      totalPages,\n      paginatedStudents,\n      paginationInfo,\n      nextPage,\n      previousPage,\n      formatDate,\n      assessments,\n      selectedTab,\n      attendanceHistory,\n      attendanceFilter,\n      attendanceChart,\n      isLoadingAttendance,\n      fetchAttendanceHistory,\n      capitalize,\n      changeTab,\n      isLoadingAssessments,\n      hasAttendanceData,\n      hasAssessmentData\n    }\n  }\n}\n</script>\n\n<style scoped>\n/* Base z-index hierarchy */\n:root {\n  --z-base: 1;\n  --z-table: 1010;\n  --z-controls: 1020;\n  --z-dropdown: 1030;\n  --z-modal-backdrop: 1040;\n  --z-modal: 1050;\n}\n\n.student-management {\n  padding: 20px;\nposition: relative;\n}\n\n/* Button container styles */\n.d-flex.gap-2.mb-3 {\nposition: static;\ntop: auto;\nright: auto;\nz-index: auto;\n}\n\n/* Modal Styles */\n.modal-wrapper {\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100vw;\n  height: 100vh;\n  display: flex;\n  align-items: center;\n  justify-content: center;\nz-index: 2000;\n}\n\n.modal-backdrop {\nposition: fixed;\ntop: 0;\nleft: 0;\nwidth: 100vw;\nheight: 100vh;\nbackground-color: rgba(0, 0, 0, 0.5);\nz-index: 1999;\n}\n\n.modal {\n  position: relative;\n  width: 100%;\nmax-width: 500px;\nmargin: 2rem;\nz-index: 2001;\nbackground: white;\nborder-radius: 12px;\nbox-shadow: 0 20px 25px -5px rgba(0, 0, 0, 0.1), 0 10px 10px -5px rgba(0, 0, 0, 0.04);\noverflow: hidden;\n}\n\n.modal-content {\n  position: relative;\n  width: 100%;\nbackground: white;\nborder-radius: 12px;\n  overflow: hidden;\n}\n\n.modal-header {\ndisplay: flex;\nalign-items: center;\njustify-content: space-between;\npadding: 1rem 1.5rem;\nborder-bottom: 1px solid #e2e8f0;\n}\n\n.modal-header.bg-primary {\nbackground-color: #003366 !important;\n}\n\n.btn-close-white {\nfilter: brightness(0) invert(1);\n}\n\n.modal-body {\n  padding: 1.5rem;\n}\n\n.form-label {\nfont-weight: 500;\ncolor: #2d3748;\nmargin-bottom: 0.5rem;\n}\n\n.form-select,\n.form-control {\nborder: 2px solid #e2e8f0;\nborder-radius: 8px;\npadding: 0.75rem;\nwidth: 100%;\ntransition: all 0.2s;\n}\n\n.form-select:focus,\n.form-control:focus {\nborder-color: #003366;\nbox-shadow: 0 0 0 2px rgba(0, 51, 102, 0.1);\n}\n\n.text-muted {\ncolor: #718096 !important;\n}\n\n.btn {\npadding: 0.75rem 1.5rem;\nfont-weight: 500;\nborder-radius: 8px;\ntransition: all 0.2s;\n}\n\n.btn-primary {\nbackground-color: #003366;\nborder: none;\n}\n\n.btn-primary:hover:not(:disabled) {\nbackground-color: #004080;\n}\n\n.btn-secondary {\nbackground-color: #e2e8f0;\nborder: none;\ncolor: #4a5568;\n}\n\n.btn-secondary:hover {\nbackground-color: #cbd5e1;\n}\n\n.btn:disabled {\nopacity: 0.7;\ncursor: not-allowed;\n}\n\n/* Table container styles */\n.table-container {\nmargin-top: 0;\n}\n\n/* Table Styles */\n.table-responsive {\n  position: relative;\n  z-index: 1010;\n  background: white;\n  border-radius: 12px;\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.05);\n  overflow: hidden;\n}\n\n.table {\n  margin-bottom: 0;\n}\n\n.table thead th {\n  position: sticky;\n  top: 0;\n  background: white;\n  z-index: 1011;\n  padding: 1rem;\n  font-weight: 600;\n  color: #4a5568;\n  border-bottom: 2px solid #e2e8f0;\n}\n\n/* Student Info Card */\n.student-info-card {\n  background: white;\n  border-radius: 12px;\n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.05);\n  margin-bottom: 1.5rem;\n}\n\n.student-info-header {\n  padding: 1rem 1.25rem;\n  background: #f8f9fa;\n  border-bottom: 1px solid #e9ecef;\n  font-weight: 600;\n  color: #2d3748;\n}\n\n.student-info-content {\n  padding: 1.25rem;\n}\n\n.info-grid {\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));\n  gap: 1.25rem;\n}\n\n.info-item {\n  display: flex;\n  flex-direction: column;\n  gap: 0.5rem;\n}\n\n.info-item label {\n  font-size: 0.875rem;\n  color: #718096;\n  font-weight: 500;\n}\n\n.info-item span {\n  color: #2d3748;\n  font-weight: 500;\n}\n\n/* Performance Card */\n.performance-card {\n  background: white;\n  border-radius: 12px;\n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.05);\n  margin-bottom: 1.5rem;\n}\n\n.performance-header {\n  padding: 1rem 1.25rem;\n  background: #f8f9fa;\n  border-bottom: 1px solid #e9ecef;\n  font-weight: 600;\n  color: #2d3748;\n  display: flex;\n  align-items: center;\n  gap: 0.75rem;\n}\n\n.performance-content {\n  padding: 1.25rem;\n}\n\n.chart-container {\n  background: white;\n  padding: 1.25rem;\n  border-radius: 8px;\n  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.05);\n}\n\n/* History Card */\n.history-card {\n  background: white;\n  border-radius: 12px;\n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.05);\n}\n\n.history-header {\n  padding: 1rem 1.25rem;\n  background: #003366;\n  color: white;\n  font-weight: 600;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  border-bottom: 1px solid rgba(255, 255, 255, 0.1);\n}\n\n.history-content {\n  padding: 1.25rem;\n}\n\n/* Dropdown Styles */\n.dropdown {\n  position: relative;\n  z-index: 1030;\n}\n\n.dropdown-menu {\n  position: absolute;\n  z-index: 1031;\n  min-width: 200px;\n  background: white;\n  border-radius: 12px;\n  box-shadow: 0 4px 20px rgba(0, 0, 0, 0.15);\n  border: none;\n  padding: 0.5rem 0;\n  margin-top: 0.5rem;\n}\n\n.dropdown-menu.show {\n  display: block !important;\n}\n\n/* Button Styles */\n.btn-control {\n  height: 38px;\n  background: #f8fafc;\n  border: 1px solid #e2e8f0;\n  color: #4a5568;\n  font-size: 0.9rem;\n  padding: 0.5rem 1rem;\n  display: flex;\n  align-items: center;\n  gap: 0.5rem;\n  border-radius: 8px;\n  transition: all 0.2s ease;\n}\n\n.btn-control:hover,\n.btn-control:focus {\n  background: #f1f5f9;\n  border-color: #cbd5e1;\n  color: #2d3748;\n}\n\n/* Search Control */\n.search-control {\n  position: relative;\n  z-index: var(--z-controls);\n  width: 300px;\n}\n\n.search-control .input-group {\n  border-radius: 8px;\n  overflow: hidden;\n  box-shadow: 0 1px 3px rgba(0,0,0,0.05);\n}\n\n.search-control .input-group-text {\n  background: white;\n  border: 1px solid #e2e8f0;\n  color: #718096;\n  padding-right: 0;\n}\n\n.search-control .form-control {\n  border: 1px solid #e2e8f0;\n  padding: 0.5rem 0.75rem;\n  font-size: 0.9rem;\n}\n\n/* Filter Badge */\n.filter-badge {\n  position: absolute;\n  top: -6px;\n  right: -6px;\n  background: #e53e3e;\n  color: white;\n  width: 18px;\n  height: 18px;\n  border-radius: 50%;\n  font-size: 0.7rem;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  border: 2px solid white;\n}\n\n/* Table styles */\n.table {\n  margin-bottom: 0;\n  background: white;\n}\n\n.table thead th {\n  position: sticky;\n  top: 0;\n  background: white;\n  z-index: calc(var(--z-table) + 1);\n  padding: 1rem;\n  font-weight: 600;\n  color: #4a5568;\n  border-bottom: 2px solid #e2e8f0;\n}\n\n/* Search control */\n.search-control {\n  position: relative;\n  z-index: var(--z-controls);\n}\n\n/* Controls wrapper */\n.controls-wrapper {\n  position: relative;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  gap: 1rem;\n}\n\n.controls-left {\n  display: flex;\n  align-items: center;\n  gap: 0.75rem;\n  z-index: var(--z-controls);\n}\n\n.btn-light {\n  background: #f8fafc;\n  border: 1px solid #e2e8f0;\n  color: #4a5568;\n}\n\n.btn-light:hover {\n  background: #f1f5f9;\n  border-color: #cbd5e1;\n  color: #2d3748;\n}\n\n.btn-primary {\n  background: #4299e1;\n  border: none;\n  color: white;\n}\n\n.btn-primary:hover {\n  background: #3182ce;\n}\n\n.student-info p {\n  margin-bottom: 0.75rem;\n  padding-bottom: 0.75rem;\n  border-bottom: 1px solid #eee;\n}\n\n.student-info p:last-child {\n  border-bottom: none;\n}\n\n.student-info strong {\n  color: #666;\n  display: inline-block;\n  width: 100px;\n}\n\n.empty-state-message {\n  padding: 2rem 0;\n}\n\n.empty-state-message i {\n  font-size: 2rem;\n  display: block;\n  margin-bottom: 0.5rem;\n}\n\n.empty-state-message p {\n  margin: 0;\n  color: #6c757d;\n}\n\n.clickable-row {\n  cursor: pointer;\n  transition: background-color 0.2s ease;\n}\n\n.clickable-row:hover {\n  background-color: rgba(0, 51, 102, 0.05) !important;\n}\n\n.student-info-card,\n.performance-card,\n.history-card {\n  background: white;\n  border-radius: 10px;\n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);\n  overflow: hidden;\n}\n\n.student-info-header,\n.performance-header,\n.history-header {\n  background-color: #f8f9fa;\n  padding: 1rem;\n  font-weight: 600;\n  color: #2c3e50;\n  border-bottom: 1px solid #eee;\n  display: flex;\n  align-items: center;\n}\n\n.student-info-content,\n.performance-content,\n.history-content {\n  padding: 1.5rem;\n}\n\n.info-grid {\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));\n  gap: 1.5rem;\n  padding: 1rem;\n}\n\n.info-item {\n  display: flex;\n  flex-direction: column;\n}\n\n.info-item label {\n  font-weight: 600;\n  color: #666;\n  margin-bottom: 0.25rem;\n}\n\n.info-item span {\n  color: #333;\n}\n\n.chart-container {\n  background: white;\n  padding: 1rem;\n  border-radius: 8px;\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.05);\n}\n\n.badge {\nfont-size: 1rem;\npadding: 0.5em 1em;\n}\n\n.badge-quiz {\n  background-color: #4e73df;\n  color: white;\n}\n\n.badge-activity {\n  background-color: #1cc88a;\n  color: white;\n}\n\n.badge-performance {\n  background-color: #f6c23e;\n  color: white;\n}\n\n.score-excellent {\n  color: #1cc88a;\n  font-weight: 600;\n}\n\n.score-good {\n  color: #4e73df;\n  font-weight: 600;\n}\n\n.score-average {\n  color: #f6c23e;\n  font-weight: 600;\n}\n\n.score-poor {\n  color: #e74a3b;\n  font-weight: 600;\n}\n\n.modal-header.bg-primary {\n  background-color: #003366 !important;\n}\n\n.btn-close-white {\n  filter: brightness(0) invert(1);\n}\n\n.date-filter .form-control {\n  background-color: rgba(255, 255, 255, 0.1);\n  border: 1px solid rgba(255, 255, 255, 0.2);\n  color: white;\n  width: 150px;\n}\n\n.date-filter .form-control::-webkit-calendar-picker-indicator {\n  filter: invert(1);\n}\n\n.date-filter .form-control:focus {\n  background-color: rgba(255, 255, 255, 0.2);\n  border-color: rgba(255, 255, 255, 0.3);\n  color: white;\n}\n\n.date-filter span {\n  padding: 0 0.5rem;\n}\n\n.date-input-container {\n  position: relative;\n  display: inline-block;\n}\n\n.date-picker-dropdown {\n  position: absolute;\n  top: 100%;\n  left: 0;\n  margin-top: 4px;\n  background: white;\n  border-radius: 8px;\n  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);\n  padding: 12px;\n  min-width: 250px;\n}\n\n.date-picker-header {\n  display: flex;\n  justify-content: flex-end;\n  margin-bottom: 8px;\n}\n\n.close-btn {\n  background: none;\n  border: none;\n  color: #666;\n  cursor: pointer;\n  padding: 4px;\n  font-size: 14px;\n}\n\n.close-btn:hover {\n  color: #333;\n}\n\n.date-picker-input {\n  width: 100%;\n  padding: 8px;\n  border: 1px solid #ddd;\n  border-radius: 4px;\n  font-size: 14px;\n}\n\n.date-picker-input::-webkit-calendar-picker-indicator {\n  cursor: pointer;\n  padding: 4px;\n}\n\n.date-filter .form-control {\n  background-color: rgba(255, 255, 255, 0.1);\n  border: 1px solid rgba(255, 255, 255, 0.2);\n  color: white;\n  width: 150px;\n  cursor: pointer;\n}\n\n.date-filter .form-control:hover {\n  background-color: rgba(255, 255, 255, 0.2);\n}\n\n.date-filter span {\n  padding: 0 0.5rem;\n  color: white;\n}\n\n.history-card {\n  position: relative;\n  overflow: visible !important;\n}\n\n.history-header {\n  position: relative;\n  overflow: visible;\n}\n\n.table {\n  width: 100%;\n  margin-bottom: 0;\n  border-collapse: collapse;\n}\n\n.table th {\n  position: sticky;\n  top: 0;\n  background: white;\n  z-index: 10;\n  padding: 1rem;\n  font-weight: 600;\n  color: #4a5568;\n  border-bottom: 2px solid #e2e8f0;\n}\n\n.table td {\n  padding: 1rem;\n  vertical-align: middle;\n  border-bottom: 1px solid #e2e8f0;\n}\n\n.table tbody tr:hover {\n  background-color: #f8f9fa;\n}\n\n.btn {\n  padding: 0.5rem 1rem;\n  border-radius: 8px;\n  font-weight: 500;\n  display: inline-flex;\n  align-items: center;\n  justify-content: center;\n  gap: 0.5rem;\n}\n\n.btn i {\n  font-size: 0.875rem;\n}\n\n.form-control,\n.form-select {\n  border: 2px solid #eee;\n  border-radius: 8px;\n  padding: 0.75rem;\n  transition: all 0.3s;\n}\n\n.form-control:focus,\n.form-select:focus {\n  border-color: var(--primary-color);\n  box-shadow: 0 0 0 0.2rem rgba(0, 51, 102, 0.15);\n}\n\n/* Table Controls */\n.table-controls {\n  position: relative;\n  z-index: 1030;\n  background: white;\n  padding: 1rem;\n  border-radius: 12px;\n  box-shadow: 0 2px 4px rgba(0,0,0,0.05);\n  margin-bottom: 1rem;\n}\n\n.dropdown {\n  position: relative;\n}\n\n.dropdown-menu {\n  position: absolute;\n  z-index: 1031;\n  min-width: 200px;\n  background: white;\n  border-radius: 12px;\n  box-shadow: 0 4px 20px rgba(0, 0, 0, 0.15);\n  border: none;\n  padding: 0.5rem 0;\n  margin-top: 0.5rem;\n}\n\n.dropdown-menu.show {\n  display: block !important;\n}\n\n/* Modal Styles */\n.modal-dialog {\n  max-width: 900px;\n  margin: 1.75rem auto;\n}\n\n.modal-content {\n  background: white;\n  border-radius: 16px;\n  box-shadow: 0 20px 25px -5px rgba(0, 0, 0, 0.1), 0 10px 10px -5px rgba(0, 0, 0, 0.04);\n  border: 1px solid rgba(255, 255, 255, 0.1);\n  overflow: hidden;\n}\n\n.modal-header {\n  background: #003366;\n  color: white;\n  padding: 1.25rem 1.5rem;\n  border-bottom: 1px solid rgba(255, 255, 255, 0.1);\n}\n\n.modal-header .modal-title {\n  font-size: 1.25rem;\n  font-weight: 600;\n  margin: 0;\n}\n\n.modal-body {\n  padding: 1.5rem;\n}\n\n/* Student Details Layout */\n.student-details {\n  display: grid;\n  grid-template-columns: 350px 1fr;\n  gap: 2rem;\nmax-height: calc(90vh - 4rem);\noverflow-y: auto;\n}\n\n.student-info {\n  background: #f8fafc;\n  padding: 1.5rem;\n  border-radius: 12px;\n  height: fit-content;\n}\n\n.info-title {\n  color: #2d3748;\n  font-size: 1.1rem;\n  font-weight: 600;\n  margin-bottom: 1.5rem;\n  padding-bottom: 0.75rem;\n  border-bottom: 2px solid #e2e8f0;\n}\n\n.info-content p {\n  margin-bottom: 1rem;\n  padding-bottom: 0.75rem;\n  border-bottom: 1px solid #e2e8f0;\n  font-size: 1rem;\n}\n\n.info-content p:last-child {\n  margin-bottom: 0;\n  padding-bottom: 0;\n  border-bottom: none;\n}\n\n.info-content strong {\n  color: #4a5568;\n  display: inline-block;\n  width: 120px;\n  font-weight: 600;\n}\n\n.student-charts {\n  display: grid;\n  grid-template-rows: 1fr 1fr;\n  gap: 1.5rem;\n}\n\n.chart-section {\n  background: white;\n  border-radius: 12px;\n  padding: 1.5rem;\n  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);\n}\n\n.chart-section h6 {\n  color: #2d3748;\n  font-size: 1.1rem;\n  font-weight: 600;\n  margin-bottom: 1.5rem;\n  padding-bottom: 0.75rem;\n  border-bottom: 2px solid #e2e8f0;\n}\n\n/* Table Styles */\n.table-responsive {\n  position: relative;\n  z-index: 1020;\n  background: white;\n  border-radius: 12px;\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.05);\n  overflow: hidden;\n}\n\n/* Update existing styles */\n.table-container {\n  background: white;\n  border-radius: 12px;\n  box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06);\n  overflow: hidden;\n}\n\n.table-controls {\n  background: #f8fafc;\n  padding: 1rem;\n  border-bottom: 1px solid #e2e8f0;\n}\n\n.modal-dialog.modal-xxl {\nmax-width: 90%;\nwidth: 1400px;\nmargin: 2rem auto;\n}\n\n.student-details {\n  display: grid;\ngrid-template-columns: 350px 1fr;\n  gap: 2rem;\nmax-height: calc(90vh - 4rem);\noverflow-y: auto;\n}\n\n.student-info {\n  background: #f8fafc;\n  padding: 2rem;\n  border-radius: 12px;\n  height: fit-content;\n}\n\n.info-title {\n  color: #2d3748;\n  font-size: 1.4rem;\n  font-weight: 600;\n  margin-bottom: 2rem;\n  padding-bottom: 1rem;\n  border-bottom: 2px solid #e2e8f0;\n}\n\n.info-content p {\n  margin-bottom: 1.25rem;\n  padding-bottom: 1.25rem;\n  border-bottom: 1px solid #e2e8f0;\n  font-size: 1.2rem;\n  line-height: 1.5;\n}\n\n.info-content strong {\n  color: #4a5568;\n  display: inline-block;\n  width: 160px;\n  font-weight: 600;\n}\n\n.chart-section {\n  background: white;\n  border-radius: 12px;\n  padding: 2rem;\n  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);\n}\n\n.chart-section h6 {\n  color: #2d3748;\n  font-size: 1.4rem;\n  font-weight: 600;\n  margin-bottom: 2rem;\n  padding-bottom: 1rem;\n  border-bottom: 2px solid #e2e8f0;\n}\n\n.attendance-table {\n  margin-top: 1rem;\n  font-size: 1.1rem;\n}\n\n.attendance-table th {\n  font-size: 1.1rem;\n  font-weight: 600;\n  color: #2d3748;\n}\n\n.attendance-table td {\n  font-size: 1.1rem;\n  color: #4a5568;\n}\n\n.badge {\n  font-size: 1rem;\n  padding: 0.5em 1em;\n}\n\n/* Fix z-index issues */\n.modal-wrapper {\n  z-index: 9999 !important;\n}\n\n.modal-backdrop {\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100vw;\n  height: 100vh;\n  background-color: rgba(0, 0, 0, 0.5);\n  z-index: 9998;\n  backdrop-filter: blur(4px);\n}\n\n.modal-dialog {\n  z-index: 9999 !important;\n}\n\n.table-controls {\n  position: relative;\n  z-index: 1020;\n}\n\n.dropdown-menu {\n  z-index: 1030;\n}\n\n.table-responsive {\n  position: relative;\n  z-index: 1010;\n}\n\n/* Ensure dropdowns are hidden when modal is open */\n.modal-wrapper ~ .table-controls .dropdown-menu {\n  display: none !important;\n}\n\n/* Timeline Styles */\n.timeline {\n  position: relative;\n  padding: 1rem 0;\n}\n\n.timeline::before {\n  content: '';\n  position: absolute;\n  top: 0;\n  left: 1rem;\n  height: 100%;\n  width: 2px;\n  background: #e2e8f0;\n}\n\n.timeline-item {\n  position: relative;\n  padding-left: 2.5rem;\n  padding-bottom: 2rem;\n}\n\n.timeline-item:last-child {\n  padding-bottom: 0;\n}\n\n.timeline-marker {\n  position: absolute;\n  left: 0;\n  width: 24px;\n  height: 24px;\n  border-radius: 50%;\n  background: #e2e8f0;\n  border: 4px solid #fff;\n  box-shadow: 0 0 0 2px #e2e8f0;\n  z-index: 1;\n}\n\n.timeline-content {\n  background: white;\n  padding: 1rem;\n  border-radius: 8px;\n  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);\n}\n\n.timeline-content h6 {\n  margin: 0;\n  font-size: 1.1rem;\n  color: #2d3748;\n}\n\n.timeline-status {\n  margin: 0.5rem 0 0;\n  font-size: 0.95rem;\n  color: #718096;\n}\n\n.timeline-item.completed .timeline-marker {\n  background: #003366;\n  box-shadow: 0 0 0 2px #003366;\n}\n\n.timeline-item.completed .timeline-content {\n  border-left: 3px solid #003366;\n}\n\n.timeline-item.completed .timeline-status {\n  color: #003366;\n  font-weight: 500;\n}\n\n.timeline-item.current .timeline-marker {\n  background: #4299e1;\n  box-shadow: 0 0 0 2px #4299e1;\n}\n\n.timeline-item.current .timeline-content {\n  border-left: 3px solid #4299e1;\n  background: #ebf8ff;\n}\n\n.timeline-item.current .timeline-status {\n  color: #4299e1;\n  font-weight: 500;\n}\n\n/* Add Student Modal Styles */\n.add-student-modal {\nposition: fixed;\ntop: 0;\nleft: 0;\nwidth: 100%;\nheight: 100%;\ndisplay: flex;\nalign-items: center;\njustify-content: center;\nz-index: 9999;\n}\n\n.add-student-backdrop {\nposition: fixed;\ntop: 0;\nleft: 0;\nwidth: 100%;\nheight: 100%;\nbackground-color: rgba(0, 0, 0, 0.5);\nz-index: 9998;\n}\n\n.add-student-dialog {\nposition: relative;\nwidth: 100%;\nmax-width: 500px;\nmargin: 1.75rem;\nz-index: 10000;\n}\n\n.add-student-content {\nposition: relative;\ndisplay: flex;\nflex-direction: column;\nbackground-color: #fff;\nborder-radius: 12px;\nbox-shadow: 0 20px 25px -5px rgba(0, 0, 0, 0.1), 0 10px 10px -5px rgba(0, 0, 0, 0.04);\noverflow: hidden;\n}\n\n.modal-header {\ndisplay: flex;\nalign-items: center;\njustify-content: space-between;\npadding: 1rem 1.5rem;\n}\n\n.modal-header.bg-primary {\nbackground-color: #003366 !important;\n}\n\n.modal-body {\npadding: 1.5rem;\n}\n\n.btn-close-white {\nfilter: brightness(0) invert(1);\n}\n\n/* Form Styles */\n.form-label {\nfont-weight: 500;\ncolor: #2d3748;\nmargin-bottom: 0.5rem;\n}\n\n.form-select,\n.form-control {\nborder: 2px solid #e2e8f0;\nborder-radius: 8px;\npadding: 0.75rem;\nwidth: 100%;\ntransition: all 0.2s;\n}\n\n.form-select:focus,\n.form-control:focus {\nborder-color: #003366;\nbox-shadow: 0 0 0 2px rgba(0, 51, 102, 0.1);\n}\n\n.text-muted {\ncolor: #718096 !important;\n}\n\n.btn {\npadding: 0.75rem 1.5rem;\nfont-weight: 500;\nborder-radius: 8px;\ntransition: all 0.2s;\n}\n\n.btn-primary {\nbackground-color: #003366;\nborder: none;\n}\n\n.btn-primary:hover:not(:disabled) {\nbackground-color: #004080;\n}\n\n.btn-secondary {\nbackground-color: #e2e8f0;\nborder: none;\ncolor: #4a5568;\n}\n\n.btn-secondary:hover {\nbackground-color: #cbd5e1;\n}\n\n.btn:disabled {\nopacity: 0.7;\ncursor: not-allowed;\n}\n\n/* Add CSS styles for the success button and modal */\n.btn-success {\n  background-color: #10B981;\n  border: none;\n  color: white;\n}\n\n.btn-success:hover:not(:disabled) {\n  background-color: #059669;\n}\n\n.modal-header.bg-success {\n  background-color: #10B981 !important;\n}\n\n/* Form validation styles */\n.form-control.is-invalid,\n.form-select.is-invalid {\n  border-color: #dc3545;\n  background-image: url(\"data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 12 12' width='12' height='12' fill='none' stroke='%23dc3545'%3e%3ccircle cx='6' cy='6' r='4.5'/%3e%3cpath stroke-linejoin='round' d='M5.8 3.6h.4L6 6.5z'/%3e%3ccircle cx='6' cy='8.2' r='.6' fill='%23dc3545' stroke='none'/%3e%3c/svg%3e\");\n  background-repeat: no-repeat;\n  background-position: right calc(0.375em + 0.1875rem) center;\n  background-size: calc(0.75em + 0.375rem) calc(0.75em + 0.375rem);\n}\n\n.invalid-feedback {\n  display: block;\n  width: 100%;\n  margin-top: 0.25rem;\n  font-size: 0.875em;\n  color: #dc3545;\n}\n\n/* Add sticky controls styles */\n.sticky-controls {\n  position: sticky;\n  top: 0;\n  background: white;\n  padding: 1rem;\n  z-index: 1040;\n  border-bottom: 1px solid #e2e8f0;\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.05);\n}\n\n/* Add pagination styles */\n.pagination-controls {\n  background: white;\n  padding: 1rem;\n  border-top: 1px solid #e2e8f0;\n}\n\n.pagination-info {\n  color: #4a5568;\n  font-size: 0.9rem;\n}\n\n.pagination-buttons .btn {\n  min-width: 100px;\n}\n\n/* Update table styles for fixed height */\n.table-responsive {\n  max-height: calc(100vh - 250px);\n  overflow-y: auto;\n}\n\n/* Ensure sticky header stays in place */\n.table thead th {\n  position: sticky;\n  top: 0;\n  background: white;\n  z-index: 1020;\n}\n\n/* Attendance History styling to match StudentDetailsModal */\n.student-charts {\n  display: flex;\n  flex-direction: column;\n  gap: 1.5rem;\n}\n\n.attendance-history {\n  margin-top: 1.5rem;\n}\n\n.chart-controls {\n  display: flex;\n  justify-content: flex-end;\n  align-items: center;\n  background: #f8fafc;\n  padding: 1rem;\n  border-radius: 8px;\n  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.05);\n}\n\n.date-filter {\n  width: 100%;\n}\n\n.date-filter .input-group {\n  display: flex;\n  align-items: center;\n}\n\n.date-filter .input-group-text {\n  background-color: #f1f5f9;\n  border-color: #e2e8f0;\n  color: #4a5568;\n  font-weight: 500;\n}\n\n.date-filter .form-control {\n  border-color: #e2e8f0;\n  color: #4a5568;\n  font-weight: 500;\n}\n\n.date-filter .btn {\n  margin-left: 8px;\n}\n\n.chart-section {\n  background: white;\n  border-radius: 12px;\n  padding: 2rem;\n  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);\n  margin-bottom: 0;\n  position: relative;\n  overflow: hidden;\n}\n\n.chart-section::before {\n  content: '';\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 5px;\n  background: linear-gradient(to right, #4285F4, #34A853, #FBBC05, #EA4335);\n}\n\n.chart-section h6 {\n  color: #2d3748;\n  font-size: 1.2rem;\n  font-weight: 600;\n  margin-bottom: 1.5rem;\n  display: flex;\n  align-items: center;\n}\n\n.chart-section h6::before {\n  content: '\\f080';\n  font-family: 'Font Awesome 5 Free';\n  font-weight: 900;\n  margin-right: 0.75rem;\n  color: #4285F4;\n}\n\n.chart-container {\n  position: relative;\n  width: 100%;\n  height: 400px !important;\n  background: linear-gradient(to bottom, rgba(249, 250, 251, 0.5), rgba(249, 250, 251, 0));\n  border-radius: 8px;\n  padding: 1rem;\n}\n\n.data-table {\n  margin-top: 1.5rem;\n  border-radius: 8px;\n  overflow: hidden;\n  max-height: 300px;\n  overflow-y: auto;\n}\n\n.data-table th {\n  font-size: 1.1rem;\n  font-weight: 600;\n  color: #2d3748;\n  background: #f8fafc;\n  position: sticky;\n  top: 0;\n  z-index: 1;\n  padding: 0.75rem 1rem;\n  border-bottom: 2px solid #e2e8f0;\n}\n\n.data-table td {\n  font-size: 1.1rem;\n  color: #4a5568;\n  padding: 0.75rem 1rem;\n  border-bottom: 1px solid #e2e8f0;\n}\n\n.data-table tr:hover {\n  background-color: #f8f9fa;\n}\n\n.status-badge {\n  padding: 0.3rem 0.75rem;\n  border-radius: 20px;\n  font-size: 0.85rem;\n  font-weight: 500;\n}\n\n.status-badge.present {\n  background-color: rgba(16, 185, 129, 0.2);\n  color: #10b981;\n}\n\n.status-badge.late {\n  background-color: rgba(245, 158, 11, 0.2);\n  color: #f59e0b;\n}\n\n.status-badge.absent {\n  background-color: rgba(239, 68, 68, 0.2);\n  color: #ef4444;\n}\n\n/* Tabs styling */\n.nav-tabs {\n  border-bottom: 1px solid #e2e8f0;\n}\n\n.nav-tabs .nav-item {\n  margin-bottom: -1px;\n}\n\n.nav-tabs .nav-link {\n  border: none;\n  border-bottom: 2px solid transparent;\n  color: #4a5568;\n  padding: 0.75rem 1.25rem;\n  font-weight: 500;\n  margin-right: 0.5rem;\n  transition: all 0.2s ease;\n}\n\n.nav-tabs .nav-link:hover {\n  border-color: #cbd5e1;\n  color: #2d3748;\n}\n\n.nav-tabs .nav-link.active {\n  border-color: #3182ce;\n  color: #3182ce;\n  font-weight: 600;\n}\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}