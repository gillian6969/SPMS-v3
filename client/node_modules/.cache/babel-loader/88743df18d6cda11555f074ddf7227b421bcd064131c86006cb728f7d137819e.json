{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.filter.js\";\nimport \"core-js/modules/es.iterator.for-each.js\";\nimport { ref, computed, onMounted, onUnmounted, watch, nextTick } from 'vue';\nimport { useStore } from 'vuex';\nimport axios from 'axios';\nimport Chart from 'chart.js/auto';\nimport { Dropdown } from 'bootstrap';\nimport { formatDate } from '../utils';\nimport StudentAssessmentChart from '../components/StudentAssessmentChart.vue';\n\n// Create axios instance with correct base URL\nconst api = axios.create({\n  baseURL: 'http://localhost:8081/api',\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\nexport default {\n  name: 'StudentManagement',\n  components: {\n    StudentAssessmentChart\n  },\n  setup() {\n    const store = useStore();\n    const students = ref([]);\n    const searchQuery = ref('');\n    const selectedStudent = ref(null);\n    const performanceChart = ref(null);\n    const sortField = ref('');\n    const sortOrder = ref('asc');\n    const showDeleteModal = ref(false);\n    const studentToDelete = ref(null);\n    const isEditing = ref(false);\n    const editingStudent = ref(null);\n    const showSearch = ref(false);\n    const assessments = ref([]);\n    const selectedYear = ref('');\n    const selectedSection = ref('');\n    const selectedFile = ref(null);\n    const uploadYear = ref('');\n    const isUploading = ref(false);\n    const subjectChart = ref(null);\n    const attendanceChart = ref(null);\n    const historyStartDate = ref('');\n    const historyEndDate = ref('');\n    const showStartDatePicker = ref(false);\n    const showEndDatePicker = ref(false);\n    const showAddStudentModal = ref(false);\n    const showAddSingleStudentModal = ref(false);\n    const availableYears = ['1st', '2nd', '3rd', '4th'];\n    const availableSections = ['South 1', 'South 2', 'South 3'];\n    const newStudent = ref({\n      studentId: '',\n      firstName: '',\n      middleName: '',\n      lastName: '',\n      email: '',\n      contactNumber: '',\n      year: '',\n      section: ''\n    });\n    const isAddingStudent = ref(false);\n\n    // Add pagination state\n    const currentPage = ref(1);\n    const itemsPerPage = 25;\n\n    // Compute total pages\n    const totalPages = computed(() => Math.ceil(sortedStudents.value.length / itemsPerPage));\n\n    // Get paginated students\n    const paginatedStudents = computed(() => {\n      const start = (currentPage.value - 1) * itemsPerPage;\n      const end = start + itemsPerPage;\n      return sortedStudents.value.slice(start, end);\n    });\n\n    // Compute pagination info\n    const paginationInfo = computed(() => {\n      const start = (currentPage.value - 1) * itemsPerPage + 1;\n      const end = Math.min(start + itemsPerPage - 1, sortedStudents.value.length);\n      return {\n        start,\n        end\n      };\n    });\n\n    // Pagination methods\n    const nextPage = () => {\n      if (currentPage.value < totalPages.value) {\n        currentPage.value++;\n      }\n    };\n    const previousPage = () => {\n      if (currentPage.value > 1) {\n        currentPage.value--;\n      }\n    };\n\n    // Reset pagination when filters change\n    watch([searchQuery, selectedYear, selectedSection], () => {\n      currentPage.value = 1;\n    });\n\n    // Initialize data on component mount\n    onMounted(async () => {\n      if (store.getters.isLoggedIn) {\n        await fetchStudents();\n      }\n\n      // Initialize dropdowns after a short delay to ensure DOM is ready\n      nextTick(() => {\n        const dropdownElements = document.querySelectorAll('[data-bs-toggle=\"dropdown\"]');\n        const dropdownInstances = [];\n        dropdownElements.forEach(element => {\n          if (element) {\n            dropdownInstances.push(new Dropdown(element));\n          }\n        });\n\n        // Cleanup dropdowns on unmount\n        onUnmounted(() => {\n          dropdownInstances.forEach(dropdown => {\n            if (dropdown && typeof dropdown.dispose === 'function') {\n              dropdown.dispose();\n            }\n          });\n        });\n      });\n    });\n\n    // Watch for auth state changes\n    watch(() => store.state.auth.token, newToken => {\n      if (newToken) {\n        fetchStudents();\n      }\n    });\n\n    // File upload handlers\n    const handleFileChange = event => {\n      const file = event.target.files[0];\n      if (file && file.type !== 'text/csv') {\n        alert('Please select a CSV file');\n        event.target.value = '';\n        selectedFile.value = null;\n        return;\n      }\n      selectedFile.value = file;\n      console.log('File selected:', file?.name);\n    };\n    const handleFileUpload = async () => {\n      if (!selectedFile.value || !uploadYear.value) {\n        alert('Please select both a year and a CSV file');\n        return;\n      }\n      isUploading.value = true;\n      const formData = new FormData();\n      formData.append('file', selectedFile.value);\n      formData.append('year', uploadYear.value);\n      try {\n        console.log('Starting upload...', {\n          year: uploadYear.value,\n          fileName: selectedFile.value.name\n        });\n        const token = store.state.auth.token;\n        if (!token) {\n          throw new Error('No authentication token found');\n        }\n\n        // Log the form data to verify what's being sent\n        console.log('Form data contents:', {\n          file: selectedFile.value,\n          year: uploadYear.value\n        });\n        const response = await api.post('/students/upload', formData, {\n          headers: {\n            'Authorization': `Bearer ${token}`,\n            'Content-Type': 'multipart/form-data'\n          }\n        });\n        console.log('Upload successful:', response.data);\n        if (response.data.errors && response.data.errors.length > 0) {\n          const errorMessage = response.data.errors.join('\\n');\n          alert(`Upload completed with some errors:\\n${errorMessage}`);\n        } else {\n          const counts = response.data.sectionCounts;\n          alert(`File uploaded successfully!\\n\\nStudent distribution:\\nSouth 1: ${counts['South 1']} students\\nSouth 2: ${counts['South 2']} students\\nSouth 3: ${counts['South 3']} students`);\n        }\n\n        // Reset form\n        selectedFile.value = null;\n        uploadYear.value = '';\n\n        // Refresh student list and close modal\n        await fetchStudents();\n\n        // Debug: Check if emails are included in the fetched students after upload\n        console.log('Students after upload:', students.value);\n        if (students.value.length > 0) {\n          console.log('First student after upload:', students.value[0]);\n          console.log('Email field exists after upload:', 'email' in students.value[0]);\n          console.log('Email value after upload:', students.value[0].email);\n        }\n        showAddStudentModal.value = false;\n      } catch (error) {\n        console.error('Upload failed:', error);\n        alert('Error uploading file: ' + (error.response?.data?.message || error.message));\n      } finally {\n        isUploading.value = false;\n      }\n    };\n\n    // Filter students\n    const filteredStudents = computed(() => {\n      return students.value.filter(student => {\n        const searchLower = searchQuery.value.toLowerCase();\n        const matchesSearch = student.studentId.toLowerCase().includes(searchLower) || student.firstName.toLowerCase().includes(searchLower) || student.lastName.toLowerCase().includes(searchLower);\n\n        // Apply year and section filters\n        const matchesYear = !selectedYear.value || student.year === selectedYear.value;\n        const matchesSection = !selectedSection.value || student.section === selectedSection.value;\n        return matchesSearch && matchesYear && matchesSection;\n      });\n    });\n\n    // Student actions\n    const closeStudentModal = () => {\n      if (performanceChart.value) {\n        const existingChart = Chart.getChart(performanceChart.value);\n        if (existingChart) {\n          existingChart.destroy();\n        }\n      }\n      selectedStudent.value = null;\n    };\n    const confirmDelete = student => {\n      studentToDelete.value = student;\n      showDeleteModal.value = true;\n    };\n    const deleteStudent = async student => {\n      try {\n        const token = store.state.auth.token;\n\n        // Delete the student from students collection using MongoDB _id\n        await api.delete('/students/' + student._id, {\n          headers: {\n            'Authorization': `Bearer ${token}`\n          }\n        });\n\n        // Update local state\n        students.value = students.value.filter(s => s._id !== student._id);\n        selectedStudent.value = null;\n        showDeleteModal.value = false;\n        studentToDelete.value = null;\n        alert('Student deleted successfully');\n      } catch (error) {\n        console.error('Failed to delete student:', error);\n        alert('Failed to delete student. Please try again.');\n      }\n    };\n    const startEditing = student => {\n      editingStudent.value = {\n        ...student\n      };\n      isEditing.value = true;\n    };\n    const cancelEditing = () => {\n      editingStudent.value = null;\n      isEditing.value = false;\n    };\n    const saveStudentChanges = async () => {\n      try {\n        const token = store.state.auth.token;\n\n        // Update student information\n        const studentResponse = await api.put('/students/' + editingStudent.value._id, {\n          studentId: editingStudent.value.studentId,\n          firstName: editingStudent.value.firstName,\n          lastName: editingStudent.value.lastName,\n          email: editingStudent.value.email,\n          year: editingStudent.value.year,\n          section: editingStudent.value.section\n        }, {\n          headers: {\n            'Authorization': `Bearer ${token}`\n          }\n        });\n        if (studentResponse.data) {\n          // Update local state\n          const index = students.value.findIndex(s => s._id === editingStudent.value._id);\n          if (index !== -1) {\n            students.value[index] = {\n              ...editingStudent.value\n            };\n          }\n          selectedStudent.value = null;\n          editingStudent.value = null;\n          isEditing.value = false;\n          alert('Student information updated successfully');\n        } else {\n          throw new Error('Failed to update student information');\n        }\n      } catch (error) {\n        console.error('Failed to update student:', error);\n        alert('Failed to update student information. Please try again.');\n      }\n    };\n    const sortBy = field => {\n      if (sortField.value === field) {\n        sortOrder.value = sortOrder.value === 'asc' ? 'desc' : 'asc';\n      } else {\n        sortField.value = field;\n        sortOrder.value = 'asc';\n      }\n    };\n    const getSortIcon = field => {\n      if (sortField.value !== field) return 'fas fa-sort';\n      return sortOrder.value === 'asc' ? 'fas fa-sort-up' : 'fas fa-sort-down';\n    };\n    const sortedStudents = computed(() => {\n      let students = filteredStudents.value;\n      if (sortField.value) {\n        students = [...students].sort((a, b) => {\n          let aVal = a[sortField.value];\n          let bVal = b[sortField.value];\n\n          // Handle case-insensitive string comparison\n          if (typeof aVal === 'string') aVal = aVal.toLowerCase();\n          if (typeof bVal === 'string') bVal = bVal.toLowerCase();\n          if (aVal < bVal) return sortOrder.value === 'asc' ? -1 : 1;\n          if (aVal > bVal) return sortOrder.value === 'asc' ? 1 : -1;\n          return 0;\n        });\n      }\n      return students;\n    });\n    const toggleSearch = () => {\n      showSearch.value = !showSearch.value;\n      if (!showSearch.value) {\n        searchQuery.value = '';\n      }\n    };\n    const handleSearch = () => {\n      // Implement any additional search logic here if needed\n      console.log('Searching for:', searchQuery.value);\n    };\n    const clearSearch = () => {\n      searchQuery.value = '';\n      handleSearch();\n    };\n\n    // Add getAcademicYearRange function\n    const getAcademicYearRange = year => {\n      const currentYear = new Date().getFullYear();\n      let yearNumber = 0;\n      switch (year) {\n        case '1st':\n          yearNumber = 1;\n          break;\n        case '2nd':\n          yearNumber = 2;\n          break;\n        case '3rd':\n          yearNumber = 3;\n          break;\n        case '4th':\n          yearNumber = 4;\n          break;\n        default:\n          return 'N/A';\n      }\n      const startYear = currentYear - yearNumber + 1;\n      return `${startYear} - ${startYear + 1}`;\n    };\n\n    // Add hasActiveFilters computed property\n    const hasActiveFilters = computed(() => {\n      return selectedYear.value || selectedSection.value;\n    });\n\n    // Add viewStudent function\n    const viewStudent = async student => {\n      selectedStudent.value = student;\n\n      // Fetch student's attendance\n      const response = await api.get(`/attendance/${student._id}/history`, {\n        params: {\n          all: true,\n          subject: '',\n          startDate: '',\n          endDate: ''\n        },\n        headers: {\n          'Authorization': `Bearer ${store.state.auth.token}`\n        }\n      });\n      selectedStudent.value = {\n        ...selectedStudent.value,\n        attendanceHistory: response.data\n      };\n\n      // Initialize charts if needed\n      if (performanceChart.value) {\n        const ctx = performanceChart.value.getContext('2d');\n        // Add your chart initialization logic here\n      }\n    };\n\n    // Add clearFilters function\n    const clearFilters = () => {\n      selectedYear.value = '';\n      selectedSection.value = '';\n      searchQuery.value = '';\n    };\n    const applyFilters = () => {\n      fetchStudents();\n    };\n\n    // Function to handle adding a single student\n    const handleAddSingleStudent = async () => {\n      try {\n        isAddingStudent.value = true;\n\n        // Validate required fields\n        const requiredFields = ['studentId', 'firstName', 'middleName', 'lastName', 'email', 'contactNumber', 'year', 'section'];\n        for (const field of requiredFields) {\n          if (!newStudent.value[field]) {\n            throw new Error(`${field.charAt(0).toUpperCase() + field.slice(1)} is required`);\n          }\n        }\n\n        // Validate email format\n        const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n        if (!emailRegex.test(newStudent.value.email)) {\n          throw new Error('Please enter a valid email address');\n        }\n        const token = store.state.auth.token;\n        if (!token) {\n          throw new Error('No authentication token found');\n        }\n\n        // Send request to add student\n        const response = await api.post('/students', {\n          ...newStudent.value,\n          // Calculate academic years based on current year and student's year level\n          academicYears: calculateAcademicYears(newStudent.value.year)\n        }, {\n          headers: {\n            'Authorization': `Bearer ${token}`\n          }\n        });\n        console.log('Student added successfully:', response.data);\n\n        // Reset form and close modal\n        resetNewStudentForm();\n        showAddSingleStudentModal.value = false;\n\n        // Refresh student list\n        await fetchStudents();\n        alert('Student added successfully');\n      } catch (error) {\n        console.error('Failed to add student:', error);\n        alert('Error adding student: ' + (error.response?.data?.message || error.message));\n      } finally {\n        isAddingStudent.value = false;\n      }\n    };\n\n    // Helper function to reset the new student form\n    const resetNewStudentForm = () => {\n      newStudent.value = {\n        studentId: '',\n        firstName: '',\n        middleName: '',\n        lastName: '',\n        email: '',\n        contactNumber: '',\n        year: '',\n        section: ''\n      };\n    };\n\n    // Helper function to calculate academic years\n    const calculateAcademicYears = year => {\n      const currentYear = new Date().getFullYear();\n      let startYear, endYear;\n      switch (year) {\n        case '1st':\n          startYear = currentYear;\n          endYear = currentYear + 4;\n          break;\n        case '2nd':\n          startYear = currentYear - 1;\n          endYear = currentYear + 3;\n          break;\n        case '3rd':\n          startYear = currentYear - 2;\n          endYear = currentYear + 2;\n          break;\n        case '4th':\n          startYear = currentYear - 3;\n          endYear = currentYear + 1;\n          break;\n        default:\n          startYear = currentYear;\n          endYear = currentYear + 4;\n      }\n      return {\n        startYear,\n        endYear\n      };\n    };\n\n    // Add fetchStudents function that was accidentally removed\n    const fetchStudents = async () => {\n      try {\n        const token = store.state.auth.token;\n        const response = await api.get('/students', {\n          headers: {\n            'Authorization': `Bearer ${token}`\n          }\n        });\n        students.value = response.data;\n        const response1 = await api.get('/students/assessments/all', {\n          headers: {\n            'Authorization': `Bearer ${token}`\n          }\n        });\n        assessments.value = response1.data?.assessments;\n      } catch (error) {\n        console.error('Failed to fetch students:', error);\n        alert('Failed to fetch students. Please try again.');\n      }\n    };\n    return {\n      students,\n      searchQuery,\n      selectedStudent,\n      performanceChart,\n      sortField,\n      sortOrder,\n      showDeleteModal,\n      studentToDelete,\n      isEditing,\n      editingStudent,\n      showSearch,\n      showAddStudentModal,\n      showAddSingleStudentModal,\n      selectedFile,\n      uploadYear,\n      isUploading,\n      availableYears,\n      availableSections,\n      newStudent,\n      isAddingStudent,\n      handleFileChange,\n      handleFileUpload,\n      handleAddSingleStudent,\n      resetNewStudentForm,\n      filteredStudents,\n      closeStudentModal,\n      confirmDelete,\n      deleteStudent,\n      startEditing,\n      cancelEditing,\n      saveStudentChanges,\n      sortBy,\n      getSortIcon,\n      sortedStudents,\n      toggleSearch,\n      handleSearch,\n      clearSearch,\n      fetchStudents,\n      hasActiveFilters,\n      selectedYear,\n      selectedSection,\n      viewStudent,\n      getAcademicYearRange,\n      clearFilters,\n      applyFilters,\n      currentPage,\n      totalPages,\n      paginatedStudents,\n      paginationInfo,\n      nextPage,\n      previousPage,\n      formatDate,\n      assessments\n    };\n  }\n};","map":{"version":3,"names":["ref","computed","onMounted","onUnmounted","watch","nextTick","useStore","axios","Chart","Dropdown","formatDate","StudentAssessmentChart","api","create","baseURL","headers","name","components","setup","store","students","searchQuery","selectedStudent","performanceChart","sortField","sortOrder","showDeleteModal","studentToDelete","isEditing","editingStudent","showSearch","assessments","selectedYear","selectedSection","selectedFile","uploadYear","isUploading","subjectChart","attendanceChart","historyStartDate","historyEndDate","showStartDatePicker","showEndDatePicker","showAddStudentModal","showAddSingleStudentModal","availableYears","availableSections","newStudent","studentId","firstName","middleName","lastName","email","contactNumber","year","section","isAddingStudent","currentPage","itemsPerPage","totalPages","Math","ceil","sortedStudents","value","length","paginatedStudents","start","end","slice","paginationInfo","min","nextPage","previousPage","getters","isLoggedIn","fetchStudents","dropdownElements","document","querySelectorAll","dropdownInstances","forEach","element","push","dropdown","dispose","state","auth","token","newToken","handleFileChange","event","file","target","files","type","alert","console","log","handleFileUpload","formData","FormData","append","fileName","Error","response","post","data","errors","errorMessage","join","counts","sectionCounts","error","message","filteredStudents","filter","student","searchLower","toLowerCase","matchesSearch","includes","matchesYear","matchesSection","closeStudentModal","existingChart","getChart","destroy","confirmDelete","deleteStudent","delete","_id","s","startEditing","cancelEditing","saveStudentChanges","studentResponse","put","index","findIndex","sortBy","field","getSortIcon","sort","a","b","aVal","bVal","toggleSearch","handleSearch","clearSearch","getAcademicYearRange","currentYear","Date","getFullYear","yearNumber","startYear","hasActiveFilters","viewStudent","get","params","all","subject","startDate","endDate","attendanceHistory","ctx","getContext","clearFilters","applyFilters","handleAddSingleStudent","requiredFields","charAt","toUpperCase","emailRegex","test","academicYears","calculateAcademicYears","resetNewStudentForm","endYear","response1"],"sources":["D:\\au_dev\\client\\src\\views\\StudentManagement.vue"],"sourcesContent":["<template>\r\n  <div class=\"student-management\">\r\n    <div class=\"sticky-controls\">\r\n      <div class=\"d-flex gap-2 mb-3\">\r\n        <button \r\n          class=\"btn btn-primary\" \r\n          @click=\"showAddStudentModal = true\"\r\n        >\r\n          <i class=\"fas fa-plus me-1\"></i> Add Student List\r\n        </button>\r\n        <button \r\n          class=\"btn btn-success\" \r\n          @click=\"showAddSingleStudentModal = true\"\r\n        >\r\n          <i class=\"fas fa-user-plus me-1\"></i> Add Single Student\r\n        </button>\r\n      </div>\r\n    \r\n        <!-- Table Controls -->\r\n        <div class=\"table-controls mb-3\">\r\n        <div class=\"d-flex justify-content-between align-items-center\">\r\n          <div class=\"d-flex align-items-center gap-3\">\r\n            <!-- Sort Dropdown -->\r\n            <div class=\"dropdown\">\r\n              <button \r\n                class=\"btn btn-control\" \r\n                type=\"button\" \r\n                id=\"sortDropdown\" \r\n                data-bs-toggle=\"dropdown\" \r\n                aria-expanded=\"false\"\r\n              >\r\n                <i class=\"fas fa-sort me-2\"></i> Sort by\r\n              </button>\r\n              <ul class=\"dropdown-menu shadow-lg\" aria-labelledby=\"sortDropdown\">\r\n                <li>\r\n                  <a class=\"dropdown-item d-flex align-items-center gap-2\" href=\"#\" @click.prevent=\"sortBy('studentId')\">\r\n                    <i class=\"fas fa-sort-numeric-down\"></i>\r\n                    <span>ID Number</span>\r\n                    <i :class=\"getSortIcon('studentId')\" class=\"ms-auto\"></i>\r\n                  </a>\r\n                </li>\r\n                <li>\r\n                  <a class=\"dropdown-item d-flex align-items-center gap-2\" href=\"#\" @click.prevent=\"sortBy('lastName')\">\r\n                    <i class=\"fas fa-sort-alpha-down\"></i>\r\n                    <span>Name</span>\r\n                    <i :class=\"getSortIcon('lastName')\" class=\"ms-auto\"></i>\r\n                  </a>\r\n                </li>\r\n              </ul>\r\n            </div>\r\n\r\n            <!-- Filter Dropdown -->\r\n            <div class=\"dropdown\">\r\n              <button \r\n                class=\"btn btn-control\" \r\n                type=\"button\" \r\n                id=\"filterDropdown\" \r\n                data-bs-toggle=\"dropdown\" \r\n                aria-expanded=\"false\"\r\n              >\r\n                <i class=\"fas fa-filter me-2\"></i> \r\n                {{ hasActiveFilters ? `${selectedYear || 'All Years'} - ${selectedSection || 'All Sections'}` : 'Filter Students' }}\r\n                <span v-if=\"hasActiveFilters\" class=\"filter-badge\">!</span>\r\n              </button>\r\n              <div class=\"dropdown-menu shadow-lg p-3\" aria-labelledby=\"filterDropdown\">\r\n                <div class=\"d-flex justify-content-between align-items-center mb-2\">\r\n                  <h6 class=\"dropdown-header px-0 mb-0\">Filter Options</h6>\r\n                    <button \r\n                    v-if=\"hasActiveFilters\"\r\n                    class=\"btn btn-sm btn-outline-secondary\"\r\n                    @click=\"clearFilters\"\r\n                    >\r\n                    Clear Filters\r\n                    </button>\r\n                  </div>\r\n                \r\n                <!-- Year Filter -->\r\n                <div class=\"mb-3\">\r\n                  <label class=\"form-label\">Year Level</label>\r\n                  <select class=\"form-select mb-2\" v-model=\"selectedYear\" @change=\"applyFilters\">\r\n                    <option value=\"\">All Years</option>\r\n                    <option value=\"1st\">1st Year</option>\r\n                    <option value=\"2nd\">2nd Year</option>\r\n                    <option value=\"3rd\">3rd Year</option>\r\n                    <option value=\"4th\">4th Year</option>\r\n                  </select>\r\n                </div>\r\n                \r\n                <!-- Section Filter -->\r\n                <div class=\"mb-3\">\r\n                  <label class=\"form-label\">Section</label>\r\n                  <select class=\"form-select\" v-model=\"selectedSection\" @change=\"applyFilters\">\r\n                    <option value=\"\">All Sections</option>\r\n                    <option value=\"South 1\">South 1</option>\r\n                    <option value=\"South 2\">South 2</option>\r\n                    <option value=\"South 3\">South 3</option>\r\n                  </select>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <!-- Search Control -->\r\n          <div class=\"search-control\">\r\n            <div class=\"input-group\">\r\n              <span class=\"input-group-text border-end-0\">\r\n                <i class=\"fas fa-search\"></i>\r\n              </span>\r\n                <input \r\n                  type=\"text\" \r\n                class=\"form-control border-start-0\" \r\n                  v-model=\"searchQuery\"\r\n                placeholder=\"Search students...\"\r\n                @input=\"handleSearch\"\r\n              >\r\n              <button \r\n                v-if=\"searchQuery\"\r\n                class=\"btn btn-outline-secondary border-start-0\" \r\n                type=\"button\"\r\n                @click=\"clearSearch\"\r\n              >\r\n                <i class=\"fas fa-times\"></i>\r\n              </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n        </div>\r\n\r\n        <div class=\"table-responsive\">\r\n          <table class=\"table table-hover\">\r\n            <thead>\r\n              <tr>\r\n                <th>Student ID</th>\r\n                <th>Last Name</th>\r\n                <th>First Name</th>\r\n                <th>Email</th>\r\n                <th>Year</th>\r\n                <th>Section</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n          <template v-if=\"paginatedStudents.length > 0\">\r\n                <tr \r\n              v-for=\"student in paginatedStudents\" \r\n                  :key=\"student.studentId\"\r\n                  @click=\"viewStudent(student)\"\r\n                  class=\"clickable-row\"\r\n                >\r\n                  <td>{{ student.studentId }}</td>\r\n                  <td>{{ student.lastName }}</td>\r\n                  <td>{{ student.firstName }}</td>\r\n                  <td>{{ student.email }}</td>\r\n                  <td>{{ student.year }}</td>\r\n                  <td>{{ student.section }}</td>\r\n                </tr>\r\n              </template>\r\n              <tr v-else>\r\n                <td colspan=\"6\" class=\"text-center py-4\">\r\n                  <div class=\"empty-state-message\">\r\n                    <i class=\"fas fa-users text-muted mb-2\"></i>\r\n                    <p class=\"mb-0\">No students found</p>\r\n                    <p class=\"text-muted small\" v-if=\"hasActiveFilters\">\r\n                      Try adjusting your filters\r\n                    </p>\r\n                  </div>\r\n                </td>\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n    </div>\r\n\r\n    <!-- Pagination Controls -->\r\n    <div class=\"pagination-controls mt-3 d-flex justify-content-between align-items-center\">\r\n      <div class=\"pagination-info\">\r\n        Showing {{ paginationInfo.start }} to {{ paginationInfo.end }} of {{ sortedStudents.length }} entries\r\n      </div>\r\n      <div class=\"pagination-buttons\">\r\n        <button \r\n          class=\"btn btn-outline-primary me-2\" \r\n          @click=\"previousPage\" \r\n          :disabled=\"currentPage === 1\"\r\n        >\r\n          <i class=\"fas fa-chevron-left me-1\"></i> Previous\r\n        </button>\r\n        <button \r\n          class=\"btn btn-outline-primary\" \r\n          @click=\"nextPage\" \r\n          :disabled=\"currentPage >= totalPages\"\r\n        >\r\n          Next <i class=\"fas fa-chevron-right ms-1\"></i>\r\n        </button>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Add Student Modal -->\r\n    <div v-if=\"showAddStudentModal\" class=\"add-student-modal\">\r\n      <div class=\"add-student-backdrop\" @click=\"showAddStudentModal = false\"></div>\r\n      <div class=\"add-student-dialog\">\r\n        <div class=\"add-student-content\">\r\n          <div class=\"modal-header bg-primary text-white\">\r\n            <h5 class=\"modal-title\">Add Student List</h5>\r\n            <button type=\"button\" class=\"btn-close btn-close-white\" @click=\"showAddStudentModal = false\"></button>\r\n          </div>\r\n          <div class=\"modal-body\">\r\n            <form @submit.prevent=\"handleFileUpload\">\r\n              <!-- Year Selection -->\r\n              <div class=\"mb-3\">\r\n                <label class=\"form-label\">Year Level</label>\r\n                <select class=\"form-select\" v-model=\"uploadYear\" required>\r\n                  <option value=\"\">Select Year</option>\r\n                  <option v-for=\"year in availableYears\" :key=\"year\" :value=\"year\">{{ year }}</option>\r\n                </select>\r\n                <small class=\"text-muted d-block mt-1\">\r\n                  Note: Sections will be automatically assigned based on the number of students (50 students per section).\r\n                </small>\r\n              </div>\r\n\r\n              <!-- File Upload -->\r\n              <div class=\"mb-3\">\r\n                <label class=\"form-label\">CSV File</label>\r\n                <input \r\n                  type=\"file\" \r\n                  class=\"form-control\" \r\n                  accept=\".csv\"\r\n                  @change=\"handleFileChange\"\r\n                  required\r\n                >\r\n                <small class=\"text-muted d-block mt-1\">\r\n                  <strong>Required fields:</strong> StudentID, LastName, FirstName, MiddleName, ContactNumber, Email\r\n                </small>\r\n                <small class=\"text-muted d-block mt-1\">\r\n                  <strong>Important:</strong> Make sure the CSV file has an \"Email\" column with valid email addresses.\r\n                </small>\r\n                <small class=\"text-muted d-block mt-1\">\r\n                  File must be in CSV format with headers matching the required fields exactly.\r\n                </small>\r\n              </div>\r\n\r\n              <div class=\"text-end\">\r\n                <button type=\"button\" class=\"btn btn-secondary me-2\" @click=\"showAddStudentModal = false\">\r\n                  Cancel\r\n                </button>\r\n                <button type=\"submit\" class=\"btn btn-primary\" :disabled=\"isUploading || !selectedFile\">\r\n                  {{ isUploading ? 'Uploading...' : 'Upload' }}\r\n                </button>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Student Details Modal -->\r\n    <div v-if=\"selectedStudent\" class=\"modal-wrapper\" @click.self=\"closeStudentModal\">\r\n      <div class=\"modal-backdrop\" @click=\"closeStudentModal\"></div>\r\n      <div class=\"modal-dialog modal-xxl\">\r\n        <div class=\"modal-content\">\r\n          <div class=\"modal-header bg-primary text-white\">\r\n            <h5 class=\"modal-title\">\r\n              <i class=\"fas fa-user-graduate me-2\"></i>\r\n              Student Details\r\n            </h5>\r\n            <button type=\"button\" class=\"btn-close btn-close-white\" @click=\"closeStudentModal\"></button>\r\n          </div>\r\n          <div class=\"modal-body\">\r\n            <div class=\"student-details\">\r\n              <!-- Student Information (Left Side) -->\r\n              <div class=\"student-info\">\r\n                <h6 class=\"info-title\">Student Information</h6>\r\n                <div class=\"info-content\">\r\n                  <p><strong>Name:</strong> {{ selectedStudent.firstName }} {{ selectedStudent.lastName }}</p>\r\n                  <p><strong>ID:</strong> {{ selectedStudent.studentId }}</p>\r\n                  <p><strong>Year Level:</strong> {{ selectedStudent.year }}</p>\r\n                  <p><strong>Academic Year:</strong> {{ getAcademicYearRange(selectedStudent.year) }}</p>\r\n                  <p><strong>Section:</strong> {{ selectedStudent.section }}</p>\r\n                  <p><strong>Email:</strong> {{ selectedStudent.email }}</p>\r\n                </div>\r\n              </div>\r\n\r\n              <!-- Performance and Attendance (Right Side) -->\r\n              <div class=\"student-charts\">\r\n                <div class=\"chart-section\">\r\n                  <h6>Performance Trends</h6>\r\n                  <StudentAssessmentChart :studentId=\"selectedStudent.studentId\" :assessments=\"assessments\"/>\r\n                  <canvas ref=\"performanceChart\"></canvas>\r\n                  </div>\r\n                <div class=\"chart-section\">\r\n                  <h6>Attendance History</h6>\r\n                  <div class=\"table-responsive attendance-table\">\r\n                    <table class=\"table\">\r\n                        <thead>\r\n                          <tr>\r\n                            <th>Date</th>\r\n                            <th>Subject</th>\r\n                          <th>Status</th>\r\n                          </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                        <tr v-for=\"record in selectedStudent.attendanceHistory?.records\" :key=\"record._id\">\r\n                          <td>{{ formatDate (record.date) }}</td>\r\n                          <td>{{ record.subject }}</td>\r\n                          <td>\r\n                            <span \r\n                              class=\"badge capitalize\"\r\n                              :class=\"{\r\n                                'bg-success': record.status === 'present',\r\n                                'bg-danger': record.status === 'absent',\r\n                                'bg-warning': record.status === 'late'\r\n                              }\"\r\n                            >\r\n                              {{ record.status}}\r\n                              </span>\r\n                            </td>\r\n                          </tr>\r\n                        </tbody>\r\n                      </table>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Edit Student Modal -->\r\n    <div v-if=\"isEditing\" class=\"modal-wrapper\">\r\n      <div class=\"modal-backdrop\" @click=\"cancelEditing\"></div>\r\n      <div class=\"modal-dialog\">\r\n        <div class=\"modal-content\">\r\n          <div class=\"modal-header\">\r\n            <h5 class=\"modal-title\">Edit Student</h5>\r\n            <button type=\"button\" class=\"btn-close\" @click=\"cancelEditing\"></button>\r\n          </div>\r\n          <div class=\"modal-body\">\r\n            <form @submit.prevent=\"saveStudentChanges\">\r\n              <div class=\"mb-3\">\r\n                <label class=\"form-label\">Student ID</label>\r\n                <input \r\n                  type=\"text\" \r\n                  class=\"form-control\" \r\n                  v-model=\"editingStudent.studentId\"\r\n                >\r\n              </div>\r\n              <div class=\"mb-3\">\r\n                <label class=\"form-label\">First Name</label>\r\n                <input \r\n                  type=\"text\" \r\n                  class=\"form-control\" \r\n                  v-model=\"editingStudent.firstName\"\r\n                >\r\n              </div>\r\n              <div class=\"mb-3\">\r\n                <label class=\"form-label\">Last Name</label>\r\n                <input \r\n                  type=\"text\" \r\n                  class=\"form-control\" \r\n                  v-model=\"editingStudent.lastName\"\r\n                >\r\n              </div>\r\n              <div class=\"mb-3\">\r\n                <label class=\"form-label\">Email</label>\r\n                <input \r\n                  type=\"email\" \r\n                  class=\"form-control\" \r\n                  v-model=\"editingStudent.email\"\r\n                >\r\n              </div>\r\n              <div class=\"mb-3\">\r\n                <label class=\"form-label\">Year</label>\r\n                <select class=\"form-select\" v-model=\"editingStudent.year\">\r\n                  <option v-for=\"year in availableYears\" :value=\"year\">{{ year }}</option>\r\n                </select>\r\n              </div>\r\n              <div class=\"mb-3\">\r\n                <label class=\"form-label\">Section</label>\r\n                <select class=\"form-select\" v-model=\"editingStudent.section\">\r\n                  <option v-for=\"section in availableSections\" :value=\"section\">{{ section }}</option>\r\n                </select>\r\n              </div>\r\n              <div class=\"d-flex justify-content-end gap-2\">\r\n                <button type=\"button\" class=\"btn btn-secondary\" @click=\"cancelEditing\">\r\n                  Cancel\r\n                </button>\r\n                <button type=\"submit\" class=\"btn btn-primary\">\r\n                  Save Changes\r\n                </button>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Delete Confirmation Modal -->\r\n    <div v-if=\"showDeleteModal\" class=\"modal-wrapper\">\r\n      <div class=\"modal-backdrop\" @click=\"showDeleteModal = false\"></div>\r\n      <div class=\"modal-dialog\">\r\n        <div class=\"modal-content\">\r\n          <div class=\"modal-header\">\r\n            <h5 class=\"modal-title\">Confirm Delete</h5>\r\n            <button type=\"button\" class=\"btn-close\" @click=\"showDeleteModal = false\"></button>\r\n          </div>\r\n          <div class=\"modal-body\">\r\n            <p>Are you sure you want to delete this student?</p>\r\n            <p class=\"text-danger\">\r\n              <strong>{{ studentToDelete?.firstName }} {{ studentToDelete?.lastName }}</strong>\r\n            </p>\r\n            <p class=\"text-muted small\">This action cannot be undone.</p>\r\n          </div>\r\n          <div class=\"modal-footer\">\r\n            <button \r\n              type=\"button\" \r\n              class=\"btn btn-secondary\" \r\n              @click=\"showDeleteModal = false\"\r\n            >\r\n              Cancel\r\n            </button>\r\n            <button \r\n              type=\"button\" \r\n              class=\"btn btn-danger\" \r\n              @click=\"deleteStudent(studentToDelete)\"\r\n            >\r\n              Delete\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Add Single Student Modal -->\r\n    <div v-if=\"showAddSingleStudentModal\" class=\"modal-wrapper\">\r\n      <div class=\"modal-backdrop\" @click=\"showAddSingleStudentModal = false\"></div>\r\n      <div class=\"modal-dialog\">\r\n        <div class=\"modal-content\">\r\n          <div class=\"modal-header bg-success text-white\">\r\n            <h5 class=\"modal-title\">\r\n              <i class=\"fas fa-user-plus me-2\"></i>\r\n              Add Single Student\r\n            </h5>\r\n            <button type=\"button\" class=\"btn-close btn-close-white\" @click=\"showAddSingleStudentModal = false\"></button>\r\n          </div>\r\n          <div class=\"modal-body\">\r\n            <form @submit.prevent=\"handleAddSingleStudent\">\r\n              <div class=\"form-grid\">\r\n                <div class=\"form-group mb-3\">\r\n                  <label class=\"form-label\">Student ID <span class=\"text-danger\">*</span></label>\r\n                  <div class=\"input-group\">\r\n                    <span class=\"input-group-text\"><i class=\"fas fa-id-card\"></i></span>\r\n                    <input \r\n                      type=\"text\" \r\n                      class=\"form-control\" \r\n                      v-model=\"newStudent.studentId\"\r\n                      placeholder=\"Enter student ID\"\r\n                      required\r\n                    >\r\n                  </div>\r\n                </div>\r\n                \r\n                <div class=\"form-group mb-3\">\r\n                  <label class=\"form-label\">First Name <span class=\"text-danger\">*</span></label>\r\n                  <div class=\"input-group\">\r\n                    <span class=\"input-group-text\"><i class=\"fas fa-user\"></i></span>\r\n                    <input \r\n                      type=\"text\" \r\n                      class=\"form-control\" \r\n                      v-model=\"newStudent.firstName\"\r\n                      placeholder=\"Enter first name\"\r\n                      required\r\n                    >\r\n                  </div>\r\n                </div>\r\n                \r\n                <div class=\"form-group mb-3\">\r\n                  <label class=\"form-label\">Middle Name</label>\r\n                  <div class=\"input-group\">\r\n                    <span class=\"input-group-text\"><i class=\"fas fa-user\"></i></span>\r\n                    <input \r\n                      type=\"text\" \r\n                      class=\"form-control\" \r\n                      v-model=\"newStudent.middleName\"\r\n                      placeholder=\"Enter middle name\"\r\n                    >\r\n                  </div>\r\n                </div>\r\n                \r\n                <div class=\"form-group mb-3\">\r\n                  <label class=\"form-label\">Last Name <span class=\"text-danger\">*</span></label>\r\n                  <div class=\"input-group\">\r\n                    <span class=\"input-group-text\"><i class=\"fas fa-user\"></i></span>\r\n                    <input \r\n                      type=\"text\" \r\n                      class=\"form-control\" \r\n                      v-model=\"newStudent.lastName\"\r\n                      placeholder=\"Enter last name\"\r\n                      required\r\n                    >\r\n                  </div>\r\n                </div>\r\n                \r\n                <div class=\"form-group mb-3\">\r\n                  <label class=\"form-label\">Email <span class=\"text-danger\">*</span></label>\r\n                  <div class=\"input-group\">\r\n                    <span class=\"input-group-text\"><i class=\"fas fa-envelope\"></i></span>\r\n                    <input \r\n                      type=\"email\" \r\n                      class=\"form-control\" \r\n                      v-model=\"newStudent.email\"\r\n                      placeholder=\"Enter email address\"\r\n                      required\r\n                    >\r\n                  </div>\r\n                </div>\r\n                \r\n                <div class=\"form-group mb-3\">\r\n                  <label class=\"form-label\">Contact Number <span class=\"text-danger\">*</span></label>\r\n                  <div class=\"input-group\">\r\n                    <span class=\"input-group-text\"><i class=\"fas fa-phone\"></i></span>\r\n                    <input \r\n                      type=\"text\" \r\n                      class=\"form-control\" \r\n                      v-model=\"newStudent.contactNumber\"\r\n                      placeholder=\"Enter contact number\"\r\n                      required\r\n                    >\r\n                  </div>\r\n                </div>\r\n                \r\n                <div class=\"form-group mb-3\">\r\n                  <label class=\"form-label\">Year <span class=\"text-danger\">*</span></label>\r\n                  <div class=\"input-group\">\r\n                    <span class=\"input-group-text\"><i class=\"fas fa-graduation-cap\"></i></span>\r\n                    <select class=\"form-select\" v-model=\"newStudent.year\" required>\r\n                      <option value=\"\">Select Year</option>\r\n                      <option v-for=\"year in availableYears\" :key=\"year\" :value=\"year\">{{ year }}</option>\r\n                    </select>\r\n                  </div>\r\n                </div>\r\n                \r\n                <div class=\"form-group mb-3\">\r\n                  <label class=\"form-label\">Section <span class=\"text-danger\">*</span></label>\r\n                  <div class=\"input-group\">\r\n                    <span class=\"input-group-text\"><i class=\"fas fa-users\"></i></span>\r\n                    <select class=\"form-select\" v-model=\"newStudent.section\" required>\r\n                      <option value=\"\">Select Section</option>\r\n                      <option v-for=\"section in availableSections\" :key=\"section\" :value=\"section\">{{ section }}</option>\r\n                    </select>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              \r\n              <div class=\"form-footer mt-4 d-flex justify-content-end gap-2\">\r\n                <button type=\"button\" class=\"btn btn-secondary\" @click=\"showAddSingleStudentModal = false\">\r\n                  <i class=\"fas fa-times me-1\"></i> Cancel\r\n                </button>\r\n                <button type=\"submit\" class=\"btn btn-success\" :disabled=\"isAddingStudent\">\r\n                  <i class=\"fas fa-user-plus me-1\"></i> {{ isAddingStudent ? 'Adding...' : 'Add Student' }}\r\n                </button>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { ref, computed, onMounted, onUnmounted, watch, nextTick } from 'vue'\r\nimport { useStore } from 'vuex'\r\nimport axios from 'axios'\r\nimport Chart from 'chart.js/auto'\r\nimport { Dropdown } from 'bootstrap'\r\nimport { formatDate } from '../utils'\r\nimport StudentAssessmentChart from '../components/StudentAssessmentChart.vue'\r\n\r\n// Create axios instance with correct base URL\r\nconst api = axios.create({\r\n  baseURL: 'http://localhost:8081/api',\r\n  headers: {\r\n    'Content-Type': 'application/json'\r\n  }\r\n});\r\n\r\nexport default {\r\n  name: 'StudentManagement',\r\n  components : {\r\n    StudentAssessmentChart\r\n  },\r\n  setup() {\r\n    const store = useStore()\r\n    const students = ref([])\r\n    const searchQuery = ref('')\r\n    const selectedStudent = ref(null)\r\n    const performanceChart = ref(null)\r\n    const sortField = ref('')\r\n    const sortOrder = ref('asc')\r\n    const showDeleteModal = ref(false)\r\n    const studentToDelete = ref(null)\r\n    const isEditing = ref(false)\r\n    const editingStudent = ref(null)\r\n    const showSearch = ref(false)\r\n    const assessments = ref([])\r\nconst selectedYear = ref('')\r\nconst selectedSection = ref('')\r\nconst selectedFile = ref(null)\r\nconst uploadYear = ref('')\r\nconst isUploading = ref(false)\r\nconst subjectChart = ref(null)\r\nconst attendanceChart = ref(null)\r\nconst historyStartDate = ref('')\r\nconst historyEndDate = ref('')\r\nconst showStartDatePicker = ref(false)\r\nconst showEndDatePicker = ref(false)\r\nconst showAddStudentModal = ref(false)\r\nconst showAddSingleStudentModal = ref(false)\r\nconst availableYears = ['1st', '2nd', '3rd', '4th']\r\nconst availableSections = ['South 1', 'South 2', 'South 3']\r\nconst newStudent = ref({\r\n  studentId: '',\r\n  firstName: '',\r\n  middleName: '',\r\n  lastName: '',\r\n  email: '',\r\n  contactNumber: '',\r\n  year: '',\r\n  section: ''\r\n})\r\nconst isAddingStudent = ref(false)\r\n\r\n// Add pagination state\r\nconst currentPage = ref(1)\r\nconst itemsPerPage = 25\r\n\r\n// Compute total pages\r\nconst totalPages = computed(() => Math.ceil(sortedStudents.value.length / itemsPerPage))\r\n\r\n// Get paginated students\r\nconst paginatedStudents = computed(() => {\r\n  const start = (currentPage.value - 1) * itemsPerPage\r\n  const end = start + itemsPerPage\r\n  return sortedStudents.value.slice(start, end)\r\n})\r\n\r\n// Compute pagination info\r\nconst paginationInfo = computed(() => {\r\n  const start = (currentPage.value - 1) * itemsPerPage + 1\r\n  const end = Math.min(start + itemsPerPage - 1, sortedStudents.value.length)\r\n  return { start, end }\r\n})\r\n\r\n// Pagination methods\r\nconst nextPage = () => {\r\n  if (currentPage.value < totalPages.value) {\r\n    currentPage.value++\r\n  }\r\n}\r\n\r\nconst previousPage = () => {\r\n  if (currentPage.value > 1) {\r\n    currentPage.value--\r\n  }\r\n}\r\n\r\n// Reset pagination when filters change\r\nwatch([searchQuery, selectedYear, selectedSection], () => {\r\n  currentPage.value = 1\r\n})\r\n\r\n    // Initialize data on component mount\r\n    onMounted(async () => {\r\n      if (store.getters.isLoggedIn) {\r\n    await fetchStudents();\r\n      }\r\n      \r\n  // Initialize dropdowns after a short delay to ensure DOM is ready\r\n  nextTick(() => {\r\n      const dropdownElements = document.querySelectorAll('[data-bs-toggle=\"dropdown\"]')\r\n    const dropdownInstances = []\r\n    \r\n      dropdownElements.forEach(element => {\r\n      if (element) {\r\n        dropdownInstances.push(new Dropdown(element))\r\n      }\r\n    })\r\n\r\n    // Cleanup dropdowns on unmount\r\n    onUnmounted(() => {\r\n      dropdownInstances.forEach(dropdown => {\r\n        if (dropdown && typeof dropdown.dispose === 'function') {\r\n          dropdown.dispose()\r\n        }\r\n      })\r\n    })\r\n  })\r\n})\r\n\r\n    // Watch for auth state changes\r\n    watch(() => store.state.auth.token, (newToken) => {\r\n      if (newToken) {\r\n        fetchStudents();\r\n      }\r\n    });\r\n\r\n    // File upload handlers\r\n    const handleFileChange = (event) => {\r\n      const file = event.target.files[0]\r\n      if (file && file.type !== 'text/csv') {\r\n        alert('Please select a CSV file')\r\n        event.target.value = ''\r\n        selectedFile.value = null\r\n        return\r\n      }\r\n      selectedFile.value = file\r\n      console.log('File selected:', file?.name)\r\n    }\r\n\r\n    const handleFileUpload = async () => {\r\n      if (!selectedFile.value || !uploadYear.value) {\r\n        alert('Please select both a year and a CSV file')\r\n        return\r\n      }\r\n\r\n      isUploading.value = true\r\n      const formData = new FormData()\r\n      formData.append('file', selectedFile.value)\r\n      formData.append('year', uploadYear.value)\r\n\r\n      try {\r\n        console.log('Starting upload...', {\r\n          year: uploadYear.value,\r\n          fileName: selectedFile.value.name\r\n        })\r\n\r\n        const token = store.state.auth.token\r\n        if (!token) {\r\n          throw new Error('No authentication token found')\r\n        }\r\n\r\n    // Log the form data to verify what's being sent\r\n    console.log('Form data contents:', {\r\n      file: selectedFile.value,\r\n      year: uploadYear.value\r\n    })\r\n\r\n    const response = await api.post('/students/upload', formData, {\r\n          headers: {\r\n        'Authorization': `Bearer ${token}`,\r\n        'Content-Type': 'multipart/form-data'\r\n          }\r\n        })\r\n\r\n        console.log('Upload successful:', response.data)\r\n\r\n        if (response.data.errors && response.data.errors.length > 0) {\r\n          const errorMessage = response.data.errors.join('\\n')\r\n          alert(`Upload completed with some errors:\\n${errorMessage}`)\r\n        } else {\r\n          const counts = response.data.sectionCounts\r\n          alert(`File uploaded successfully!\\n\\nStudent distribution:\\nSouth 1: ${counts['South 1']} students\\nSouth 2: ${counts['South 2']} students\\nSouth 3: ${counts['South 3']} students`)\r\n        }\r\n\r\n        // Reset form\r\n        selectedFile.value = null\r\n        uploadYear.value = ''\r\n        \r\n        // Refresh student list and close modal\r\n        await fetchStudents()\r\n    \r\n    // Debug: Check if emails are included in the fetched students after upload\r\n    console.log('Students after upload:', students.value);\r\n    if (students.value.length > 0) {\r\n      console.log('First student after upload:', students.value[0]);\r\n      console.log('Email field exists after upload:', 'email' in students.value[0]);\r\n      console.log('Email value after upload:', students.value[0].email);\r\n    }\r\n    \r\n        showAddStudentModal.value = false\r\n      } catch (error) {\r\n    console.error('Upload failed:', error)\r\n        alert('Error uploading file: ' + (error.response?.data?.message || error.message))\r\n      } finally {\r\n        isUploading.value = false\r\n      }\r\n    }\r\n\r\n    // Filter students\r\n    const filteredStudents = computed(() => {\r\n      return students.value.filter(student => {\r\n        const searchLower = searchQuery.value.toLowerCase();\r\nconst matchesSearch = \r\n          student.studentId.toLowerCase().includes(searchLower) ||\r\n          student.firstName.toLowerCase().includes(searchLower) ||\r\nstudent.lastName.toLowerCase().includes(searchLower);\r\n\r\n// Apply year and section filters\r\nconst matchesYear = !selectedYear.value || student.year === selectedYear.value;\r\nconst matchesSection = !selectedSection.value || student.section === selectedSection.value;\r\n\r\nreturn matchesSearch && matchesYear && matchesSection;\r\n      });\r\n    });\r\n\r\n    // Student actions\r\n    const closeStudentModal = () => {\r\n      if (performanceChart.value) {\r\n        const existingChart = Chart.getChart(performanceChart.value);\r\n        if (existingChart) {\r\n          existingChart.destroy();\r\n        }\r\n      }\r\n      selectedStudent.value = null;\r\n    };\r\n\r\n    const confirmDelete = (student) => {\r\nstudentToDelete.value = student;\r\nshowDeleteModal.value = true;\r\n    }\r\n\r\n    const deleteStudent = async (student) => {\r\n      try {\r\n        const token = store.state.auth.token;\r\n\r\n    // Delete the student from students collection using MongoDB _id\r\n    await api.delete(\r\n      '/students/' + student._id,\r\n            {\r\n              headers: {\r\n                'Authorization': `Bearer ${token}`\r\n              }\r\n            }\r\n        );\r\n\r\n            // Update local state\r\n        students.value = students.value.filter(s => s._id !== student._id);\r\n        selectedStudent.value = null;\r\n        showDeleteModal.value = false;\r\n        studentToDelete.value = null;\r\n        alert('Student deleted successfully');\r\n      } catch (error) {\r\n    console.error('Failed to delete student:', error);\r\n        alert('Failed to delete student. Please try again.');\r\n      }\r\n    }\r\n\r\nconst startEditing = (student) => {\r\n  editingStudent.value = { ...student }\r\n      isEditing.value = true\r\n    }\r\n\r\n    const cancelEditing = () => {\r\neditingStudent.value = null\r\n      isEditing.value = false\r\n    }\r\n\r\n    const saveStudentChanges = async () => {\r\n      try {\r\n        const token = store.state.auth.token\r\n        \r\n    // Update student information\r\n    const studentResponse = await api.put('/students/' + editingStudent.value._id, {\r\n            studentId: editingStudent.value.studentId,\r\n            firstName: editingStudent.value.firstName,\r\n            lastName: editingStudent.value.lastName,\r\n            email: editingStudent.value.email,\r\n            year: editingStudent.value.year,\r\n            section: editingStudent.value.section\r\n        }, {\r\n            headers: {\r\n              'Authorization': `Bearer ${token}`\r\n            }\r\n        })\r\n\r\n        if (studentResponse.data) {\r\n            // Update local state\r\n            const index = students.value.findIndex(s => s._id === editingStudent.value._id)\r\n            if (index !== -1) {\r\n              students.value[index] = { ...editingStudent.value }\r\n            }\r\n            \r\n            selectedStudent.value = null\r\n            editingStudent.value = null\r\n            isEditing.value = false\r\n            alert('Student information updated successfully')\r\n        } else {\r\n          throw new Error('Failed to update student information')\r\n        }\r\n      } catch (error) {\r\n    console.error('Failed to update student:', error)\r\n        alert('Failed to update student information. Please try again.')\r\n      }\r\n    }\r\n\r\n    const sortBy = (field) => {\r\n      if (sortField.value === field) {\r\n        sortOrder.value = sortOrder.value === 'asc' ? 'desc' : 'asc'\r\n      } else {\r\n        sortField.value = field\r\n        sortOrder.value = 'asc'\r\n      }\r\n    }\r\n\r\n    const getSortIcon = (field) => {\r\n      if (sortField.value !== field) return 'fas fa-sort'\r\n      return sortOrder.value === 'asc' ? 'fas fa-sort-up' : 'fas fa-sort-down'\r\n    }\r\n\r\n    const sortedStudents = computed(() => {\r\n      let students = filteredStudents.value\r\n\r\n      if (sortField.value) {\r\n        students = [...students].sort((a, b) => {\r\n          let aVal = a[sortField.value]\r\n          let bVal = b[sortField.value]\r\n\r\n          // Handle case-insensitive string comparison\r\n          if (typeof aVal === 'string') aVal = aVal.toLowerCase()\r\n          if (typeof bVal === 'string') bVal = bVal.toLowerCase()\r\n\r\n          if (aVal < bVal) return sortOrder.value === 'asc' ? -1 : 1\r\n          if (aVal > bVal) return sortOrder.value === 'asc' ? 1 : -1\r\n          return 0\r\n        })\r\n      }\r\n\r\n      return students\r\n    })\r\n\r\n    const toggleSearch = () => {\r\n      showSearch.value = !showSearch.value\r\n      if (!showSearch.value) {\r\n        searchQuery.value = ''\r\n      }\r\n    }\r\n\r\n    const handleSearch = () => {\r\n      // Implement any additional search logic here if needed\r\n      console.log('Searching for:', searchQuery.value)\r\n    }\r\n\r\nconst clearSearch = () => {\r\nsearchQuery.value = ''\r\nhandleSearch()\r\n}\r\n\r\n// Add getAcademicYearRange function\r\nconst getAcademicYearRange = (year) => {\r\nconst currentYear = new Date().getFullYear()\r\nlet yearNumber = 0\r\n\r\nswitch(year) {\r\ncase '1st':\r\nyearNumber = 1\r\nbreak\r\ncase '2nd':\r\nyearNumber = 2\r\nbreak\r\ncase '3rd':\r\nyearNumber = 3\r\nbreak\r\ncase '4th':\r\nyearNumber = 4\r\nbreak\r\ndefault:\r\nreturn 'N/A'\r\n}\r\n\r\nconst startYear = currentYear - yearNumber + 1\r\nreturn `${startYear} - ${startYear + 1}`\r\n}\r\n\r\n// Add hasActiveFilters computed property\r\nconst hasActiveFilters = computed(() => {\r\nreturn selectedYear.value || selectedSection.value;\r\n});\r\n\r\n// Add viewStudent function\r\nconst viewStudent = async (student) => {\r\nselectedStudent.value = student;\r\n\r\n// Fetch student's attendance\r\nconst response = await api.get(\r\n  `/attendance/${student._id}/history`,\r\n  {\r\n    params: {\r\n      all : true,\r\n      subject: '',\r\n      startDate: '',\r\n      endDate: ''\r\n    },\r\n    headers: { 'Authorization': `Bearer ${store.state.auth.token}` }\r\n  }\r\n)\r\nselectedStudent.value = {\r\n  ...selectedStudent.value,\r\n  attendanceHistory : response.data\r\n}\r\n\r\n// Initialize charts if needed\r\nif (performanceChart.value) {\r\nconst ctx = performanceChart.value.getContext('2d');\r\n// Add your chart initialization logic here\r\n}\r\n};\r\n\r\n// Add clearFilters function\r\nconst clearFilters = () => {\r\nselectedYear.value = '';\r\nselectedSection.value = '';\r\nsearchQuery.value = '';\r\n};\r\n\r\nconst applyFilters = () => {\r\nfetchStudents();\r\n};\r\n\r\n// Function to handle adding a single student\r\nconst handleAddSingleStudent = async () => {\r\n  try {\r\n    isAddingStudent.value = true\r\n    \r\n    // Validate required fields\r\n    const requiredFields = ['studentId', 'firstName', 'middleName', 'lastName', 'email', 'contactNumber', 'year', 'section']\r\n    for (const field of requiredFields) {\r\n      if (!newStudent.value[field]) {\r\n        throw new Error(`${field.charAt(0).toUpperCase() + field.slice(1)} is required`)\r\n      }\r\n    }\r\n    \r\n    // Validate email format\r\n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/\r\n    if (!emailRegex.test(newStudent.value.email)) {\r\n      throw new Error('Please enter a valid email address')\r\n    }\r\n    \r\n    const token = store.state.auth.token\r\n    if (!token) {\r\n      throw new Error('No authentication token found')\r\n    }\r\n    \r\n    // Send request to add student\r\n    const response = await api.post('/students', {\r\n      ...newStudent.value,\r\n      // Calculate academic years based on current year and student's year level\r\n      academicYears: calculateAcademicYears(newStudent.value.year)\r\n    }, {\r\n      headers: {\r\n        'Authorization': `Bearer ${token}`\r\n      }\r\n    })\r\n    \r\n    console.log('Student added successfully:', response.data)\r\n    \r\n    // Reset form and close modal\r\n    resetNewStudentForm()\r\n    showAddSingleStudentModal.value = false\r\n    \r\n    // Refresh student list\r\n    await fetchStudents()\r\n    \r\n    alert('Student added successfully')\r\n  } catch (error) {\r\n    console.error('Failed to add student:', error)\r\n    alert('Error adding student: ' + (error.response?.data?.message || error.message))\r\n  } finally {\r\n    isAddingStudent.value = false\r\n  }\r\n}\r\n\r\n// Helper function to reset the new student form\r\nconst resetNewStudentForm = () => {\r\n  newStudent.value = {\r\n    studentId: '',\r\n    firstName: '',\r\n    middleName: '',\r\n    lastName: '',\r\n    email: '',\r\n    contactNumber: '',\r\n    year: '',\r\n    section: ''\r\n  }\r\n}\r\n\r\n// Helper function to calculate academic years\r\nconst calculateAcademicYears = (year) => {\r\n  const currentYear = new Date().getFullYear()\r\n  let startYear, endYear\r\n  \r\n  switch(year) {\r\n        case '1st':\r\n      startYear = currentYear\r\n      endYear = currentYear + 4\r\n      break\r\n        case '2nd':\r\n      startYear = currentYear - 1\r\n      endYear = currentYear + 3\r\n      break\r\n        case '3rd':\r\n      startYear = currentYear - 2\r\n      endYear = currentYear + 2\r\n      break\r\n        case '4th':\r\n      startYear = currentYear - 3\r\n      endYear = currentYear + 1\r\n      break\r\n        default:\r\n      startYear = currentYear\r\n      endYear = currentYear + 4\r\n  }\r\n  \r\n  return { startYear, endYear }\r\n}\r\n\r\n// Add fetchStudents function that was accidentally removed\r\nconst fetchStudents = async () => {\r\n  try {\r\n    const token = store.state.auth.token;\r\n    const response = await api.get('/students', {\r\n            headers: {\r\n        'Authorization': `Bearer ${token}`\r\n      }\r\n    });\r\n    students.value = response.data;\r\n    const response1 = await api.get('/students/assessments/all', {\r\n        headers: {\r\n            'Authorization': `Bearer ${token}`\r\n        }\r\n    });\r\n    assessments.value = response1.data?.assessments\r\n  } catch (error) {\r\n    console.error('Failed to fetch students:', error);\r\n    alert('Failed to fetch students. Please try again.');\r\n  }\r\n};\r\n\r\n    return {\r\n      students,\r\n      searchQuery,\r\n      selectedStudent,\r\n      performanceChart,\r\n      sortField,\r\n      sortOrder,\r\n      showDeleteModal,\r\n      studentToDelete,\r\n      isEditing,\r\n      editingStudent,\r\n      showSearch,\r\nshowAddStudentModal,\r\nshowAddSingleStudentModal,\r\nselectedFile,\r\nuploadYear,\r\nisUploading,\r\navailableYears,\r\navailableSections,\r\nnewStudent,\r\nisAddingStudent,\r\nhandleFileChange,\r\nhandleFileUpload,\r\nhandleAddSingleStudent,\r\nresetNewStudentForm,\r\nfilteredStudents,\r\ncloseStudentModal,\r\nconfirmDelete,\r\ndeleteStudent,\r\nstartEditing,\r\ncancelEditing,\r\nsaveStudentChanges,\r\nsortBy,\r\ngetSortIcon,\r\nsortedStudents,\r\ntoggleSearch,\r\nhandleSearch,\r\nclearSearch,\r\nfetchStudents,\r\nhasActiveFilters,\r\nselectedYear,\r\nselectedSection,\r\nviewStudent,\r\ngetAcademicYearRange,\r\nclearFilters,\r\napplyFilters,\r\ncurrentPage,\r\ntotalPages,\r\npaginatedStudents,\r\npaginationInfo,\r\nnextPage,\r\npreviousPage,\r\nformatDate,\r\nassessments\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n/* Base z-index hierarchy */\r\n:root {\r\n  --z-base: 1;\r\n  --z-table: 1010;\r\n  --z-controls: 1020;\r\n  --z-dropdown: 1030;\r\n  --z-modal-backdrop: 1040;\r\n  --z-modal: 1050;\r\n}\r\n\r\n.student-management {\r\n  padding: 20px;\r\nposition: relative;\r\n}\r\n\r\n/* Button container styles */\r\n.d-flex.gap-2.mb-3 {\r\nposition: static;\r\ntop: auto;\r\nright: auto;\r\nz-index: auto;\r\n}\r\n\r\n/* Modal Styles */\r\n.modal-wrapper {\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100vw;\r\n  height: 100vh;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\nz-index: 2000;\r\n}\r\n\r\n.modal-backdrop {\r\nposition: fixed;\r\ntop: 0;\r\nleft: 0;\r\nwidth: 100vw;\r\nheight: 100vh;\r\nbackground-color: rgba(0, 0, 0, 0.5);\r\nz-index: 1999;\r\n}\r\n\r\n.modal {\r\n  position: relative;\r\n  width: 100%;\r\nmax-width: 500px;\r\nmargin: 2rem;\r\nz-index: 2001;\r\nbackground: white;\r\nborder-radius: 12px;\r\nbox-shadow: 0 20px 25px -5px rgba(0, 0, 0, 0.1), 0 10px 10px -5px rgba(0, 0, 0, 0.04);\r\noverflow: hidden;\r\n}\r\n\r\n.modal-content {\r\n  position: relative;\r\n  width: 100%;\r\nbackground: white;\r\nborder-radius: 12px;\r\n  overflow: hidden;\r\n}\r\n\r\n.modal-header {\r\ndisplay: flex;\r\nalign-items: center;\r\njustify-content: space-between;\r\npadding: 1rem 1.5rem;\r\nborder-bottom: 1px solid #e2e8f0;\r\n}\r\n\r\n.modal-header.bg-primary {\r\nbackground-color: #003366 !important;\r\n}\r\n\r\n.btn-close-white {\r\nfilter: brightness(0) invert(1);\r\n}\r\n\r\n.modal-body {\r\n  padding: 1.5rem;\r\n}\r\n\r\n.form-label {\r\nfont-weight: 500;\r\ncolor: #2d3748;\r\nmargin-bottom: 0.5rem;\r\n}\r\n\r\n.form-select,\r\n.form-control {\r\nborder: 2px solid #e2e8f0;\r\nborder-radius: 8px;\r\npadding: 0.75rem;\r\nwidth: 100%;\r\ntransition: all 0.2s;\r\n}\r\n\r\n.form-select:focus,\r\n.form-control:focus {\r\nborder-color: #003366;\r\nbox-shadow: 0 0 0 2px rgba(0, 51, 102, 0.1);\r\n}\r\n\r\n.text-muted {\r\ncolor: #718096 !important;\r\n}\r\n\r\n.btn {\r\npadding: 0.75rem 1.5rem;\r\nfont-weight: 500;\r\nborder-radius: 8px;\r\ntransition: all 0.2s;\r\n}\r\n\r\n.btn-primary {\r\nbackground-color: #003366;\r\nborder: none;\r\n}\r\n\r\n.btn-primary:hover:not(:disabled) {\r\nbackground-color: #004080;\r\n}\r\n\r\n.btn-secondary {\r\nbackground-color: #e2e8f0;\r\nborder: none;\r\ncolor: #4a5568;\r\n}\r\n\r\n.btn-secondary:hover {\r\nbackground-color: #cbd5e1;\r\n}\r\n\r\n.btn:disabled {\r\nopacity: 0.7;\r\ncursor: not-allowed;\r\n}\r\n\r\n/* Table container styles */\r\n.table-container {\r\nmargin-top: 0;\r\n}\r\n\r\n/* Table Styles */\r\n.table-responsive {\r\n  position: relative;\r\n  z-index: 1010;\r\n  background: white;\r\n  border-radius: 12px;\r\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.05);\r\n  overflow: hidden;\r\n}\r\n\r\n.table {\r\n  margin-bottom: 0;\r\n}\r\n\r\n.table thead th {\r\n  position: sticky;\r\n  top: 0;\r\n  background: white;\r\n  z-index: 1011;\r\n  padding: 1rem;\r\n  font-weight: 600;\r\n  color: #4a5568;\r\n  border-bottom: 2px solid #e2e8f0;\r\n}\r\n\r\n/* Student Info Card */\r\n.student-info-card {\r\n  background: white;\r\n  border-radius: 12px;\r\n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.05);\r\n  margin-bottom: 1.5rem;\r\n}\r\n\r\n.student-info-header {\r\n  padding: 1rem 1.25rem;\r\n  background: #f8f9fa;\r\n  border-bottom: 1px solid #e9ecef;\r\n  font-weight: 600;\r\n  color: #2d3748;\r\n}\r\n\r\n.student-info-content {\r\n  padding: 1.25rem;\r\n}\r\n\r\n.info-grid {\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));\r\n  gap: 1.25rem;\r\n}\r\n\r\n.info-item {\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 0.5rem;\r\n}\r\n\r\n.info-item label {\r\n  font-size: 0.875rem;\r\n  color: #718096;\r\n  font-weight: 500;\r\n}\r\n\r\n.info-item span {\r\n  color: #2d3748;\r\n  font-weight: 500;\r\n}\r\n\r\n/* Performance Card */\r\n.performance-card {\r\n  background: white;\r\n  border-radius: 12px;\r\n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.05);\r\n  margin-bottom: 1.5rem;\r\n}\r\n\r\n.performance-header {\r\n  padding: 1rem 1.25rem;\r\n  background: #f8f9fa;\r\n  border-bottom: 1px solid #e9ecef;\r\n  font-weight: 600;\r\n  color: #2d3748;\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 0.75rem;\r\n}\r\n\r\n.performance-content {\r\n  padding: 1.25rem;\r\n}\r\n\r\n.chart-container {\r\n  background: white;\r\n  padding: 1.25rem;\r\n  border-radius: 8px;\r\n  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.05);\r\n}\r\n\r\n/* History Card */\r\n.history-card {\r\n  background: white;\r\n  border-radius: 12px;\r\n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.05);\r\n}\r\n\r\n.history-header {\r\n  padding: 1rem 1.25rem;\r\n  background: #003366;\r\n  color: white;\r\n  font-weight: 600;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  border-bottom: 1px solid rgba(255, 255, 255, 0.1);\r\n}\r\n\r\n.history-content {\r\n  padding: 1.25rem;\r\n}\r\n\r\n/* Dropdown Styles */\r\n.dropdown {\r\n  position: relative;\r\n  z-index: 1030;\r\n}\r\n\r\n.dropdown-menu {\r\n  position: absolute;\r\n  z-index: 1031;\r\n  min-width: 200px;\r\n  background: white;\r\n  border-radius: 12px;\r\n  box-shadow: 0 4px 20px rgba(0, 0, 0, 0.15);\r\n  border: none;\r\n  padding: 0.5rem 0;\r\n  margin-top: 0.5rem;\r\n}\r\n\r\n.dropdown-menu.show {\r\n  display: block !important;\r\n}\r\n\r\n/* Button Styles */\r\n.btn-control {\r\n  height: 38px;\r\n  background: #f8fafc;\r\n  border: 1px solid #e2e8f0;\r\n  color: #4a5568;\r\n  font-size: 0.9rem;\r\n  padding: 0.5rem 1rem;\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 0.5rem;\r\n  border-radius: 8px;\r\n  transition: all 0.2s ease;\r\n}\r\n\r\n.btn-control:hover,\r\n.btn-control:focus {\r\n  background: #f1f5f9;\r\n  border-color: #cbd5e1;\r\n  color: #2d3748;\r\n}\r\n\r\n/* Search Control */\r\n.search-control {\r\n  position: relative;\r\n  z-index: var(--z-controls);\r\n  width: 300px;\r\n}\r\n\r\n.search-control .input-group {\r\n  border-radius: 8px;\r\n  overflow: hidden;\r\n  box-shadow: 0 1px 3px rgba(0,0,0,0.05);\r\n}\r\n\r\n.search-control .input-group-text {\r\n  background: white;\r\n  border: 1px solid #e2e8f0;\r\n  color: #718096;\r\n  padding-right: 0;\r\n}\r\n\r\n.search-control .form-control {\r\n  border: 1px solid #e2e8f0;\r\n  padding: 0.5rem 0.75rem;\r\n  font-size: 0.9rem;\r\n}\r\n\r\n/* Filter Badge */\r\n.filter-badge {\r\n  position: absolute;\r\n  top: -6px;\r\n  right: -6px;\r\n  background: #e53e3e;\r\n  color: white;\r\n  width: 18px;\r\n  height: 18px;\r\n  border-radius: 50%;\r\n  font-size: 0.7rem;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  border: 2px solid white;\r\n}\r\n\r\n/* Table styles */\r\n.table {\r\n  margin-bottom: 0;\r\n  background: white;\r\n}\r\n\r\n.table thead th {\r\n  position: sticky;\r\n  top: 0;\r\n  background: white;\r\n  z-index: calc(var(--z-table) + 1);\r\n  padding: 1rem;\r\n  font-weight: 600;\r\n  color: #4a5568;\r\n  border-bottom: 2px solid #e2e8f0;\r\n}\r\n\r\n/* Search control */\r\n.search-control {\r\n  position: relative;\r\n  z-index: var(--z-controls);\r\n}\r\n\r\n/* Controls wrapper */\r\n.controls-wrapper {\r\n  position: relative;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  gap: 1rem;\r\n}\r\n\r\n.controls-left {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 0.75rem;\r\n  z-index: var(--z-controls);\r\n}\r\n\r\n.btn-light {\r\n  background: #f8fafc;\r\n  border: 1px solid #e2e8f0;\r\n  color: #4a5568;\r\n}\r\n\r\n.btn-light:hover {\r\n  background: #f1f5f9;\r\n  border-color: #cbd5e1;\r\n  color: #2d3748;\r\n}\r\n\r\n.btn-primary {\r\n  background: #4299e1;\r\n  border: none;\r\n  color: white;\r\n}\r\n\r\n.btn-primary:hover {\r\n  background: #3182ce;\r\n}\r\n\r\n.student-info p {\r\n  margin-bottom: 0.75rem;\r\n  padding-bottom: 0.75rem;\r\n  border-bottom: 1px solid #eee;\r\n}\r\n\r\n.student-info p:last-child {\r\n  border-bottom: none;\r\n}\r\n\r\n.student-info strong {\r\n  color: #666;\r\n  display: inline-block;\r\n  width: 100px;\r\n}\r\n\r\n.empty-state-message {\r\n  padding: 2rem 0;\r\n}\r\n\r\n.empty-state-message i {\r\n  font-size: 2rem;\r\n  display: block;\r\n  margin-bottom: 0.5rem;\r\n}\r\n\r\n.empty-state-message p {\r\n  margin: 0;\r\n  color: #6c757d;\r\n}\r\n\r\n.clickable-row {\r\n  cursor: pointer;\r\n  transition: background-color 0.2s ease;\r\n}\r\n\r\n.clickable-row:hover {\r\n  background-color: rgba(0, 51, 102, 0.05) !important;\r\n}\r\n\r\n.student-info-card,\r\n.performance-card,\r\n.history-card {\r\n  background: white;\r\n  border-radius: 10px;\r\n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);\r\n  overflow: hidden;\r\n}\r\n\r\n.student-info-header,\r\n.performance-header,\r\n.history-header {\r\n  background-color: #f8f9fa;\r\n  padding: 1rem;\r\n  font-weight: 600;\r\n  color: #2c3e50;\r\n  border-bottom: 1px solid #eee;\r\n  display: flex;\r\n  align-items: center;\r\n}\r\n\r\n.student-info-content,\r\n.performance-content,\r\n.history-content {\r\n  padding: 1.5rem;\r\n}\r\n\r\n.info-grid {\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));\r\n  gap: 1.5rem;\r\n  padding: 1rem;\r\n}\r\n\r\n.info-item {\r\n  display: flex;\r\n  flex-direction: column;\r\n}\r\n\r\n.info-item label {\r\n  font-weight: 600;\r\n  color: #666;\r\n  margin-bottom: 0.25rem;\r\n}\r\n\r\n.info-item span {\r\n  color: #333;\r\n}\r\n\r\n.chart-container {\r\n  background: white;\r\n  padding: 1rem;\r\n  border-radius: 8px;\r\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.05);\r\n}\r\n\r\n.badge {\r\nfont-size: 1rem;\r\npadding: 0.5em 1em;\r\n}\r\n\r\n.badge-quiz {\r\n  background-color: #4e73df;\r\n  color: white;\r\n}\r\n\r\n.badge-activity {\r\n  background-color: #1cc88a;\r\n  color: white;\r\n}\r\n\r\n.badge-performance {\r\n  background-color: #f6c23e;\r\n  color: white;\r\n}\r\n\r\n.score-excellent {\r\n  color: #1cc88a;\r\n  font-weight: 600;\r\n}\r\n\r\n.score-good {\r\n  color: #4e73df;\r\n  font-weight: 600;\r\n}\r\n\r\n.score-average {\r\n  color: #f6c23e;\r\n  font-weight: 600;\r\n}\r\n\r\n.score-poor {\r\n  color: #e74a3b;\r\n  font-weight: 600;\r\n}\r\n\r\n.modal-header.bg-primary {\r\n  background-color: #003366 !important;\r\n}\r\n\r\n.btn-close-white {\r\n  filter: brightness(0) invert(1);\r\n}\r\n\r\n.date-filter .form-control {\r\n  background-color: rgba(255, 255, 255, 0.1);\r\n  border: 1px solid rgba(255, 255, 255, 0.2);\r\n  color: white;\r\n  width: 150px;\r\n}\r\n\r\n.date-filter .form-control::-webkit-calendar-picker-indicator {\r\n  filter: invert(1);\r\n}\r\n\r\n.date-filter .form-control:focus {\r\n  background-color: rgba(255, 255, 255, 0.2);\r\n  border-color: rgba(255, 255, 255, 0.3);\r\n  color: white;\r\n}\r\n\r\n.date-filter span {\r\n  padding: 0 0.5rem;\r\n}\r\n\r\n.date-input-container {\r\n  position: relative;\r\n  display: inline-block;\r\n}\r\n\r\n.date-picker-dropdown {\r\n  position: absolute;\r\n  top: 100%;\r\n  left: 0;\r\n  margin-top: 4px;\r\n  background: white;\r\n  border-radius: 8px;\r\n  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);\r\n  padding: 12px;\r\n  min-width: 250px;\r\n}\r\n\r\n.date-picker-header {\r\n  display: flex;\r\n  justify-content: flex-end;\r\n  margin-bottom: 8px;\r\n}\r\n\r\n.close-btn {\r\n  background: none;\r\n  border: none;\r\n  color: #666;\r\n  cursor: pointer;\r\n  padding: 4px;\r\n  font-size: 14px;\r\n}\r\n\r\n.close-btn:hover {\r\n  color: #333;\r\n}\r\n\r\n.date-picker-input {\r\n  width: 100%;\r\n  padding: 8px;\r\n  border: 1px solid #ddd;\r\n  border-radius: 4px;\r\n  font-size: 14px;\r\n}\r\n\r\n.date-picker-input::-webkit-calendar-picker-indicator {\r\n  cursor: pointer;\r\n  padding: 4px;\r\n}\r\n\r\n.date-filter .form-control {\r\n  background-color: rgba(255, 255, 255, 0.1);\r\n  border: 1px solid rgba(255, 255, 255, 0.2);\r\n  color: white;\r\n  width: 150px;\r\n  cursor: pointer;\r\n}\r\n\r\n.date-filter .form-control:hover {\r\n  background-color: rgba(255, 255, 255, 0.2);\r\n}\r\n\r\n.date-filter span {\r\n  padding: 0 0.5rem;\r\n  color: white;\r\n}\r\n\r\n.history-card {\r\n  position: relative;\r\n  overflow: visible !important;\r\n}\r\n\r\n.history-header {\r\n  position: relative;\r\n  overflow: visible;\r\n}\r\n\r\n.table {\r\n  width: 100%;\r\n  margin-bottom: 0;\r\n  border-collapse: collapse;\r\n}\r\n\r\n.table th {\r\n  position: sticky;\r\n  top: 0;\r\n  background: white;\r\n  z-index: 10;\r\n  padding: 1rem;\r\n  font-weight: 600;\r\n  color: #4a5568;\r\n  border-bottom: 2px solid #e2e8f0;\r\n}\r\n\r\n.table td {\r\n  padding: 1rem;\r\n  vertical-align: middle;\r\n  border-bottom: 1px solid #e2e8f0;\r\n}\r\n\r\n.table tbody tr:hover {\r\n  background-color: #f8f9fa;\r\n}\r\n\r\n.btn {\r\n  padding: 0.5rem 1rem;\r\n  border-radius: 8px;\r\n  font-weight: 500;\r\n  display: inline-flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  gap: 0.5rem;\r\n}\r\n\r\n.btn i {\r\n  font-size: 0.875rem;\r\n}\r\n\r\n.form-control,\r\n.form-select {\r\n  border: 2px solid #eee;\r\n  border-radius: 8px;\r\n  padding: 0.75rem;\r\n  transition: all 0.3s;\r\n}\r\n\r\n.form-control:focus,\r\n.form-select:focus {\r\n  border-color: var(--primary-color);\r\n  box-shadow: 0 0 0 0.2rem rgba(0, 51, 102, 0.15);\r\n}\r\n\r\n/* Table Controls */\r\n.table-controls {\r\n  position: relative;\r\n  z-index: 1030;\r\n  background: white;\r\n  padding: 1rem;\r\n  border-radius: 12px;\r\n  box-shadow: 0 2px 4px rgba(0,0,0,0.05);\r\n  margin-bottom: 1rem;\r\n}\r\n\r\n.dropdown {\r\n  position: relative;\r\n}\r\n\r\n.dropdown-menu {\r\n  position: absolute;\r\n  z-index: 1031;\r\n  min-width: 200px;\r\n  background: white;\r\n  border-radius: 12px;\r\n  box-shadow: 0 4px 20px rgba(0, 0, 0, 0.15);\r\n  border: none;\r\n  padding: 0.5rem 0;\r\n  margin-top: 0.5rem;\r\n}\r\n\r\n.dropdown-menu.show {\r\n  display: block !important;\r\n}\r\n\r\n/* Modal Styles */\r\n.modal-dialog {\r\n  max-width: 900px;\r\n  margin: 1.75rem auto;\r\n}\r\n\r\n.modal-content {\r\n  background: white;\r\n  border-radius: 16px;\r\n  box-shadow: 0 20px 25px -5px rgba(0, 0, 0, 0.1), 0 10px 10px -5px rgba(0, 0, 0, 0.04);\r\n  border: 1px solid rgba(255, 255, 255, 0.1);\r\n  overflow: hidden;\r\n}\r\n\r\n.modal-header {\r\n  background: #003366;\r\n  color: white;\r\n  padding: 1.25rem 1.5rem;\r\n  border-bottom: 1px solid rgba(255, 255, 255, 0.1);\r\n}\r\n\r\n.modal-header .modal-title {\r\n  font-size: 1.25rem;\r\n  font-weight: 600;\r\n  margin: 0;\r\n}\r\n\r\n.modal-body {\r\n  padding: 1.5rem;\r\n}\r\n\r\n/* Student Details Layout */\r\n.student-details {\r\n  display: grid;\r\n  grid-template-columns: 350px 1fr;\r\n  gap: 2rem;\r\nmax-height: calc(90vh - 4rem);\r\noverflow-y: auto;\r\n}\r\n\r\n.student-info {\r\n  background: #f8fafc;\r\n  padding: 1.5rem;\r\n  border-radius: 12px;\r\n  height: fit-content;\r\n}\r\n\r\n.info-title {\r\n  color: #2d3748;\r\n  font-size: 1.1rem;\r\n  font-weight: 600;\r\n  margin-bottom: 1.5rem;\r\n  padding-bottom: 0.75rem;\r\n  border-bottom: 2px solid #e2e8f0;\r\n}\r\n\r\n.info-content p {\r\n  margin-bottom: 1rem;\r\n  padding-bottom: 0.75rem;\r\n  border-bottom: 1px solid #e2e8f0;\r\n  font-size: 1rem;\r\n}\r\n\r\n.info-content p:last-child {\r\n  margin-bottom: 0;\r\n  padding-bottom: 0;\r\n  border-bottom: none;\r\n}\r\n\r\n.info-content strong {\r\n  color: #4a5568;\r\n  display: inline-block;\r\n  width: 120px;\r\n  font-weight: 600;\r\n}\r\n\r\n.student-charts {\r\n  display: grid;\r\n  grid-template-rows: 1fr 1fr;\r\n  gap: 1.5rem;\r\n}\r\n\r\n.chart-section {\r\n  background: white;\r\n  border-radius: 12px;\r\n  padding: 1.5rem;\r\n  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n.chart-section h6 {\r\n  color: #2d3748;\r\n  font-size: 1.1rem;\r\n  font-weight: 600;\r\n  margin-bottom: 1.5rem;\r\n  padding-bottom: 0.75rem;\r\n  border-bottom: 2px solid #e2e8f0;\r\n}\r\n\r\n/* Table Styles */\r\n.table-responsive {\r\n  position: relative;\r\n  z-index: 1020;\r\n  background: white;\r\n  border-radius: 12px;\r\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.05);\r\n  overflow: hidden;\r\n}\r\n\r\n/* Update existing styles */\r\n.table-container {\r\n  background: white;\r\n  border-radius: 12px;\r\n  box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06);\r\n  overflow: hidden;\r\n}\r\n\r\n.table-controls {\r\n  background: #f8fafc;\r\n  padding: 1rem;\r\n  border-bottom: 1px solid #e2e8f0;\r\n}\r\n\r\n.modal-dialog.modal-xxl {\r\nmax-width: 90%;\r\nwidth: 1400px;\r\nmargin: 2rem auto;\r\n}\r\n\r\n.student-details {\r\n  display: grid;\r\ngrid-template-columns: 350px 1fr;\r\n  gap: 2rem;\r\nmax-height: calc(90vh - 4rem);\r\noverflow-y: auto;\r\n}\r\n\r\n.student-info {\r\n  background: #f8fafc;\r\n  padding: 2rem;\r\n  border-radius: 12px;\r\n  height: fit-content;\r\n}\r\n\r\n.info-title {\r\n  color: #2d3748;\r\n  font-size: 1.4rem;\r\n  font-weight: 600;\r\n  margin-bottom: 2rem;\r\n  padding-bottom: 1rem;\r\n  border-bottom: 2px solid #e2e8f0;\r\n}\r\n\r\n.info-content p {\r\n  margin-bottom: 1.25rem;\r\n  padding-bottom: 1.25rem;\r\n  border-bottom: 1px solid #e2e8f0;\r\n  font-size: 1.2rem;\r\n  line-height: 1.5;\r\n}\r\n\r\n.info-content strong {\r\n  color: #4a5568;\r\n  display: inline-block;\r\n  width: 160px;\r\n  font-weight: 600;\r\n}\r\n\r\n.chart-section {\r\n  background: white;\r\n  border-radius: 12px;\r\n  padding: 2rem;\r\n  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n.chart-section h6 {\r\n  color: #2d3748;\r\n  font-size: 1.4rem;\r\n  font-weight: 600;\r\n  margin-bottom: 2rem;\r\n  padding-bottom: 1rem;\r\n  border-bottom: 2px solid #e2e8f0;\r\n}\r\n\r\n.attendance-table {\r\n  margin-top: 1rem;\r\n  font-size: 1.1rem;\r\n}\r\n\r\n.attendance-table th {\r\n  font-size: 1.1rem;\r\n  font-weight: 600;\r\n  color: #2d3748;\r\n}\r\n\r\n.attendance-table td {\r\n  font-size: 1.1rem;\r\n  color: #4a5568;\r\n}\r\n\r\n.badge {\r\n  font-size: 1rem;\r\n  padding: 0.5em 1em;\r\n}\r\n\r\n/* Fix z-index issues */\r\n.modal-wrapper {\r\n  z-index: 9999 !important;\r\n}\r\n\r\n.modal-backdrop {\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100vw;\r\n  height: 100vh;\r\n  background-color: rgba(0, 0, 0, 0.5);\r\n  z-index: 9998;\r\n  backdrop-filter: blur(4px);\r\n}\r\n\r\n.modal-dialog {\r\n  z-index: 9999 !important;\r\n}\r\n\r\n.table-controls {\r\n  position: relative;\r\n  z-index: 1020;\r\n}\r\n\r\n.dropdown-menu {\r\n  z-index: 1030;\r\n}\r\n\r\n.table-responsive {\r\n  position: relative;\r\n  z-index: 1010;\r\n}\r\n\r\n/* Ensure dropdowns are hidden when modal is open */\r\n.modal-wrapper ~ .table-controls .dropdown-menu {\r\n  display: none !important;\r\n}\r\n\r\n/* Timeline Styles */\r\n.timeline {\r\n  position: relative;\r\n  padding: 1rem 0;\r\n}\r\n\r\n.timeline::before {\r\n  content: '';\r\n  position: absolute;\r\n  top: 0;\r\n  left: 1rem;\r\n  height: 100%;\r\n  width: 2px;\r\n  background: #e2e8f0;\r\n}\r\n\r\n.timeline-item {\r\n  position: relative;\r\n  padding-left: 2.5rem;\r\n  padding-bottom: 2rem;\r\n}\r\n\r\n.timeline-item:last-child {\r\n  padding-bottom: 0;\r\n}\r\n\r\n.timeline-marker {\r\n  position: absolute;\r\n  left: 0;\r\n  width: 24px;\r\n  height: 24px;\r\n  border-radius: 50%;\r\n  background: #e2e8f0;\r\n  border: 4px solid #fff;\r\n  box-shadow: 0 0 0 2px #e2e8f0;\r\n  z-index: 1;\r\n}\r\n\r\n.timeline-content {\r\n  background: white;\r\n  padding: 1rem;\r\n  border-radius: 8px;\r\n  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n.timeline-content h6 {\r\n  margin: 0;\r\n  font-size: 1.1rem;\r\n  color: #2d3748;\r\n}\r\n\r\n.timeline-status {\r\n  margin: 0.5rem 0 0;\r\n  font-size: 0.95rem;\r\n  color: #718096;\r\n}\r\n\r\n.timeline-item.completed .timeline-marker {\r\n  background: #003366;\r\n  box-shadow: 0 0 0 2px #003366;\r\n}\r\n\r\n.timeline-item.completed .timeline-content {\r\n  border-left: 3px solid #003366;\r\n}\r\n\r\n.timeline-item.completed .timeline-status {\r\n  color: #003366;\r\n  font-weight: 500;\r\n}\r\n\r\n.timeline-item.current .timeline-marker {\r\n  background: #4299e1;\r\n  box-shadow: 0 0 0 2px #4299e1;\r\n}\r\n\r\n.timeline-item.current .timeline-content {\r\n  border-left: 3px solid #4299e1;\r\n  background: #ebf8ff;\r\n}\r\n\r\n.timeline-item.current .timeline-status {\r\n  color: #4299e1;\r\n  font-weight: 500;\r\n}\r\n\r\n/* Add Student Modal Styles */\r\n.add-student-modal {\r\nposition: fixed;\r\ntop: 0;\r\nleft: 0;\r\nwidth: 100%;\r\nheight: 100%;\r\ndisplay: flex;\r\nalign-items: center;\r\njustify-content: center;\r\nz-index: 9999;\r\n}\r\n\r\n.add-student-backdrop {\r\nposition: fixed;\r\ntop: 0;\r\nleft: 0;\r\nwidth: 100%;\r\nheight: 100%;\r\nbackground-color: rgba(0, 0, 0, 0.5);\r\nz-index: 9998;\r\n}\r\n\r\n.add-student-dialog {\r\nposition: relative;\r\nwidth: 100%;\r\nmax-width: 500px;\r\nmargin: 1.75rem;\r\nz-index: 10000;\r\n}\r\n\r\n.add-student-content {\r\nposition: relative;\r\ndisplay: flex;\r\nflex-direction: column;\r\nbackground-color: #fff;\r\nborder-radius: 12px;\r\nbox-shadow: 0 20px 25px -5px rgba(0, 0, 0, 0.1), 0 10px 10px -5px rgba(0, 0, 0, 0.04);\r\noverflow: hidden;\r\n}\r\n\r\n.modal-header {\r\ndisplay: flex;\r\nalign-items: center;\r\njustify-content: space-between;\r\npadding: 1rem 1.5rem;\r\n}\r\n\r\n.modal-header.bg-primary {\r\nbackground-color: #003366 !important;\r\n}\r\n\r\n.modal-body {\r\npadding: 1.5rem;\r\n}\r\n\r\n.btn-close-white {\r\nfilter: brightness(0) invert(1);\r\n}\r\n\r\n/* Form Styles */\r\n.form-label {\r\nfont-weight: 500;\r\ncolor: #2d3748;\r\nmargin-bottom: 0.5rem;\r\n}\r\n\r\n.form-select,\r\n.form-control {\r\nborder: 2px solid #e2e8f0;\r\nborder-radius: 8px;\r\npadding: 0.75rem;\r\nwidth: 100%;\r\ntransition: all 0.2s;\r\n}\r\n\r\n.form-select:focus,\r\n.form-control:focus {\r\nborder-color: #003366;\r\nbox-shadow: 0 0 0 2px rgba(0, 51, 102, 0.1);\r\n}\r\n\r\n.text-muted {\r\ncolor: #718096 !important;\r\n}\r\n\r\n.btn {\r\npadding: 0.75rem 1.5rem;\r\nfont-weight: 500;\r\nborder-radius: 8px;\r\ntransition: all 0.2s;\r\n}\r\n\r\n.btn-primary {\r\nbackground-color: #003366;\r\nborder: none;\r\n}\r\n\r\n.btn-primary:hover:not(:disabled) {\r\nbackground-color: #004080;\r\n}\r\n\r\n.btn-secondary {\r\nbackground-color: #e2e8f0;\r\nborder: none;\r\ncolor: #4a5568;\r\n}\r\n\r\n.btn-secondary:hover {\r\nbackground-color: #cbd5e1;\r\n}\r\n\r\n.btn:disabled {\r\nopacity: 0.7;\r\ncursor: not-allowed;\r\n}\r\n\r\n/* Add CSS styles for the success button and modal */\r\n.btn-success {\r\n  background-color: #10B981;\r\n  border: none;\r\n  color: white;\r\n}\r\n\r\n.btn-success:hover:not(:disabled) {\r\n  background-color: #059669;\r\n}\r\n\r\n.modal-header.bg-success {\r\n  background-color: #10B981 !important;\r\n}\r\n\r\n/* Form validation styles */\r\n.form-control.is-invalid,\r\n.form-select.is-invalid {\r\n  border-color: #dc3545;\r\n  background-image: url(\"data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 12 12' width='12' height='12' fill='none' stroke='%23dc3545'%3e%3ccircle cx='6' cy='6' r='4.5'/%3e%3cpath stroke-linejoin='round' d='M5.8 3.6h.4L6 6.5z'/%3e%3ccircle cx='6' cy='8.2' r='.6' fill='%23dc3545' stroke='none'/%3e%3c/svg%3e\");\r\n  background-repeat: no-repeat;\r\n  background-position: right calc(0.375em + 0.1875rem) center;\r\n  background-size: calc(0.75em + 0.375rem) calc(0.75em + 0.375rem);\r\n}\r\n\r\n.invalid-feedback {\r\n  display: block;\r\n  width: 100%;\r\n  margin-top: 0.25rem;\r\n  font-size: 0.875em;\r\n  color: #dc3545;\r\n}\r\n\r\n/* Add sticky controls styles */\r\n.sticky-controls {\r\n  position: sticky;\r\n  top: 0;\r\n  background: white;\r\n  padding: 1rem;\r\n  z-index: 1040;\r\n  border-bottom: 1px solid #e2e8f0;\r\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.05);\r\n}\r\n\r\n/* Add pagination styles */\r\n.pagination-controls {\r\n  background: white;\r\n  padding: 1rem;\r\n  border-top: 1px solid #e2e8f0;\r\n}\r\n\r\n.pagination-info {\r\n  color: #4a5568;\r\n  font-size: 0.9rem;\r\n}\r\n\r\n.pagination-buttons .btn {\r\n  min-width: 100px;\r\n}\r\n\r\n/* Update table styles for fixed height */\r\n.table-responsive {\r\n  max-height: calc(100vh - 250px);\r\n  overflow-y: auto;\r\n}\r\n\r\n/* Ensure sticky header stays in place */\r\n.table thead th {\r\n  position: sticky;\r\n  top: 0;\r\n  background: white;\r\n  z-index: 1020;\r\n}\r\n\r\n/* Form Grid Layout */\r\n.form-grid {\r\n  display: grid;\r\n  grid-template-columns: repeat(2, 1fr);\r\n  gap: 1rem;\r\n}\r\n\r\n@media (max-width: 768px) {\r\n  .form-grid {\r\n    grid-template-columns: 1fr;\r\n  }\r\n}\r\n\r\n.form-group label {\r\n  font-weight: 500;\r\n  margin-bottom: 0.5rem;\r\n  color: #4a5568;\r\n}\r\n\r\n.input-group-text {\r\n  background-color: #f8fafc;\r\n  border-color: #e2e8f0;\r\n  color: #4a5568;\r\n}\r\n\r\n.form-control, .form-select {\r\n  border-color: #e2e8f0;\r\n  padding: 0.6rem 0.75rem;\r\n  transition: all 0.2s ease;\r\n}\r\n\r\n.form-control:focus, .form-select:focus {\r\n  border-color: #3182ce;\r\n  box-shadow: 0 0 0 0.25rem rgba(49, 130, 206, 0.15);\r\n}\r\n\r\n.form-footer {\r\n  border-top: 1px solid #e2e8f0;\r\n  padding-top: 1.5rem;\r\n}\r\n\r\n.text-danger {\r\n  color: #e53e3e !important;\r\n}\r\n\r\n/* Improved modal styling */\r\n.modal-content {\r\n  border: none;\r\n  border-radius: 12px;\r\n  box-shadow: 0 10px 25px -5px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n.modal-header {\r\n  border-top-left-radius: 12px;\r\n  border-top-right-radius: 12px;\r\n  padding: 1.25rem 1.5rem;\r\n}\r\n\r\n.modal-title {\r\n  font-weight: 600;\r\n  letter-spacing: -0.025em;\r\n}\r\n\r\n.modal-body {\r\n  padding: 1.5rem;\r\n  max-height: 70vh;\r\n  overflow-y: auto;\r\n}\r\n\r\n.btn {\r\n  padding: 0.6rem 1rem;\r\n  font-weight: 500;\r\n  border-radius: 0.375rem;\r\n  transition: all 0.2s ease;\r\n}\r\n\r\n.btn-success {\r\n  background-color: #10b981;\r\n  border-color: #10b981;\r\n}\r\n\r\n.btn-success:hover {\r\n  background-color: #059669;\r\n  border-color: #059669;\r\n}\r\n\r\n.btn-secondary {\r\n  background-color: #e2e8f0;\r\n  border-color: #e2e8f0;\r\n  color: #4a5568;\r\n}\r\n\r\n.btn-secondary:hover {\r\n  background-color: #cbd5e1;\r\n  border-color: #cbd5e1;\r\n  color: #1e293b;\r\n}\r\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}