{"ast":null,"code":"import \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.for-each.js\";\nimport \"core-js/modules/es.iterator.reduce.js\";\nimport { defineComponent } from 'vue';\nimport axios from 'axios';\nimport Chart from 'chart.js/auto';\nimport moment from 'moment';\nexport default defineComponent({\n  name: 'StudentDetailsModal',\n  props: {\n    show: {\n      type: Boolean,\n      required: true\n    },\n    student: {\n      type: Object,\n      required: true\n    },\n    yearLevel: {\n      type: String,\n      default: ''\n    },\n    section: {\n      type: String,\n      default: ''\n    },\n    subject: {\n      type: String,\n      default: ''\n    },\n    title: {\n      type: String,\n      default: 'Student Details'\n    },\n    chartTitle: {\n      type: String,\n      default: 'Performance Overview'\n    },\n    historyTitle: {\n      type: String,\n      default: 'History'\n    },\n    tableHeaders: {\n      type: Array,\n      default: () => ['Date', 'Status']\n    },\n    chartId: {\n      type: String,\n      default: 'studentChart'\n    },\n    isClassRecord: {\n      type: Boolean,\n      default: false\n    }\n  },\n  emits: ['close', 'update:show', 'date-filter-change', 'filter-change', 'assessment-type-change'],\n  data() {\n    const today = new Date().toISOString().split('T')[0];\n    const thirtyDaysAgo = new Date();\n    thirtyDaysAgo.setDate(thirtyDaysAgo.getDate() - 30);\n    const thirtyDaysAgoStr = thirtyDaysAgo.toISOString().split('T')[0];\n    return {\n      dateFilter: {\n        start: thirtyDaysAgoStr,\n        end: today\n      },\n      selectedAssessmentType: 'All',\n      attendanceData: {\n        labels: ['Present', 'Late', 'Absent'],\n        values: [0, 0, 0]\n      },\n      attendanceChart: null,\n      assessmentChart: null,\n      isLoading: false\n    };\n  },\n  mounted() {\n    // Apply initial filter when component is mounted\n    this.applyFilter();\n  },\n  watch: {\n    show(newVal) {\n      if (newVal) {\n        // Initialize charts when modal is shown\n        this.$nextTick(() => {\n          this.fetchAttendanceData();\n          if (this.isClassRecord) {\n            this.initializeClassRecordChart();\n          } else {\n            this.initializeAttendanceChart();\n          }\n        });\n      }\n    }\n  },\n  methods: {\n    closeModal() {\n      // Destroy charts before closing\n      if (this.attendanceChart) {\n        this.attendanceChart.destroy();\n        this.attendanceChart = null;\n      }\n      if (this.assessmentChart) {\n        this.assessmentChart.destroy();\n        this.assessmentChart = null;\n      }\n      this.$emit('update:show', false);\n      this.$emit('close');\n    },\n    handleDateFilterChange() {\n      // Date inputs change handler - we don't auto-apply\n      console.log('Date filter changed:', this.dateFilter);\n    },\n    applyFilter() {\n      console.log('Applying filter:', this.dateFilter);\n      this.$emit('filter-change', this.dateFilter);\n\n      // Refresh charts with new date filter\n      this.fetchAttendanceData();\n      if (this.isClassRecord) {\n        this.initializeClassRecordChart();\n      } else {\n        this.initializeAttendanceChart();\n      }\n    },\n    fetchAttendanceData() {\n      if (!this.show || !this.student || !this.student.studentId) return;\n      this.isLoading = true;\n\n      // Get token from localStorage\n      const token = localStorage.getItem('token') || '';\n      const api = axios.create({\n        baseURL: 'http://localhost:8000/api',\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json'\n        }\n      });\n      api.get(`/attendance/${this.student.studentId}/history`, {\n        params: {\n          startDate: this.dateFilter.start,\n          endDate: this.dateFilter.end,\n          section: this.section,\n          year: this.yearLevel\n        }\n      }).then(response => {\n        // Process attendance data\n        if (response.data && response.data.records) {\n          const records = response.data.records || [];\n\n          // Count occurrences of each status\n          const counts = {\n            present: 0,\n            late: 0,\n            absent: 0\n          };\n          records.forEach(record => {\n            if (record.status in counts) {\n              counts[record.status]++;\n            }\n          });\n\n          // Update the attendance data\n          this.attendanceData = {\n            labels: ['Present', 'Late', 'Absent'],\n            values: [counts.present, counts.late, counts.absent]\n          };\n\n          // Update the chart if it exists\n          if (!this.isClassRecord) {\n            this.updateAttendanceChart();\n          }\n        }\n      }).catch(error => {\n        console.error('Error fetching attendance data:', error);\n        // Set default attendance data on error\n        this.attendanceData = {\n          labels: ['Present', 'Late', 'Absent'],\n          values: [0, 0, 0]\n        };\n      }).finally(() => {\n        this.isLoading = false;\n      });\n    },\n    initializeAttendanceChart() {\n      const ctx = document.getElementById(this.chartId);\n      if (!ctx) return;\n\n      // Destroy previous chart if it exists\n      if (this.attendanceChart) {\n        this.attendanceChart.destroy();\n      }\n\n      // Create attendance chart\n      this.attendanceChart = new Chart(ctx, {\n        type: 'doughnut',\n        data: {\n          labels: this.attendanceData.labels,\n          datasets: [{\n            data: this.attendanceData.values,\n            backgroundColor: ['#10b981', '#f59e0b', '#ef4444'],\n            borderWidth: 0,\n            hoverOffset: 4\n          }]\n        },\n        options: {\n          responsive: true,\n          maintainAspectRatio: false,\n          cutout: '70%',\n          plugins: {\n            legend: {\n              position: 'bottom',\n              labels: {\n                usePointStyle: true,\n                padding: 15,\n                font: {\n                  size: 12\n                }\n              }\n            },\n            tooltip: {\n              callbacks: {\n                label: function (context) {\n                  const label = context.label || '';\n                  const value = context.raw || 0;\n                  const total = context.chart.data.datasets[0].data.reduce((a, b) => a + b, 0);\n                  const percentage = total > 0 ? Math.round(value / total * 100) : 0;\n                  return `${label}: ${value} (${percentage}%)`;\n                }\n              }\n            }\n          }\n        }\n      });\n    },\n    updateAttendanceChart() {\n      if (!this.attendanceChart) {\n        this.initializeAttendanceChart();\n        return;\n      }\n\n      // Update chart data\n      this.attendanceChart.data.labels = this.attendanceData.labels;\n      this.attendanceChart.data.datasets[0].data = this.attendanceData.values;\n\n      // Update chart\n      this.attendanceChart.update();\n    },\n    initializeClassRecordChart() {\n      // Implementation for class record chart\n      // This would be similar to attendance chart but with assessment data\n      const ctx = document.getElementById(`all-${this.chartId}`);\n      if (!ctx) return;\n\n      // This would be implemented based on assessment data\n      // For now just a placeholder\n    },\n    changeAssessmentType(type) {\n      console.log('Changing assessment type to:', type);\n      this.selectedAssessmentType = type;\n      this.$emit('assessment-type-change', type);\n    }\n  }\n});","map":{"version":3,"names":["defineComponent","axios","Chart","moment","name","props","show","type","Boolean","required","student","Object","yearLevel","String","default","section","subject","title","chartTitle","historyTitle","tableHeaders","Array","chartId","isClassRecord","emits","data","today","Date","toISOString","split","thirtyDaysAgo","setDate","getDate","thirtyDaysAgoStr","dateFilter","start","end","selectedAssessmentType","attendanceData","labels","values","attendanceChart","assessmentChart","isLoading","mounted","applyFilter","watch","newVal","$nextTick","fetchAttendanceData","initializeClassRecordChart","initializeAttendanceChart","methods","closeModal","destroy","$emit","handleDateFilterChange","console","log","studentId","token","localStorage","getItem","api","create","baseURL","headers","get","params","startDate","endDate","year","then","response","records","counts","present","late","absent","forEach","record","status","updateAttendanceChart","catch","error","finally","ctx","document","getElementById","datasets","backgroundColor","borderWidth","hoverOffset","options","responsive","maintainAspectRatio","cutout","plugins","legend","position","usePointStyle","padding","font","size","tooltip","callbacks","label","context","value","raw","total","chart","reduce","a","b","percentage","Math","round","update","changeAssessmentType"],"sources":["D:\\au_dev\\client\\src\\components\\modals\\StudentDetailsModal.vue"],"sourcesContent":["<template>\n  <teleport to=\"body\">\n    <div v-if=\"show\" class=\"modal-overlay\" @click.self=\"closeModal\">\n      <div class=\"modal-wrapper\" @click.stop>\n        <div class=\"modal-dialog modal-xxl\">\n          <div class=\"modal-content\">\n            <div class=\"modal-header bg-primary text-white\">\n              <h5 class=\"modal-title\">\n                <i class=\"fas fa-user-graduate me-2\"></i>\n                {{ title }}\n              </h5>\n              <button type=\"button\" class=\"btn-close btn-close-white\" @click=\"closeModal\"></button>\n            </div>\n            <div class=\"modal-body\">\n              <div class=\"student-details\">\n                <!-- Student Information (Left Side) -->\n                <div class=\"student-info\">\n                  <h6 class=\"info-title\">Student Information</h6>\n                  <div class=\"info-content\">\n                    <p><strong>Student ID:</strong> {{ student?.studentNumber }}</p>\n                    <p><strong>Name:</strong> {{ student?.firstName }} {{ student?.lastName }}</p>\n                    <p><strong>Year Level:</strong> {{ yearLevel }}</p>\n                    <p><strong>Section:</strong> {{ section }}</p>\n                    <p><strong>Subject:</strong> {{ subject }}</p>\n                    <slot name=\"additional-info\"></slot>\n                  </div>\n                </div>\n\n                <!-- Performance and Data (Right Side) -->\n                <div class=\"student-charts\">\n                  <!-- Date Filter (Common for both class records and attendance) -->\n                  <div class=\"chart-controls mb-3\">\n                    <div class=\"date-filter\">\n                      <div class=\"input-group input-group-sm\">\n                        <span class=\"input-group-text\">From</span>\n                        <input \n                          type=\"date\" \n                          class=\"form-control\" \n                          v-model=\"dateFilter.start\"\n                          @change=\"handleDateFilterChange\"\n                        >\n                        <span class=\"input-group-text\">To</span>\n                        <input \n                          type=\"date\" \n                          class=\"form-control\" \n                          v-model=\"dateFilter.end\"\n                          @change=\"handleDateFilterChange\"\n                        >\n                        <button class=\"btn btn-primary\" @click=\"applyFilter\">\n                          <i class=\"fas fa-filter me-1\"></i> Apply\n                        </button>\n                      </div>\n                    </div>\n                  </div>\n\n                  <!-- Class Records Chart -->\n                  <div v-if=\"isClassRecord\" class=\"chart-section\">\n                    <h6>Assessment Performance</h6>\n                    <div class=\"chart-container\" style=\"height: 400px;\">\n                      <canvas :id=\"`all-${chartId}`\"></canvas>\n                    </div>\n                  </div>\n                  \n                  <!-- Attendance Chart -->\n                  <div v-else class=\"chart-section\">\n                    <h6>{{ chartTitle }}</h6>\n                    <div class=\"chart-container\" style=\"height: 400px;\">\n                      <canvas :id=\"chartId\"></canvas>\n                    </div>\n                  </div>\n                  \n                  <!-- History Section -->\n                  <div class=\"chart-section\">\n                    <h6>{{ historyTitle }}</h6>\n                    <div class=\"table-responsive data-table\">\n                      <slot name=\"history-table\">\n                        <!-- Default history table if no slot provided -->\n                        <table class=\"table\">\n                          <thead>\n                            <tr>\n                              <th v-for=\"header in tableHeaders\" :key=\"header\">{{ header }}</th>\n                            </tr>\n                          </thead>\n                          <tbody>\n                            <slot name=\"table-rows\">\n                              <tr>\n                                <td colspan=\"100%\" class=\"text-center py-3 text-muted\">\n                                  <i class=\"fas fa-info-circle me-2\"></i>No records found.\n                                </td>\n                              </tr>\n                            </slot>\n                          </tbody>\n                        </table>\n                      </slot>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n            <div class=\"modal-footer\">\n              <button type=\"button\" class=\"btn btn-secondary\" @click=\"closeModal\">\n                <i class=\"fas fa-times me-2\"></i>Close\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div class=\"modal-backdrop\" @click=\"closeModal\"></div>\n    </div>\n  </teleport>\n</template>\n\n<script>\nimport { defineComponent } from 'vue'\nimport axios from 'axios'\nimport Chart from 'chart.js/auto'\nimport moment from 'moment'\n\nexport default defineComponent({\n  name: 'StudentDetailsModal',\n  \n  props: {\n    show: {\n      type: Boolean,\n      required: true\n    },\n    student: {\n      type: Object,\n      required: true\n    },\n    yearLevel: {\n      type: String,\n      default: ''\n    },\n    section: {\n      type: String,\n      default: ''\n    },\n    subject: {\n      type: String,\n      default: ''\n    },\n    title: {\n      type: String,\n      default: 'Student Details'\n    },\n    chartTitle: {\n      type: String,\n      default: 'Performance Overview'\n    },\n    historyTitle: {\n      type: String,\n      default: 'History'\n    },\n    tableHeaders: {\n      type: Array,\n      default: () => ['Date', 'Status']\n    },\n    chartId: {\n      type: String,\n      default: 'studentChart'\n    },\n    isClassRecord: {\n      type: Boolean,\n      default: false\n    }\n  },\n\n  emits: ['close', 'update:show', 'date-filter-change', 'filter-change', 'assessment-type-change'],\n\n  data() {\n    const today = new Date().toISOString().split('T')[0];\n    const thirtyDaysAgo = new Date();\n    thirtyDaysAgo.setDate(thirtyDaysAgo.getDate() - 30);\n    const thirtyDaysAgoStr = thirtyDaysAgo.toISOString().split('T')[0];\n    \n    return {\n      dateFilter: {\n        start: thirtyDaysAgoStr,\n        end: today\n      },\n      selectedAssessmentType: 'All',\n      attendanceData: {\n        labels: ['Present', 'Late', 'Absent'],\n        values: [0, 0, 0]\n      },\n      attendanceChart: null,\n      assessmentChart: null,\n      isLoading: false\n    }\n  },\n\n  mounted() {\n    // Apply initial filter when component is mounted\n    this.applyFilter();\n  },\n\n  watch: {\n    show(newVal) {\n      if (newVal) {\n        // Initialize charts when modal is shown\n        this.$nextTick(() => {\n          this.fetchAttendanceData();\n          if (this.isClassRecord) {\n            this.initializeClassRecordChart();\n          } else {\n            this.initializeAttendanceChart();\n          }\n        });\n      }\n    }\n  },\n\n  methods: {\n    closeModal() {\n      // Destroy charts before closing\n      if (this.attendanceChart) {\n        this.attendanceChart.destroy();\n        this.attendanceChart = null;\n      }\n      if (this.assessmentChart) {\n        this.assessmentChart.destroy();\n        this.assessmentChart = null;\n      }\n      \n      this.$emit('update:show', false)\n      this.$emit('close')\n    },\n\n    handleDateFilterChange() {\n      // Date inputs change handler - we don't auto-apply\n      console.log('Date filter changed:', this.dateFilter);\n    },\n\n    applyFilter() {\n      console.log('Applying filter:', this.dateFilter);\n      this.$emit('filter-change', this.dateFilter);\n      \n      // Refresh charts with new date filter\n      this.fetchAttendanceData();\n      if (this.isClassRecord) {\n        this.initializeClassRecordChart();\n      } else {\n        this.initializeAttendanceChart();\n      }\n    },\n\n    fetchAttendanceData() {\n      if (!this.show || !this.student || !this.student.studentId) return;\n      \n      this.isLoading = true;\n      \n      // Get token from localStorage\n      const token = localStorage.getItem('token') || '';\n      \n      const api = axios.create({\n        baseURL: 'http://localhost:8000/api',\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json'\n        }\n      });\n      \n      api.get(`/attendance/${this.student.studentId}/history`, {\n        params: {\n          startDate: this.dateFilter.start,\n          endDate: this.dateFilter.end,\n          section: this.section,\n          year: this.yearLevel\n        }\n      })\n      .then(response => {\n        // Process attendance data\n        if (response.data && response.data.records) {\n          const records = response.data.records || [];\n          \n          // Count occurrences of each status\n          const counts = {\n            present: 0,\n            late: 0,\n            absent: 0\n          };\n          \n          records.forEach(record => {\n            if (record.status in counts) {\n              counts[record.status]++;\n            }\n          });\n          \n          // Update the attendance data\n          this.attendanceData = {\n            labels: ['Present', 'Late', 'Absent'],\n            values: [counts.present, counts.late, counts.absent]\n          };\n          \n          // Update the chart if it exists\n          if (!this.isClassRecord) {\n            this.updateAttendanceChart();\n          }\n        }\n      })\n      .catch(error => {\n        console.error('Error fetching attendance data:', error);\n        // Set default attendance data on error\n        this.attendanceData = {\n          labels: ['Present', 'Late', 'Absent'],\n          values: [0, 0, 0]\n        };\n      })\n      .finally(() => {\n        this.isLoading = false;\n      });\n    },\n\n    initializeAttendanceChart() {\n      const ctx = document.getElementById(this.chartId);\n      if (!ctx) return;\n      \n      // Destroy previous chart if it exists\n      if (this.attendanceChart) {\n        this.attendanceChart.destroy();\n      }\n      \n      // Create attendance chart\n      this.attendanceChart = new Chart(ctx, {\n        type: 'doughnut',\n        data: {\n          labels: this.attendanceData.labels,\n          datasets: [{\n            data: this.attendanceData.values,\n            backgroundColor: ['#10b981', '#f59e0b', '#ef4444'],\n            borderWidth: 0,\n            hoverOffset: 4\n          }]\n        },\n        options: {\n          responsive: true,\n          maintainAspectRatio: false,\n          cutout: '70%',\n          plugins: {\n            legend: {\n              position: 'bottom',\n              labels: {\n                usePointStyle: true,\n                padding: 15,\n                font: {\n                  size: 12\n                }\n              }\n            },\n            tooltip: {\n              callbacks: {\n                label: function(context) {\n                  const label = context.label || '';\n                  const value = context.raw || 0;\n                  const total = context.chart.data.datasets[0].data.reduce((a, b) => a + b, 0);\n                  const percentage = total > 0 ? Math.round((value / total) * 100) : 0;\n                  return `${label}: ${value} (${percentage}%)`;\n                }\n              }\n            }\n          }\n        }\n      });\n    },\n\n    updateAttendanceChart() {\n      if (!this.attendanceChart) {\n        this.initializeAttendanceChart();\n        return;\n      }\n      \n      // Update chart data\n      this.attendanceChart.data.labels = this.attendanceData.labels;\n      this.attendanceChart.data.datasets[0].data = this.attendanceData.values;\n      \n      // Update chart\n      this.attendanceChart.update();\n    },\n\n    initializeClassRecordChart() {\n      // Implementation for class record chart\n      // This would be similar to attendance chart but with assessment data\n      const ctx = document.getElementById(`all-${this.chartId}`);\n      if (!ctx) return;\n\n      // This would be implemented based on assessment data\n      // For now just a placeholder\n    },\n\n    changeAssessmentType(type) {\n      console.log('Changing assessment type to:', type);\n      this.selectedAssessmentType = type;\n      this.$emit('assessment-type-change', type);\n    }\n  }\n})\n</script>\n\n<style scoped>\n/* Base z-index hierarchy */\n:root {\n  --z-modal-backdrop: 9999;\n  --z-modal-wrapper: 10000;\n  --z-modal-content: 10001;\n  --z-table-header: 10002;\n}\n\n.modal-overlay {\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100vw;\n  height: 100vh;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  z-index: 10000;\n}\n\n.modal-backdrop {\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100vw;\n  height: 100vh;\n  background-color: rgba(0, 0, 0, 0.5);\n  backdrop-filter: blur(4px);\n  z-index: 9999;\n  cursor: pointer;\n}\n\n.modal-wrapper {\n  position: relative;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  z-index: 10001;\n}\n\n.modal-dialog {\n  position: relative;\n  width: 90%;\n  max-width: 1200px;\n  margin: 1.75rem auto;\n  pointer-events: auto;\n}\n\n.modal-content {\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  pointer-events: auto;\n  background-color: #fff;\n  background-clip: padding-box;\n  border: none;\n  border-radius: 0.5rem;\n  box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.15);\n  outline: 0;\n  max-height: calc(100vh - 3.5rem);\n  overflow: hidden;\n}\n\n.modal-header {\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: 1.5rem;\n  border-bottom: 1px solid #dee2e6;\n  border-top-left-radius: calc(0.5rem - 1px);\n  border-top-right-radius: calc(0.5rem - 1px);\n}\n\n.modal-body {\n  position: relative;\n  flex: 1 1 auto;\n  padding: 1.5rem;\n  overflow-y: auto;\n}\n\n/* Student details layout */\n.student-details {\n  display: grid;\n  grid-template-columns: 300px 1fr;\n  gap: 1.5rem;\n}\n\n.student-info {\n  background: #f8fafc;\n  padding: 2rem;\n  border-radius: 12px;\n  height: fit-content;\n  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);\n}\n\n.info-title {\n  color: #2d3748;\n  font-size: 1.4rem;\n  font-weight: 600;\n  margin-bottom: 2rem;\n  padding-bottom: 1rem;\n  border-bottom: 2px solid #e2e8f0;\n}\n\n.info-content p {\n  margin-bottom: 1.25rem;\n  padding-bottom: 1.25rem;\n  border-bottom: 1px solid #e2e8f0;\n  font-size: 1.2rem;\n  line-height: 1.5;\n}\n\n.info-content strong {\n  color: #4a5568;\n  display: inline-block;\n  width: 160px;\n  font-weight: 600;\n}\n\n.student-charts {\n  display: flex;\n  flex-direction: column;\n  gap: 1.5rem;\n}\n\n.charts-container {\n  display: grid;\n  grid-template-columns: 1fr;\n  gap: 1.5rem;\n}\n\n.chart-section {\n  background: white;\n  border-radius: 12px;\n  padding: 2rem;\n  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);\n  margin-bottom: 0;\n  position: relative;\n  overflow: hidden;\n}\n\n.chart-section::before {\n  content: '';\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 5px;\n  background: linear-gradient(to right, #4285F4, #34A853, #FBBC05, #EA4335);\n}\n\n.chart-section h6 {\n  color: #2d3748;\n  font-size: 1.2rem;\n  font-weight: 600;\n  margin-bottom: 1.5rem;\n  display: flex;\n  align-items: center;\n}\n\n.chart-section h6::before {\n  content: '\\f080';\n  font-family: 'Font Awesome 5 Free';\n  font-weight: 900;\n  margin-right: 0.75rem;\n  color: #4285F4;\n}\n\n.chart-container {\n  position: relative;\n  width: 100%;\n  height: 400px !important;\n  background: linear-gradient(to bottom, rgba(249, 250, 251, 0.5), rgba(249, 250, 251, 0));\n  border-radius: 8px;\n  padding: 1rem;\n}\n\n.data-table {\n  margin-top: 1.5rem;\n  border-radius: 8px;\n  overflow: hidden;\n}\n\n.data-table th {\n  font-size: 1.1rem;\n  font-weight: 600;\n  color: #2d3748;\n  background: #f8fafc;\n  position: sticky;\n  top: 0;\n  z-index: var(--z-table-header);\n  padding: 0.75rem 1rem;\n  border-bottom: 2px solid #e2e8f0;\n}\n\n.data-table td {\n  font-size: 1.1rem;\n  color: #4a5568;\n  padding: 0.75rem 1rem;\n  border-bottom: 1px solid #e2e8f0;\n}\n\n.data-table tr:hover {\n  background-color: #f8fafc;\n}\n\n.btn-close-white {\n  filter: brightness(0) invert(1);\n}\n\n/* Responsive adjustments */\n@media (max-width: 1200px) {\n  .modal-dialog {\n    margin-right: 1rem;\n    max-width: 90%;\n  }\n}\n\n@media (max-width: 992px) {\n  .student-details {\n    grid-template-columns: 1fr;\n  }\n  \n  .student-info {\n    margin-bottom: 1.5rem;\n  }\n}\n\n.modal-footer {\n  border-top: 1px solid #e2e8f0;\n  padding: 1rem 1.5rem;\n  display: flex;\n  justify-content: flex-end;\n}\n\n.chart-controls {\n  display: flex;\n  justify-content: flex-end;\n  align-items: center;\n  background: #f8fafc;\n  padding: 1rem;\n  border-radius: 8px;\n  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.05);\n}\n\n.date-filter {\n  width: 100%;\n}\n\n.date-filter .input-group {\n  display: flex;\n  align-items: center;\n}\n\n.date-filter .input-group-text {\n  background-color: #f1f5f9;\n  border-color: #e2e8f0;\n  color: #4a5568;\n  font-weight: 500;\n}\n\n.date-filter .form-control {\n  border-color: #e2e8f0;\n  color: #4a5568;\n  font-weight: 500;\n}\n\n.date-filter .btn {\n  margin-left: 8px;\n}\n</style> "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}