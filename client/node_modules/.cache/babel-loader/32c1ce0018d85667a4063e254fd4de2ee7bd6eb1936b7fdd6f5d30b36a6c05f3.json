{"ast":null,"code":"import { openBlock as _openBlock, createBlock as _createBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createBlock($setup[\"Bar\"], {\n    data: $setup.data,\n    options: $setup.options\n  }, null, 8 /* PROPS */, [\"data\", \"options\"]);\n}","map":{"version":3,"names":["_createBlock","$setup","data","options"],"sources":["D:\\au_dev\\client\\src\\components\\StudentAssessmentChart.vue"],"sourcesContent":["<template>\r\n    <Bar :data=\"data\" :options=\"options\" />\r\n</template>\r\n\r\n<script setup>\r\nimport {\r\n    Chart as ChartJS,\r\n    Title,\r\n    Tooltip,\r\n    Legend,\r\n    BarElement,\r\n    CategoryScale,\r\n    LinearScale\r\n} from 'chart.js'\r\nimport { ref } from 'vue'\r\nimport { Bar } from 'vue-chartjs'\r\n\r\nconst props = defineProps({\r\n    assessments: Array,\r\n    studentId: String\r\n})\r\n\r\nconst myAssessments = ref([])\r\n\r\nprops.assessments.map((assess) => {\r\n    Object.entries(assess?.scores).forEach(([id, score]) => {\r\n        if (id === props.studentId) {\r\n            myAssessments.value.push({\r\n                ...assess,\r\n                scores: score\r\n            })\r\n            return;\r\n        } else {\r\n            console.log(id);\r\n        }\r\n    })\r\n})\r\n\r\nChartJS.register(CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend)\r\n\r\nconst options = ref({\r\n    //   responsive: true,\r\n    //   maintainAspectRatio: false\r\n})\r\n\r\nconst data = ref({\r\n    labels: myAssessments.value.map(a => `${a.subject} (${a.type})`),\r\n    datasets: [\r\n        {\r\n            label: 'Max Score',\r\n            backgroundColor: '#ef4444',\r\n            data: myAssessments.value.map(a => a.maxScore)\r\n        },\r\n        {\r\n            label: \"Student's Score\",\r\n            backgroundColor: '#10b981',\r\n            data: myAssessments.value.map(a => a.scores)\r\n        }\r\n    ]\r\n\r\n})\r\n</script>"],"mappings":";;uBACIA,YAAA,CAAuCC,MAAA;IAAjCC,IAAI,EAAED,MAAA,CAAAC,IAAI;IAAGC,OAAO,EAAEF,MAAA,CAAAE","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}