{"ast":null,"code":"import { createElementVNode as _createElementVNode, createTextVNode as _createTextVNode, vModelText as _vModelText, withDirectives as _withDirectives, createCommentVNode as _createCommentVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, Fragment as _Fragment, renderList as _renderList } from \"vue\";\nconst _hoisted_1 = {\n  class: \"completed-surveys\"\n};\nconst _hoisted_2 = {\n  class: \"container\"\n};\nconst _hoisted_3 = {\n  class: \"d-flex justify-content-between align-items-center mb-4\"\n};\nconst _hoisted_4 = {\n  class: \"filters d-flex align-items-center gap-3\"\n};\nconst _hoisted_5 = {\n  class: \"search-box\"\n};\nconst _hoisted_6 = {\n  class: \"input-group\"\n};\nconst _hoisted_7 = {\n  key: 0,\n  class: \"text-center my-5\"\n};\nconst _hoisted_8 = {\n  class: \"card no-results\"\n};\nconst _hoisted_9 = {\n  class: \"card-body text-center py-5\"\n};\nconst _hoisted_10 = {\n  class: \"text-muted\"\n};\nconst _hoisted_11 = {\n  class: \"card\"\n};\nconst _hoisted_12 = {\n  class: \"card-body p-0\"\n};\nconst _hoisted_13 = {\n  class: \"table-responsive\"\n};\nconst _hoisted_14 = {\n  class: \"table table-hover survey-table mb-0\"\n};\nconst _hoisted_15 = {\n  class: \"btn-group\"\n};\nconst _hoisted_16 = [\"onClick\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"div\", _hoisted_3, [_cache[2] || (_cache[2] = _createElementVNode(\"h2\", {\n    class: \"page-title\"\n  }, [_createElementVNode(\"i\", {\n    class: \"fas fa-clipboard-check me-2\"\n  }), _createTextVNode(\" Completed Surveys \")], -1 /* HOISTED */)), _createElementVNode(\"div\", _hoisted_4, [_createElementVNode(\"div\", _hoisted_5, [_createElementVNode(\"div\", _hoisted_6, [_withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    class: \"form-control\",\n    placeholder: \"Search student...\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $setup.searchQuery = $event)\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $setup.searchQuery]]), _cache[1] || (_cache[1] = _createElementVNode(\"span\", {\n    class: \"input-group-text\"\n  }, [_createElementVNode(\"i\", {\n    class: \"fas fa-search\"\n  })], -1 /* HOISTED */))])])])]), _createCommentVNode(\" Loading State \"), $setup.loading ? (_openBlock(), _createElementBlock(\"div\", _hoisted_7, _cache[3] || (_cache[3] = [_createElementVNode(\"div\", {\n    class: \"spinner-border text-primary\",\n    role: \"status\"\n  }, [_createElementVNode(\"span\", {\n    class: \"visually-hidden\"\n  }, \"Loading...\")], -1 /* HOISTED */), _createElementVNode(\"p\", {\n    class: \"mt-2\"\n  }, \"Loading completed surveys...\", -1 /* HOISTED */)]))) : !$setup.loading && $setup.filteredSurveys.length === 0 ? (_openBlock(), _createElementBlock(_Fragment, {\n    key: 1\n  }, [_createCommentVNode(\" No Results \"), _createElementVNode(\"div\", _hoisted_8, [_createElementVNode(\"div\", _hoisted_9, [_cache[4] || (_cache[4] = _createElementVNode(\"i\", {\n    class: \"fas fa-clipboard fa-3x mb-3 text-muted\"\n  }, null, -1 /* HOISTED */)), _cache[5] || (_cache[5] = _createElementVNode(\"h5\", null, \"No Completed Surveys Found\", -1 /* HOISTED */)), _createElementVNode(\"p\", _hoisted_10, _toDisplayString($setup.searchQuery ? \"No students match your search query.\" : \"No students have completed surveys yet.\"), 1 /* TEXT */)])])], 2112 /* STABLE_FRAGMENT, DEV_ROOT_FRAGMENT */)) : (_openBlock(), _createElementBlock(_Fragment, {\n    key: 2\n  }, [_createCommentVNode(\" Results Table \"), _createElementVNode(\"div\", _hoisted_11, [_createElementVNode(\"div\", _hoisted_12, [_createElementVNode(\"div\", _hoisted_13, [_createElementVNode(\"table\", _hoisted_14, [_cache[7] || (_cache[7] = _createElementVNode(\"thead\", null, [_createElementVNode(\"tr\", null, [_createElementVNode(\"th\", null, \"Student ID\"), _createElementVNode(\"th\", null, \"Student Name\"), _createElementVNode(\"th\", null, \"Submission Date\"), _createElementVNode(\"th\", null, \"Actions\")])], -1 /* HOISTED */)), _createElementVNode(\"tbody\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.filteredSurveys, survey => {\n    return _openBlock(), _createElementBlock(\"tr\", {\n      key: survey._id\n    }, [_createElementVNode(\"td\", null, _toDisplayString(survey.studentId), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(survey.studentName), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString($setup.formatDate(survey.updatedAt)), 1 /* TEXT */), _createElementVNode(\"td\", null, [_createElementVNode(\"div\", _hoisted_15, [_createElementVNode(\"button\", {\n      class: \"btn btn-sm btn-outline-primary\",\n      onClick: $event => $setup.viewSurveyResults(survey._id),\n      title: \"View Survey Responses\"\n    }, [...(_cache[6] || (_cache[6] = [_createElementVNode(\"i\", {\n      class: \"fas fa-eye\"\n    }, null, -1 /* HOISTED */)]))], 8 /* PROPS */, _hoisted_16)])])]);\n  }), 128 /* KEYED_FRAGMENT */))])])])])])], 2112 /* STABLE_FRAGMENT, DEV_ROOT_FRAGMENT */))])]);\n}","map":{"version":3,"names":["class","key","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","_hoisted_3","_createTextVNode","_hoisted_4","_hoisted_5","_hoisted_6","type","placeholder","_cache","$event","$setup","searchQuery","_createCommentVNode","loading","_hoisted_7","role","filteredSurveys","length","_Fragment","_hoisted_8","_hoisted_9","_hoisted_10","_toDisplayString","_hoisted_11","_hoisted_12","_hoisted_13","_hoisted_14","_renderList","survey","_id","studentId","studentName","formatDate","updatedAt","_hoisted_15","onClick","viewSurveyResults","title","_hoisted_16"],"sources":["D:\\au_dev\\client\\src\\views\\CompletedSurveys.vue"],"sourcesContent":["<template>\r\n  <div class=\"completed-surveys\">\r\n    <div class=\"container\">\r\n      <div class=\"d-flex justify-content-between align-items-center mb-4\">\r\n        <h2 class=\"page-title\">\r\n          <i class=\"fas fa-clipboard-check me-2\"></i>\r\n          Completed Surveys\r\n        </h2>\r\n\r\n        <div class=\"filters d-flex align-items-center gap-3\">\r\n          <div class=\"search-box\">\r\n            <div class=\"input-group\">\r\n              <input \r\n                type=\"text\" \r\n                class=\"form-control\" \r\n                placeholder=\"Search student...\" \r\n                v-model=\"searchQuery\"\r\n              >\r\n              <span class=\"input-group-text\">\r\n                <i class=\"fas fa-search\"></i>\r\n              </span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- Loading State -->\r\n      <div class=\"text-center my-5\" v-if=\"loading\">\r\n        <div class=\"spinner-border text-primary\" role=\"status\">\r\n          <span class=\"visually-hidden\">Loading...</span>\r\n        </div>\r\n        <p class=\"mt-2\">Loading completed surveys...</p>\r\n      </div>\r\n\r\n      <!-- No Results -->\r\n      <div class=\"card no-results\" v-else-if=\"!loading && filteredSurveys.length === 0\">\r\n        <div class=\"card-body text-center py-5\">\r\n          <i class=\"fas fa-clipboard fa-3x mb-3 text-muted\"></i>\r\n          <h5>No Completed Surveys Found</h5>\r\n          <p class=\"text-muted\">\r\n            {{ searchQuery ? \"No students match your search query.\" : \"No students have completed surveys yet.\" }}\r\n          </p>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- Results Table -->\r\n      <div class=\"card\" v-else>\r\n        <div class=\"card-body p-0\">\r\n          <div class=\"table-responsive\">\r\n            <table class=\"table table-hover survey-table mb-0\">\r\n              <thead>\r\n                <tr>\r\n                  <th>Student ID</th>\r\n                  <th>Student Name</th>\r\n                  <th>Submission Date</th>\r\n                  <th>Actions</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                <tr v-for=\"survey in filteredSurveys\" :key=\"survey._id\">\r\n                  <td>{{ survey.studentId }}</td>\r\n                  <td>{{ survey.studentName }}</td>\r\n                  <td>{{ formatDate(survey.updatedAt) }}</td>\r\n                  <td>\r\n                    <div class=\"btn-group\">\r\n                      <button \r\n                        class=\"btn btn-sm btn-outline-primary\" \r\n                        @click=\"viewSurveyResults(survey._id)\"\r\n                        title=\"View Survey Responses\"\r\n                      >\r\n                        <i class=\"fas fa-eye\"></i>\r\n                      </button>\r\n                    </div>\r\n                  </td>\r\n                </tr>\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, computed, onMounted } from 'vue'\r\nimport { useStore } from 'vuex'\r\nimport axios from 'axios'\r\nimport moment from 'moment'\r\n\r\nconst store = useStore()\r\nconst surveys = ref([])\r\nconst loading = ref(true)\r\nconst searchQuery = ref('')\r\n\r\n// Filter surveys based on search query\r\nconst filteredSurveys = computed(() => {\r\n  if (!searchQuery.value) return surveys.value\r\n  \r\n  const query = searchQuery.value.toLowerCase()\r\n  return surveys.value.filter(survey => \r\n    survey.studentId.toLowerCase().includes(query) || \r\n    survey.studentName.toLowerCase().includes(query)\r\n  )\r\n})\r\n\r\n// Format date\r\nconst formatDate = (dateString) => {\r\n  return moment(dateString).format('MMM D, YYYY h:mm A')\r\n}\r\n\r\n// Fetch all submitted surveys\r\nconst fetchCompletedSurveys = async () => {\r\n  try {\r\n    loading.value = true\r\n    const token = store.state.auth.token\r\n    \r\n    // Get all completed surveys\r\n    const response = await axios.get('http://localhost:8000/api/survey/submitted', {\r\n      headers: { 'Authorization': `Bearer ${token}` }\r\n    })\r\n    \r\n    if (response.data) {\r\n      surveys.value = response.data\r\n    }\r\n  } catch (error) {\r\n    console.error('Error fetching completed surveys:', error)\r\n    surveys.value = []\r\n  } finally {\r\n    loading.value = false\r\n  }\r\n}\r\n\r\n// View survey results\r\nconst viewSurveyResults = (surveyId) => {\r\n  // Implement view functionality - could open a modal or navigate to details\r\n  console.log('View survey', surveyId)\r\n  // You can add detailed view implementation later\r\n}\r\n\r\nonMounted(() => {\r\n  fetchCompletedSurveys()\r\n})\r\n</script>\r\n\r\n<style scoped>\r\n.completed-surveys {\r\n  padding: 2rem;\r\n  background-color: #f8f9fa;\r\n  min-height: 100vh;\r\n}\r\n\r\n.page-title {\r\n  font-size: 1.75rem;\r\n  font-weight: 700;\r\n  color: #003366;\r\n  margin-bottom: 1rem;\r\n}\r\n\r\n.search-box .input-group {\r\n  width: 280px;\r\n}\r\n\r\n.search-box .form-control {\r\n  border-right: none;\r\n}\r\n\r\n.search-box .input-group-text {\r\n  background-color: white;\r\n  border-left: none;\r\n}\r\n\r\n.survey-table th {\r\n  font-weight: 600;\r\n  color: #4a5568;\r\n  padding: 1rem;\r\n  white-space: nowrap;\r\n}\r\n\r\n.survey-table td {\r\n  padding: 1rem;\r\n  vertical-align: middle;\r\n}\r\n\r\n.no-results {\r\n  background-color: #fff;\r\n  border-radius: 12px;\r\n  box-shadow: 0 2px 12px rgba(0, 0, 0, 0.08);\r\n}\r\n\r\n.btn-outline-primary {\r\n  color: #003366;\r\n  border-color: #003366;\r\n}\r\n\r\n.btn-outline-primary:hover {\r\n  background-color: #003366;\r\n  color: white;\r\n}\r\n</style> "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}