{"ast":null,"code":"import { createElementVNode as _createElementVNode, createCommentVNode as _createCommentVNode, vModelText as _vModelText, withDirectives as _withDirectives, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, vModelSelect as _vModelSelect, normalizeClass as _normalizeClass, normalizeStyle as _normalizeStyle } from \"vue\";\nconst _hoisted_1 = {\n  class: \"student-assessments\"\n};\nconst _hoisted_2 = {\n  class: \"controls\"\n};\nconst _hoisted_3 = {\n  class: \"search-box\"\n};\nconst _hoisted_4 = {\n  class: \"filter-box\"\n};\nconst _hoisted_5 = [\"value\"];\nconst _hoisted_6 = [\"value\"];\nconst _hoisted_7 = {\n  key: 0,\n  class: \"loading-container\"\n};\nconst _hoisted_8 = {\n  key: 1,\n  class: \"assessment-container\"\n};\nconst _hoisted_9 = {\n  key: 0,\n  class: \"no-data\"\n};\nconst _hoisted_10 = {\n  key: 0\n};\nconst _hoisted_11 = {\n  key: 1\n};\nconst _hoisted_12 = {\n  key: 1,\n  class: \"subject-groups\"\n};\nconst _hoisted_13 = {\n  class: \"subject-header\"\n};\nconst _hoisted_14 = {\n  class: \"subject-meta\"\n};\nconst _hoisted_15 = {\n  class: \"section-badge\"\n};\nconst _hoisted_16 = {\n  class: \"teacher-name\"\n};\nconst _hoisted_17 = {\n  class: \"assessment-grid\"\n};\nconst _hoisted_18 = {\n  class: \"assessment-header\"\n};\nconst _hoisted_19 = {\n  class: \"assessment-type\"\n};\nconst _hoisted_20 = {\n  class: \"assessment-date\"\n};\nconst _hoisted_21 = {\n  class: \"assessment-title\"\n};\nconst _hoisted_22 = {\n  class: \"score-container\"\n};\nconst _hoisted_23 = {\n  class: \"score-display\"\n};\nconst _hoisted_24 = {\n  class: \"score-value\"\n};\nconst _hoisted_25 = {\n  class: \"max-score\"\n};\nconst _hoisted_26 = {\n  class: \"score-percentage\"\n};\nconst _hoisted_27 = {\n  class: \"progress-bar\"\n};\nconst _hoisted_28 = {\n  class: \"summary-section\"\n};\nconst _hoisted_29 = {\n  class: \"summary-card\"\n};\nconst _hoisted_30 = {\n  class: \"summary-grid\"\n};\nconst _hoisted_31 = {\n  class: \"summary-item\"\n};\nconst _hoisted_32 = {\n  class: \"summary-value\"\n};\nconst _hoisted_33 = {\n  class: \"summary-item\"\n};\nconst _hoisted_34 = {\n  class: \"summary-value\"\n};\nconst _hoisted_35 = {\n  class: \"summary-item\"\n};\nconst _hoisted_36 = {\n  class: \"summary-value\"\n};\nconst _hoisted_37 = {\n  class: \"summary-item\"\n};\nconst _hoisted_38 = {\n  class: \"summary-value\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_cache[16] || (_cache[16] = _createElementVNode(\"div\", {\n    class: \"page-header\"\n  }, [_createElementVNode(\"h2\", null, \"Assessment Records\"), _createElementVNode(\"p\", {\n    class: \"subtitle\"\n  }, \"View your assessment scores and performance\")], -1 /* HOISTED */)), _createCommentVNode(\" Search and Filter Controls \"), _createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"div\", _hoisted_3, [_cache[4] || (_cache[4] = _createElementVNode(\"i\", {\n    class: \"fas fa-search\"\n  }, null, -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $setup.searchQuery = $event),\n    placeholder: \"Search by subject, title, or type...\",\n    class: \"search-input\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $setup.searchQuery]])]), _createElementVNode(\"div\", _hoisted_4, [_withDirectives(_createElementVNode(\"select\", {\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $setup.filterSubject = $event),\n    class: \"filter-select\"\n  }, [_cache[5] || (_cache[5] = _createElementVNode(\"option\", {\n    value: \"\"\n  }, \"All Subjects\", -1 /* HOISTED */)), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.availableSubjects, subject => {\n    return _openBlock(), _createElementBlock(\"option\", {\n      key: subject,\n      value: subject\n    }, _toDisplayString(subject), 9 /* TEXT, PROPS */, _hoisted_5);\n  }), 128 /* KEYED_FRAGMENT */))], 512 /* NEED_PATCH */), [[_vModelSelect, $setup.filterSubject]]), _withDirectives(_createElementVNode(\"select\", {\n    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $setup.filterType = $event),\n    class: \"filter-select\"\n  }, [_cache[6] || (_cache[6] = _createElementVNode(\"option\", {\n    value: \"\"\n  }, \"All Types\", -1 /* HOISTED */)), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.availableTypes, type => {\n    return _openBlock(), _createElementBlock(\"option\", {\n      key: type,\n      value: type\n    }, _toDisplayString(type), 9 /* TEXT, PROPS */, _hoisted_6);\n  }), 128 /* KEYED_FRAGMENT */))], 512 /* NEED_PATCH */), [[_vModelSelect, $setup.filterType]]), _withDirectives(_createElementVNode(\"select\", {\n    \"onUpdate:modelValue\": _cache[3] || (_cache[3] = $event => $setup.sortOption = $event),\n    class: \"filter-select\"\n  }, _cache[7] || (_cache[7] = [_createElementVNode(\"option\", {\n    value: \"date-desc\"\n  }, \"Newest First\", -1 /* HOISTED */), _createElementVNode(\"option\", {\n    value: \"date-asc\"\n  }, \"Oldest First\", -1 /* HOISTED */), _createElementVNode(\"option\", {\n    value: \"score-desc\"\n  }, \"Highest Score\", -1 /* HOISTED */), _createElementVNode(\"option\", {\n    value: \"score-asc\"\n  }, \"Lowest Score\", -1 /* HOISTED */)]), 512 /* NEED_PATCH */), [[_vModelSelect, $setup.sortOption]])])]), _createCommentVNode(\" Assessment Cards by Subject \"), $setup.isLoading ? (_openBlock(), _createElementBlock(\"div\", _hoisted_7, _cache[8] || (_cache[8] = [_createElementVNode(\"div\", {\n    class: \"spinner\"\n  }, null, -1 /* HOISTED */), _createElementVNode(\"p\", null, \"Loading assessment records...\", -1 /* HOISTED */)]))) : (_openBlock(), _createElementBlock(\"div\", _hoisted_8, [$setup.filteredAssessments.length === 0 ? (_openBlock(), _createElementBlock(\"div\", _hoisted_9, [_cache[9] || (_cache[9] = _createElementVNode(\"i\", {\n    class: \"fas fa-clipboard\"\n  }, null, -1 /* HOISTED */)), $setup.searchQuery || $setup.filterSubject || $setup.filterType ? (_openBlock(), _createElementBlock(\"p\", _hoisted_10, \" No assessments match your filters. Try adjusting your search criteria. \")) : (_openBlock(), _createElementBlock(\"p\", _hoisted_11, \" No assessment records available. Check back later! \"))])) : (_openBlock(), _createElementBlock(\"div\", _hoisted_12, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.groupedAssessments, subject => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: subject.name,\n      class: \"subject-section\"\n    }, [_createElementVNode(\"div\", _hoisted_13, [_createElementVNode(\"h3\", null, _toDisplayString(subject.name), 1 /* TEXT */), _createElementVNode(\"div\", _hoisted_14, [_createElementVNode(\"span\", _hoisted_15, _toDisplayString(subject.section), 1 /* TEXT */), _createElementVNode(\"span\", _hoisted_16, \"Teacher: \" + _toDisplayString(subject.teacher), 1 /* TEXT */)])]), _createElementVNode(\"div\", _hoisted_17, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(subject.assessments, assessment => {\n      return _openBlock(), _createElementBlock(\"div\", {\n        key: assessment._id,\n        class: \"assessment-card\"\n      }, [_createElementVNode(\"div\", _hoisted_18, [_createElementVNode(\"span\", _hoisted_19, _toDisplayString(assessment.type), 1 /* TEXT */), _createElementVNode(\"span\", _hoisted_20, _toDisplayString($setup.formatDate(assessment.date)), 1 /* TEXT */)]), _createElementVNode(\"h4\", _hoisted_21, _toDisplayString(assessment.title), 1 /* TEXT */), _createElementVNode(\"div\", _hoisted_22, [_createElementVNode(\"div\", _hoisted_23, [_createElementVNode(\"span\", _hoisted_24, _toDisplayString(assessment.score), 1 /* TEXT */), _cache[10] || (_cache[10] = _createElementVNode(\"span\", {\n        class: \"score-divider\"\n      }, \"/\", -1 /* HOISTED */)), _createElementVNode(\"span\", _hoisted_25, _toDisplayString(assessment.maxScore), 1 /* TEXT */)]), _createElementVNode(\"div\", _hoisted_26, _toDisplayString($setup.calculatePercentage(assessment.score, assessment.maxScore)) + \"% \", 1 /* TEXT */)]), _createElementVNode(\"div\", _hoisted_27, [_createElementVNode(\"div\", {\n        class: _normalizeClass([\"progress-fill\", $setup.getPerformanceClass(assessment.score, assessment.maxScore)]),\n        style: _normalizeStyle({\n          width: `${Math.min(100, assessment.score / assessment.maxScore * 100)}%`\n        })\n      }, null, 6 /* CLASS, STYLE */)])]);\n    }), 128 /* KEYED_FRAGMENT */))])]);\n  }), 128 /* KEYED_FRAGMENT */))]))])), _createCommentVNode(\" Assessment Summary \"), _createElementVNode(\"div\", _hoisted_28, [_createElementVNode(\"div\", _hoisted_29, [_cache[15] || (_cache[15] = _createElementVNode(\"h3\", null, \"Assessment Summary\", -1 /* HOISTED */)), _createElementVNode(\"div\", _hoisted_30, [_createElementVNode(\"div\", _hoisted_31, [_cache[11] || (_cache[11] = _createElementVNode(\"div\", {\n    class: \"summary-label\"\n  }, \"Total Assessments\", -1 /* HOISTED */)), _createElementVNode(\"div\", _hoisted_32, _toDisplayString($setup.totalAssessments), 1 /* TEXT */)]), _createElementVNode(\"div\", _hoisted_33, [_cache[12] || (_cache[12] = _createElementVNode(\"div\", {\n    class: \"summary-label\"\n  }, \"Average Score\", -1 /* HOISTED */)), _createElementVNode(\"div\", _hoisted_34, _toDisplayString($setup.averageScore) + \"%\", 1 /* TEXT */)]), _createElementVNode(\"div\", _hoisted_35, [_cache[13] || (_cache[13] = _createElementVNode(\"div\", {\n    class: \"summary-label\"\n  }, \"Highest Score\", -1 /* HOISTED */)), _createElementVNode(\"div\", _hoisted_36, _toDisplayString($setup.highestScore) + \"%\", 1 /* TEXT */)]), _createElementVNode(\"div\", _hoisted_37, [_cache[14] || (_cache[14] = _createElementVNode(\"div\", {\n    class: \"summary-label\"\n  }, \"Lowest Score\", -1 /* HOISTED */)), _createElementVNode(\"div\", _hoisted_38, _toDisplayString($setup.lowestScore) + \"%\", 1 /* TEXT */)])])])])]);\n}","map":{"version":3,"names":["class","key","_createElementBlock","_hoisted_1","_createElementVNode","_createCommentVNode","_hoisted_2","_hoisted_3","type","_cache","$event","$setup","searchQuery","placeholder","_hoisted_4","filterSubject","value","_Fragment","_renderList","availableSubjects","subject","_hoisted_5","filterType","availableTypes","_hoisted_6","sortOption","isLoading","_hoisted_7","_hoisted_8","filteredAssessments","length","_hoisted_9","_hoisted_10","_hoisted_11","_hoisted_12","groupedAssessments","name","_hoisted_13","_toDisplayString","_hoisted_14","_hoisted_15","section","_hoisted_16","teacher","_hoisted_17","assessments","assessment","_id","_hoisted_18","_hoisted_19","_hoisted_20","formatDate","date","_hoisted_21","title","_hoisted_22","_hoisted_23","_hoisted_24","score","_hoisted_25","maxScore","_hoisted_26","calculatePercentage","_hoisted_27","_normalizeClass","getPerformanceClass","style","_normalizeStyle","width","Math","min","_hoisted_28","_hoisted_29","_hoisted_30","_hoisted_31","_hoisted_32","totalAssessments","_hoisted_33","_hoisted_34","averageScore","_hoisted_35","_hoisted_36","highestScore","_hoisted_37","_hoisted_38","lowestScore"],"sources":["D:\\au_dev\\client\\src\\views\\StudentAssessments.vue"],"sourcesContent":["<template>\r\n  <div class=\"student-assessments\">\r\n    <div class=\"page-header\">\r\n      <h2>Assessment Records</h2>\r\n      <p class=\"subtitle\">View your assessment scores and performance</p>\r\n    </div>\r\n\r\n    <!-- Search and Filter Controls -->\r\n    <div class=\"controls\">\r\n      <div class=\"search-box\">\r\n        <i class=\"fas fa-search\"></i>\r\n        <input \r\n          type=\"text\" \r\n          v-model=\"searchQuery\" \r\n          placeholder=\"Search by subject, title, or type...\"\r\n          class=\"search-input\"\r\n        >\r\n      </div>\r\n      \r\n      <div class=\"filter-box\">\r\n        <select v-model=\"filterSubject\" class=\"filter-select\">\r\n          <option value=\"\">All Subjects</option>\r\n          <option v-for=\"subject in availableSubjects\" :key=\"subject\" :value=\"subject\">\r\n            {{ subject }}\r\n          </option>\r\n        </select>\r\n        \r\n        <select v-model=\"filterType\" class=\"filter-select\">\r\n          <option value=\"\">All Types</option>\r\n          <option v-for=\"type in availableTypes\" :key=\"type\" :value=\"type\">\r\n            {{ type }}\r\n          </option>\r\n        </select>\r\n        \r\n        <select v-model=\"sortOption\" class=\"filter-select\">\r\n          <option value=\"date-desc\">Newest First</option>\r\n          <option value=\"date-asc\">Oldest First</option>\r\n          <option value=\"score-desc\">Highest Score</option>\r\n          <option value=\"score-asc\">Lowest Score</option>\r\n        </select>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Assessment Cards by Subject -->\r\n    <div v-if=\"isLoading\" class=\"loading-container\">\r\n      <div class=\"spinner\"></div>\r\n      <p>Loading assessment records...</p>\r\n    </div>\r\n\r\n    <div v-else class=\"assessment-container\">\r\n      <div v-if=\"filteredAssessments.length === 0\" class=\"no-data\">\r\n        <i class=\"fas fa-clipboard\"></i>\r\n        <p v-if=\"searchQuery || filterSubject || filterType\">\r\n          No assessments match your filters. Try adjusting your search criteria.\r\n        </p>\r\n        <p v-else>\r\n          No assessment records available. Check back later!\r\n        </p>\r\n      </div>\r\n\r\n      <div v-else class=\"subject-groups\">\r\n        <div v-for=\"subject in groupedAssessments\" :key=\"subject.name\" class=\"subject-section\">\r\n          <div class=\"subject-header\">\r\n            <h3>{{ subject.name }}</h3>\r\n            <div class=\"subject-meta\">\r\n              <span class=\"section-badge\">{{ subject.section }}</span>\r\n              <span class=\"teacher-name\">Teacher: {{ subject.teacher }}</span>\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"assessment-grid\">\r\n            <div \r\n              v-for=\"assessment in subject.assessments\" \r\n              :key=\"assessment._id\" \r\n              class=\"assessment-card\"\r\n            >\r\n              <div class=\"assessment-header\">\r\n                <span class=\"assessment-type\">{{ assessment.type }}</span>\r\n                <span class=\"assessment-date\">{{ formatDate(assessment.date) }}</span>\r\n              </div>\r\n              <h4 class=\"assessment-title\">{{ assessment.title }}</h4>\r\n              <div class=\"score-container\">\r\n                <div class=\"score-display\">\r\n                  <span class=\"score-value\">{{ assessment.score }}</span>\r\n                  <span class=\"score-divider\">/</span>\r\n                  <span class=\"max-score\">{{ assessment.maxScore }}</span>\r\n                </div>\r\n                <div class=\"score-percentage\">\r\n                  {{ calculatePercentage(assessment.score, assessment.maxScore) }}%\r\n                </div>\r\n              </div>\r\n              \r\n              <div class=\"progress-bar\">\r\n                <div \r\n                  class=\"progress-fill\" \r\n                  :style=\"{ width: `${Math.min(100, (assessment.score / assessment.maxScore) * 100)}%` }\"\r\n                  :class=\"getPerformanceClass(assessment.score, assessment.maxScore)\"\r\n                ></div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Assessment Summary -->\r\n    <div class=\"summary-section\">\r\n      <div class=\"summary-card\">\r\n        <h3>Assessment Summary</h3>\r\n        <div class=\"summary-grid\">\r\n          <div class=\"summary-item\">\r\n            <div class=\"summary-label\">Total Assessments</div>\r\n            <div class=\"summary-value\">{{ totalAssessments }}</div>\r\n          </div>\r\n          <div class=\"summary-item\">\r\n            <div class=\"summary-label\">Average Score</div>\r\n            <div class=\"summary-value\">{{ averageScore }}%</div>\r\n          </div>\r\n          <div class=\"summary-item\">\r\n            <div class=\"summary-label\">Highest Score</div>\r\n            <div class=\"summary-value\">{{ highestScore }}%</div>\r\n          </div>\r\n          <div class=\"summary-item\">\r\n            <div class=\"summary-label\">Lowest Score</div>\r\n            <div class=\"summary-value\">{{ lowestScore }}%</div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { ref, computed, onMounted } from 'vue'\r\nimport { useStore } from 'vuex'\r\nimport axios from 'axios'\r\n\r\nexport default {\r\n  name: 'StudentAssessments',\r\n  setup() {\r\n    const store = useStore()\r\n    const isLoading = ref(true)\r\n    const assessments = ref([])\r\n    const searchQuery = ref('')\r\n    const filterSubject = ref('')\r\n    const filterType = ref('')\r\n    const sortOption = ref('date-desc')\r\n\r\n    // Fetch assessments data\r\n    const fetchAssessments = async () => {\r\n      isLoading.value = true\r\n      try {\r\n        const response = await axios.get('/api/users/student/assessments', {\r\n          headers: {\r\n            Authorization: `Bearer ${store.state.auth.token}`\r\n          }\r\n        })\r\n        assessments.value = response.data\r\n        \r\n        // Add fallback sample data if needed\r\n        if (assessments.value.length === 0) {\r\n          assessments.value = generateSampleAssessments()\r\n        }\r\n      } catch (error) {\r\n        console.error('Error fetching assessment data:', error)\r\n        // Fallback to sample data\r\n        assessments.value = generateSampleAssessments()\r\n      } finally {\r\n        isLoading.value = false\r\n      }\r\n    }\r\n\r\n    // Generate sample data for testing\r\n    const generateSampleAssessments = () => {\r\n      const subjects = ['Mathematics', 'English', 'Science', 'History']\r\n      const types = ['Quiz', 'Exam', 'Project', 'Assignment']\r\n      \r\n      return subjects.map(subject => {\r\n        const assessmentCount = Math.floor(Math.random() * 5) + 3 // 3-7 assessments per subject\r\n        \r\n        const subjectAssessments = []\r\n        for (let i = 0; i < assessmentCount; i++) {\r\n          const maxScore = [10, 20, 50, 100][Math.floor(Math.random() * 4)]\r\n          const score = Math.floor(Math.random() * (maxScore * 0.6)) + (maxScore * 0.3) // Score between 30% and 90%\r\n          \r\n          subjectAssessments.push({\r\n            _id: `sample-${subject}-${i}`,\r\n            title: `${subject} ${types[Math.floor(Math.random() * types.length)]} ${i + 1}`,\r\n            type: types[Math.floor(Math.random() * types.length)],\r\n            maxScore: maxScore,\r\n            score: score,\r\n            date: new Date(Date.now() - (Math.random() * 180 * 24 * 60 * 60 * 1000)).toISOString(),\r\n            teacherName: 'Sample Teacher'\r\n          })\r\n        }\r\n        \r\n        return {\r\n          subject,\r\n          section: '1A',\r\n          teacher: 'Sample Teacher',\r\n          assessments: subjectAssessments\r\n        }\r\n      })\r\n    }\r\n\r\n    // Available filter options\r\n    const availableSubjects = computed(() => {\r\n      const subjects = new Set()\r\n      assessments.value.forEach(subject => {\r\n        subjects.add(subject.subject)\r\n      })\r\n      return [...subjects]\r\n    })\r\n\r\n    const availableTypes = computed(() => {\r\n      const types = new Set()\r\n      assessments.value.forEach(subject => {\r\n        subject.assessments.forEach(assessment => {\r\n          types.add(assessment.type)\r\n        })\r\n      })\r\n      return [...types]\r\n    })\r\n\r\n    // Filter and sort assessments\r\n    const filteredAssessments = computed(() => {\r\n      // Filter by subject\r\n      let filtered = [...assessments.value]\r\n      \r\n      if (filterSubject.value) {\r\n        filtered = filtered.filter(subject => subject.subject === filterSubject.value)\r\n      }\r\n\r\n      // Filter assessments by search query and type\r\n      filtered = filtered.map(subject => {\r\n        const filteredAssessments = subject.assessments.filter(assessment => {\r\n          const matchesSearch = searchQuery.value === '' ||\r\n            assessment.title.toLowerCase().includes(searchQuery.value.toLowerCase()) ||\r\n            assessment.type.toLowerCase().includes(searchQuery.value.toLowerCase()) ||\r\n            subject.subject.toLowerCase().includes(searchQuery.value.toLowerCase())\r\n          \r\n          const matchesType = filterType.value === '' || assessment.type === filterType.value\r\n          \r\n          return matchesSearch && matchesType\r\n        })\r\n\r\n        return {\r\n          ...subject,\r\n          assessments: filteredAssessments\r\n        }\r\n      })\r\n\r\n      // Remove subjects with no matching assessments\r\n      filtered = filtered.filter(subject => subject.assessments.length > 0)\r\n\r\n      return filtered\r\n    })\r\n\r\n    // Group assessments by subject\r\n    const groupedAssessments = computed(() => {\r\n      const sorted = [...filteredAssessments.value]\r\n      \r\n      // Sort assessments within each subject\r\n      sorted.forEach(subject => {\r\n        subject.assessments.sort((a, b) => {\r\n          if (sortOption.value === 'date-desc') {\r\n            return new Date(b.date) - new Date(a.date)\r\n          } else if (sortOption.value === 'date-asc') {\r\n            return new Date(a.date) - new Date(b.date)\r\n          } else if (sortOption.value === 'score-desc') {\r\n            return (b.score / b.maxScore) - (a.score / a.maxScore)\r\n          } else if (sortOption.value === 'score-asc') {\r\n            return (a.score / a.maxScore) - (b.score / b.maxScore)\r\n          }\r\n          return 0\r\n        })\r\n      })\r\n      \r\n      return sorted.map(subject => ({\r\n        name: subject.subject,\r\n        section: subject.section,\r\n        teacher: subject.teacher,\r\n        assessments: subject.assessments\r\n      }))\r\n    })\r\n\r\n    // Calculate summary statistics\r\n    const allAssessments = computed(() => {\r\n      let all = []\r\n      assessments.value.forEach(subject => {\r\n        subject.assessments.forEach(assessment => {\r\n          all.push(assessment)\r\n        })\r\n      })\r\n      return all\r\n    })\r\n\r\n    const totalAssessments = computed(() => {\r\n      return allAssessments.value.length\r\n    })\r\n\r\n    const averageScore = computed(() => {\r\n      if (allAssessments.value.length === 0) return 0\r\n      \r\n      let totalPercentage = 0\r\n      allAssessments.value.forEach(assessment => {\r\n        totalPercentage += (assessment.score / assessment.maxScore) * 100\r\n      })\r\n      \r\n      return (totalPercentage / allAssessments.value.length).toFixed(1)\r\n    })\r\n\r\n    const highestScore = computed(() => {\r\n      if (allAssessments.value.length === 0) return 0\r\n      \r\n      let highest = 0\r\n      allAssessments.value.forEach(assessment => {\r\n        const percentage = (assessment.score / assessment.maxScore) * 100\r\n        if (percentage > highest) {\r\n          highest = percentage\r\n        }\r\n      })\r\n      \r\n      return highest.toFixed(1)\r\n    })\r\n\r\n    const lowestScore = computed(() => {\r\n      if (allAssessments.value.length === 0) return 0\r\n      \r\n      let lowest = 100\r\n      allAssessments.value.forEach(assessment => {\r\n        const percentage = (assessment.score / assessment.maxScore) * 100\r\n        if (percentage < lowest) {\r\n          lowest = percentage\r\n        }\r\n      })\r\n      \r\n      return lowest.toFixed(1)\r\n    })\r\n\r\n    // Helper methods\r\n    const formatDate = (dateString) => {\r\n      const date = new Date(dateString)\r\n      return date.toLocaleDateString('en-US', {\r\n        year: 'numeric',\r\n        month: 'short',\r\n        day: 'numeric'\r\n      })\r\n    }\r\n\r\n    const calculatePercentage = (score, maxScore) => {\r\n      return Math.round((score / maxScore) * 100)\r\n    }\r\n\r\n    const getPerformanceClass = (score, maxScore) => {\r\n      const percentage = (score / maxScore) * 100\r\n      if (percentage >= 90) return 'performance-excellent'\r\n      if (percentage >= 80) return 'performance-good'\r\n      if (percentage >= 70) return 'performance-average'\r\n      if (percentage >= 60) return 'performance-fair'\r\n      return 'performance-poor'\r\n    }\r\n\r\n    onMounted(() => {\r\n      fetchAssessments()\r\n    })\r\n\r\n    return {\r\n      isLoading,\r\n      searchQuery,\r\n      filterSubject,\r\n      filterType,\r\n      sortOption,\r\n      assessments,\r\n      availableSubjects,\r\n      availableTypes,\r\n      filteredAssessments,\r\n      groupedAssessments,\r\n      totalAssessments,\r\n      averageScore,\r\n      highestScore,\r\n      lowestScore,\r\n      formatDate,\r\n      calculatePercentage,\r\n      getPerformanceClass\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.student-assessments {\r\n  padding: 1.5rem;\r\n}\r\n\r\n.page-header {\r\n  margin-bottom: 2rem;\r\n}\r\n\r\n.page-header h2 {\r\n  font-size: 1.8rem;\r\n  color: #2d3748;\r\n  margin-bottom: 0.5rem;\r\n}\r\n\r\n.subtitle {\r\n  color: #718096;\r\n  font-size: 1.1rem;\r\n}\r\n\r\n.controls {\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  gap: 1rem;\r\n  margin-bottom: 2rem;\r\n}\r\n\r\n.search-box {\r\n  flex: 1;\r\n  min-width: 300px;\r\n  position: relative;\r\n}\r\n\r\n.search-input {\r\n  width: 100%;\r\n  padding: 0.75rem 1rem 0.75rem 2.5rem;\r\n  border-radius: 0.5rem;\r\n  border: 1px solid #e2e8f0;\r\n  background: white;\r\n  font-size: 1rem;\r\n  transition: all 0.3s ease;\r\n}\r\n\r\n.search-input:focus {\r\n  border-color: #4299e1;\r\n  box-shadow: 0 0 0 3px rgba(66, 153, 225, 0.15);\r\n  outline: none;\r\n}\r\n\r\n.search-box i {\r\n  position: absolute;\r\n  left: 1rem;\r\n  top: 50%;\r\n  transform: translateY(-50%);\r\n  color: #a0aec0;\r\n}\r\n\r\n.filter-box {\r\n  display: flex;\r\n  gap: 0.75rem;\r\n  flex-wrap: wrap;\r\n}\r\n\r\n.filter-select {\r\n  padding: 0.75rem 1rem;\r\n  border-radius: 0.5rem;\r\n  border: 1px solid #e2e8f0;\r\n  background: white;\r\n  font-size: 0.875rem;\r\n  color: #4a5568;\r\n  min-width: 150px;\r\n  transition: all 0.3s ease;\r\n}\r\n\r\n.filter-select:focus {\r\n  border-color: #4299e1;\r\n  box-shadow: 0 0 0 3px rgba(66, 153, 225, 0.15);\r\n  outline: none;\r\n}\r\n\r\n.loading-container {\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  padding: 5rem;\r\n  color: #a0aec0;\r\n}\r\n\r\n.spinner {\r\n  width: 40px;\r\n  height: 40px;\r\n  border: 3px solid #e2e8f0;\r\n  border-top-color: #4299e1;\r\n  border-radius: 50%;\r\n  animation: spin 1s linear infinite;\r\n  margin-bottom: 1rem;\r\n}\r\n\r\n@keyframes spin {\r\n  to { transform: rotate(360deg); }\r\n}\r\n\r\n.no-data {\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  padding: 5rem;\r\n  color: #a0aec0;\r\n  text-align: center;\r\n}\r\n\r\n.no-data i {\r\n  font-size: 3rem;\r\n  margin-bottom: 1rem;\r\n}\r\n\r\n.subject-groups {\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 2.5rem;\r\n}\r\n\r\n.subject-section {\r\n  background: white;\r\n  border-radius: 1rem;\r\n  overflow: hidden;\r\n  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.05);\r\n}\r\n\r\n.subject-header {\r\n  padding: 1.5rem;\r\n  background: linear-gradient(to right, #203464, #4a69bd);\r\n  color: white;\r\n  position: relative;\r\n}\r\n\r\n.subject-header h3 {\r\n  font-size: 1.25rem;\r\n  margin: 0;\r\n  margin-bottom: 0.5rem;\r\n}\r\n\r\n.subject-meta {\r\n  display: flex;\r\n  gap: 1rem;\r\n  align-items: center;\r\n  font-size: 0.875rem;\r\n  color: rgba(255, 255, 255, 0.8);\r\n}\r\n\r\n.section-badge {\r\n  background: rgba(255, 255, 255, 0.2);\r\n  padding: 0.25rem 0.75rem;\r\n  border-radius: 1rem;\r\n  font-size: 0.75rem;\r\n}\r\n\r\n.assessment-grid {\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));\r\n  gap: 1.5rem;\r\n  padding: 1.5rem;\r\n}\r\n\r\n.assessment-card {\r\n  background: #f8fafc;\r\n  border-radius: 0.75rem;\r\n  padding: 1.25rem;\r\n  transition: transform 0.3s ease, box-shadow 0.3s ease;\r\n  border: 1px solid #edf2f7;\r\n}\r\n\r\n.assessment-card:hover {\r\n  transform: translateY(-5px);\r\n  box-shadow: 0 10px 15px rgba(0, 0, 0, 0.05);\r\n}\r\n\r\n.assessment-header {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  margin-bottom: 0.75rem;\r\n  align-items: center;\r\n}\r\n\r\n.assessment-type {\r\n  display: inline-block;\r\n  padding: 0.25rem 0.75rem;\r\n  border-radius: 1rem;\r\n  background: #e6f6ff;\r\n  color: #0377bf;\r\n  font-size: 0.75rem;\r\n  font-weight: 500;\r\n}\r\n\r\n.assessment-date {\r\n  font-size: 0.75rem;\r\n  color: #718096;\r\n}\r\n\r\n.assessment-title {\r\n  font-size: 1rem;\r\n  color: #2d3748;\r\n  margin: 0 0 1rem 0;\r\n  line-height: 1.4;\r\n  height: 2.8em;\r\n  overflow: hidden;\r\n  display: -webkit-box;\r\n  -webkit-line-clamp: 2;\r\n  -webkit-box-orient: vertical;\r\n}\r\n\r\n.score-container {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  margin-bottom: 0.5rem;\r\n}\r\n\r\n.score-display {\r\n  display: flex;\r\n  align-items: baseline;\r\n}\r\n\r\n.score-value {\r\n  font-size: 1.5rem;\r\n  font-weight: 600;\r\n  color: #2d3748;\r\n}\r\n\r\n.score-divider {\r\n  font-size: 1.25rem;\r\n  color: #a0aec0;\r\n  margin: 0 0.25rem;\r\n}\r\n\r\n.max-score {\r\n  font-size: 1.25rem;\r\n  color: #718096;\r\n}\r\n\r\n.score-percentage {\r\n  font-size: 1.25rem;\r\n  font-weight: 500;\r\n  color: #4a5568;\r\n}\r\n\r\n.progress-bar {\r\n  height: 8px;\r\n  background: #edf2f7;\r\n  border-radius: 4px;\r\n  overflow: hidden;\r\n}\r\n\r\n.progress-fill {\r\n  height: 100%;\r\n  border-radius: 4px;\r\n  transition: width 0.5s ease;\r\n}\r\n\r\n.performance-excellent {\r\n  background: #48bb78;\r\n}\r\n\r\n.performance-good {\r\n  background: #68d391;\r\n}\r\n\r\n.performance-average {\r\n  background: #f6e05e;\r\n}\r\n\r\n.performance-fair {\r\n  background: #f6ad55;\r\n}\r\n\r\n.performance-poor {\r\n  background: #f56565;\r\n}\r\n\r\n.summary-section {\r\n  margin-top: 3rem;\r\n}\r\n\r\n.summary-card {\r\n  background: white;\r\n  border-radius: 1rem;\r\n  padding: 1.5rem;\r\n  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.05);\r\n}\r\n\r\n.summary-card h3 {\r\n  font-size: 1.25rem;\r\n  color: #2d3748;\r\n  margin: 0 0 1.5rem 0;\r\n}\r\n\r\n.summary-grid {\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));\r\n  gap: 1.5rem;\r\n}\r\n\r\n.summary-item {\r\n  text-align: center;\r\n  padding: 1rem;\r\n  background: #f8fafc;\r\n  border-radius: 0.75rem;\r\n}\r\n\r\n.summary-label {\r\n  font-size: 0.875rem;\r\n  color: #718096;\r\n  margin-bottom: 0.5rem;\r\n}\r\n\r\n.summary-value {\r\n  font-size: 1.5rem;\r\n  font-weight: 600;\r\n  color: #2d3748;\r\n}\r\n\r\n@media (max-width: 768px) {\r\n  .controls {\r\n    flex-direction: column;\r\n    gap: 1rem;\r\n  }\r\n  \r\n  .filter-box {\r\n    width: 100%;\r\n  }\r\n  \r\n  .filter-select {\r\n    flex: 1;\r\n  }\r\n  \r\n  .assessment-grid {\r\n    grid-template-columns: 1fr;\r\n  }\r\n}\r\n</style> "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}