{"ast":null,"code":"import \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.some.js\";\nimport { createRouter, createWebHistory } from 'vue-router';\nimport store from '../store';\n\n// Import components\nimport Login from '../views/Login.vue';\nimport Register from '../views/Register.vue';\nimport RegisterSSP from '../views/RegisterSSP.vue';\nimport Dashboard from '../views/Dashboard.vue';\nimport TeacherDashboard from '../views/TeacherDashboard.vue';\nimport SSPHeadDashboard from '@/views/SSPHeadDashboard.vue';\nimport SSPDashboard from '@/views/SSPDashboard.vue';\nimport StudentManagement from '../views/StudentManagement.vue';\nimport ClassRecords from '../views/ClassRecords.vue';\nimport Attendance from '../views/Attendance.vue';\nimport ViewProfile from '@/views/ViewProfile.vue';\nimport EditProfile from '@/views/EditProfile.vue';\nimport ChangePassword from '@/views/ChangePassword.vue';\nimport DashboardLayout from '@/layouts/DashboardLayout.vue';\nimport TeacherManagement from '../views/TeacherManagement.vue';\nimport SSPManagement from '../views/SSPManagement.vue';\nimport FailingStudents from '../views/FailingStudents.vue';\nimport CompletedSurveys from '../views/CompletedSurveys.vue';\nimport SurveyForm from '../views/SurveyForm';\nimport Forgot from '../views/Forgot.vue';\nimport ResetPassword from '../views/ResetPassword.vue';\nconst routes = [{\n  path: '/',\n  redirect: '/dashboard'\n}, {\n  path: '/login',\n  name: 'Login',\n  component: Login,\n  meta: {\n    guest: true\n  }\n}, {\n  path: '/survey',\n  name: 'Survey',\n  component: SurveyForm\n}, {\n  path: '/forgot',\n  name: 'Forgot Password',\n  component: Forgot\n}, {\n  path: '/reset',\n  name: 'Reset Password',\n  component: ResetPassword\n}, {\n  path: '/',\n  component: DashboardLayout,\n  children: [{\n    path: 'dashboard',\n    name: 'Dashboard',\n    component: Dashboard,\n    meta: {\n      requiresAuth: true,\n      citHeadOnly: true\n    }\n  }, {\n    path: 'register',\n    name: 'Register',\n    component: Register,\n    meta: {\n      requiresAuth: true,\n      citHeadOnly: true\n    }\n  }, {\n    path: 'register-ssp',\n    name: 'Register SSP',\n    component: RegisterSSP,\n    meta: {\n      requiresAuth: true,\n      citHeadOnly: true\n    }\n  }, {\n    path: 'teacher-dashboard',\n    name: 'TeacherDashboard',\n    component: TeacherDashboard,\n    meta: {\n      requiresAuth: true,\n      teacherOnly: true\n    }\n  }, {\n    path: 'ssp-dashboard',\n    name: 'SSPDashboard',\n    component: SSPDashboard,\n    meta: {\n      requiresAuth: true,\n      sspOnly: true\n    }\n  }, {\n    path: 'student-management',\n    name: 'StudentManagement',\n    component: StudentManagement,\n    meta: {\n      requiresAuth: true,\n      citHeadOnly: true\n    }\n  }, {\n    path: 'class-records',\n    name: 'ClassRecords',\n    component: ClassRecords,\n    meta: {\n      requiresAuth: true,\n      teacherOnly: true\n    }\n  }, {\n    path: 'attendance',\n    name: 'Attendance',\n    component: Attendance,\n    meta: {\n      requiresAuth: true,\n      teacherOnly: true\n    }\n  }, {\n    path: 'profile/view',\n    name: 'ViewProfile',\n    component: ViewProfile,\n    meta: {\n      requiresAuth: true\n    }\n  }, {\n    path: 'profile/edit',\n    name: 'EditProfile',\n    component: EditProfile,\n    meta: {\n      requiresAuth: true,\n      roles: ['citHead', 'teacher', 'ssp', 'sspHead']\n    }\n  }, {\n    path: 'profile/password',\n    name: 'ChangePassword',\n    component: ChangePassword,\n    meta: {\n      requiresAuth: true,\n      roles: ['citHead', 'teacher', 'ssp', 'sspHead']\n    }\n  }, {\n    path: 'teacher-management',\n    name: 'TeacherManagement',\n    component: TeacherManagement,\n    meta: {\n      requiresAuth: true,\n      roles: ['citHead']\n    }\n  }, {\n    path: 'ssp-management',\n    name: 'SSPManagement',\n    component: SSPManagement,\n    meta: {\n      requiresAuth: true,\n      roles: ['citHead']\n    }\n  }, {\n    path: 'ssp-student-management',\n    name: 'SSPStudentManagement',\n    component: FailingStudents,\n    meta: {\n      requiresAuth: true,\n      roles: ['citHead']\n    }\n  }, {\n    path: 'completed-surveys',\n    name: 'CompletedSurveys',\n    component: CompletedSurveys,\n    meta: {\n      requiresAuth: true,\n      roles: ['ssp', 'sspHead']\n    }\n  }]\n}];\nconst router = createRouter({\n  history: createWebHistory(),\n  routes\n});\n\n// Navigation Guards\nrouter.beforeEach((to, from, next) => {\n  const isLoggedIn = store.getters.isLoggedIn;\n  const isCITHead = store.getters.isCITHead;\n  const isTeacher = store.getters.isTeacher;\n  const isSSP = store.getters.isSSP;\n  const isSSPHead = store.getters.isSSPHead;\n  const userRole = store.state.auth.user?.role;\n\n  // Routes that require authentication \n  if (to.matched.some(record => record.meta.requiresAuth)) {\n    if (!isLoggedIn) {\n      next('/login');\n      return;\n    }\n\n    // Check role-specific routes\n    if (to.meta.roles && to.meta.roles.length > 0) {\n      if (!to.meta.roles.includes(userRole)) {\n        // Redirect to appropriate dashboard based on role\n        if (isCITHead) {\n          next('/dashboard');\n        } else if (isTeacher) {\n          next('/teacher-dashboard');\n        } else if (isSSPHead || isSSP) {\n          next('/ssp-dashboard');\n        } else {\n          next('/login');\n        }\n        return;\n      }\n    }\n  }\n\n  // Routes for guests only (login, register)\n  if (to.matched.some(record => record.meta.guest)) {\n    if (isLoggedIn) {\n      if (isCITHead) {\n        next('/dashboard');\n      } else if (isTeacher) {\n        next('/teacher-dashboard');\n      } else if (isSSPHead) {\n        next('/ssp-dashboard');\n      }\n      return;\n    }\n  }\n\n  // Redirect to appropriate dashboard after login\n  if (to.path === '/dashboard') {\n    if (isTeacher) {\n      next('/teacher-dashboard');\n      return;\n    } else if (isSSPHead) {\n      next('/ssp-dashboard');\n      return;\n    }\n  }\n  next();\n});\nexport default router;","map":{"version":3,"names":["createRouter","createWebHistory","store","Login","Register","RegisterSSP","Dashboard","TeacherDashboard","SSPHeadDashboard","SSPDashboard","StudentManagement","ClassRecords","Attendance","ViewProfile","EditProfile","ChangePassword","DashboardLayout","TeacherManagement","SSPManagement","FailingStudents","CompletedSurveys","SurveyForm","Forgot","ResetPassword","routes","path","redirect","name","component","meta","guest","children","requiresAuth","citHeadOnly","teacherOnly","sspOnly","roles","router","history","beforeEach","to","from","next","isLoggedIn","getters","isCITHead","isTeacher","isSSP","isSSPHead","userRole","state","auth","user","role","matched","some","record","length","includes"],"sources":["D:/au_dev/client/src/router/index.js"],"sourcesContent":["import { createRouter, createWebHistory } from 'vue-router'\r\nimport store from '../store'\r\n\r\n// Import components\r\nimport Login from '../views/Login.vue'\r\nimport Register from '../views/Register.vue'\r\nimport RegisterSSP from '../views/RegisterSSP.vue'\r\nimport Dashboard from '../views/Dashboard.vue'\r\nimport TeacherDashboard from '../views/TeacherDashboard.vue'\r\nimport SSPHeadDashboard from '@/views/SSPHeadDashboard.vue'\r\nimport SSPDashboard from '@/views/SSPDashboard.vue'\r\nimport StudentManagement from '../views/StudentManagement.vue'\r\nimport ClassRecords from '../views/ClassRecords.vue'\r\nimport Attendance from '../views/Attendance.vue'\r\nimport ViewProfile from '@/views/ViewProfile.vue'\r\nimport EditProfile from '@/views/EditProfile.vue'\r\nimport ChangePassword from '@/views/ChangePassword.vue'\r\nimport DashboardLayout from '@/layouts/DashboardLayout.vue'\r\nimport TeacherManagement from '../views/TeacherManagement.vue'\r\nimport SSPManagement from '../views/SSPManagement.vue'\r\nimport FailingStudents from '../views/FailingStudents.vue'\r\nimport CompletedSurveys from '../views/CompletedSurveys.vue'\r\nimport SurveyForm from '../views/SurveyForm'\r\nimport Forgot from '../views/Forgot.vue'\r\nimport ResetPassword from '../views/ResetPassword.vue'\r\n\r\nconst routes = [\r\n  {\r\n    path: '/',\r\n    redirect: '/dashboard'\r\n  },\r\n  {\r\n    path: '/login',\r\n    name: 'Login',\r\n    component: Login,\r\n    meta: { guest: true }\r\n  },\r\n  {\r\n    path : '/survey',\r\n    name : 'Survey',\r\n    component: SurveyForm,\r\n  },\r\n  {\r\n    path : '/forgot',\r\n    name : 'Forgot Password',\r\n    component: Forgot,\r\n  },\r\n  {\r\n    path : '/reset',\r\n    name : 'Reset Password',\r\n    component: ResetPassword,\r\n  },\r\n  {\r\n    path: '/',\r\n    component: DashboardLayout,\r\n    children: [\r\n      {\r\n        path: 'dashboard',\r\n        name: 'Dashboard',\r\n        component: Dashboard,\r\n        meta: { requiresAuth: true, citHeadOnly: true }\r\n      },\r\n      {\r\n        path: 'register',\r\n        name: 'Register',\r\n        component: Register,\r\n        meta: { requiresAuth: true, citHeadOnly: true }\r\n      },\r\n      {\r\n        path: 'register-ssp',\r\n        name: 'Register SSP',\r\n        component: RegisterSSP,\r\n        meta: { requiresAuth: true, citHeadOnly: true }\r\n      },\r\n      {\r\n        path: 'teacher-dashboard',\r\n        name: 'TeacherDashboard',\r\n        component: TeacherDashboard,\r\n        meta: { requiresAuth: true, teacherOnly: true }\r\n      },\r\n      {\r\n        path: 'ssp-dashboard',\r\n        name: 'SSPDashboard',\r\n        component: SSPDashboard,\r\n        meta: { requiresAuth: true, sspOnly: true }\r\n      },\r\n      {\r\n        path: 'student-management',\r\n        name: 'StudentManagement',\r\n        component: StudentManagement,\r\n        meta: { requiresAuth: true, citHeadOnly: true }\r\n      },\r\n      {\r\n        path: 'class-records',\r\n        name: 'ClassRecords',\r\n        component: ClassRecords,\r\n        meta: { requiresAuth: true, teacherOnly: true }\r\n      },\r\n      {\r\n        path: 'attendance',\r\n        name: 'Attendance',\r\n        component: Attendance,\r\n        meta: { requiresAuth: true, teacherOnly: true }\r\n      },\r\n      {\r\n        path: 'profile/view',\r\n        name: 'ViewProfile',\r\n        component: ViewProfile,\r\n        meta: { requiresAuth: true }\r\n      },\r\n      {\r\n        path: 'profile/edit',\r\n        name: 'EditProfile',\r\n        component: EditProfile,\r\n        meta: { requiresAuth: true, roles: ['citHead', 'teacher', 'ssp', 'sspHead'] }\r\n      },\r\n      {\r\n        path: 'profile/password',\r\n        name: 'ChangePassword',\r\n        component: ChangePassword,\r\n        meta: { requiresAuth: true, roles: ['citHead', 'teacher', 'ssp', 'sspHead'] }\r\n      },\r\n      {\r\n        path: 'teacher-management',\r\n        name: 'TeacherManagement',\r\n        component: TeacherManagement,\r\n        meta: { requiresAuth: true, roles: ['citHead'] }\r\n      },\r\n      {\r\n        path: 'ssp-management',\r\n        name: 'SSPManagement',\r\n        component: SSPManagement,\r\n        meta: { requiresAuth: true, roles: ['citHead'] }\r\n      },\r\n      {\r\n        path: 'ssp-student-management',\r\n        name: 'SSPStudentManagement',\r\n        component: FailingStudents,\r\n        meta: { requiresAuth: true, roles: ['citHead'] }\r\n      },\r\n      {\r\n        path: 'completed-surveys',\r\n        name: 'CompletedSurveys',\r\n        component: CompletedSurveys,\r\n        meta: { requiresAuth: true, roles: ['ssp', 'sspHead'] }\r\n      }\r\n    ]\r\n  }\r\n]\r\n\r\nconst router = createRouter({\r\n  history: createWebHistory(),\r\n  routes\r\n})\r\n\r\n// Navigation Guards\r\nrouter.beforeEach((to, from, next) => {\r\n  const isLoggedIn = store.getters.isLoggedIn\r\n  const isCITHead = store.getters.isCITHead\r\n  const isTeacher = store.getters.isTeacher\r\n  const isSSP = store.getters.isSSP\r\n  const isSSPHead = store.getters.isSSPHead\r\n  const userRole = store.state.auth.user?.role\r\n\r\n  // Routes that require authentication \r\n  if (to.matched.some(record => record.meta.requiresAuth)) {\r\n    if (!isLoggedIn) {\r\n      next('/login')\r\n      return\r\n    }\r\n    \r\n    // Check role-specific routes\r\n    if (to.meta.roles && to.meta.roles.length > 0) {\r\n      if (!to.meta.roles.includes(userRole)) {\r\n        // Redirect to appropriate dashboard based on role\r\n        if (isCITHead) {\r\n          next('/dashboard')\r\n        } else if (isTeacher) {\r\n          next('/teacher-dashboard')\r\n        } else if (isSSPHead || isSSP) {\r\n          next('/ssp-dashboard')\r\n        } else {\r\n          next('/login')\r\n        }\r\n        return\r\n      }\r\n    }\r\n  }\r\n\r\n  // Routes for guests only (login, register)\r\n  if (to.matched.some(record => record.meta.guest)) {\r\n    if (isLoggedIn) {\r\n      if (isCITHead) {\r\n        next('/dashboard')\r\n      } else if (isTeacher) {\r\n        next('/teacher-dashboard')\r\n      } else if(isSSPHead) {\r\n        next('/ssp-dashboard')\r\n      }\r\n      return\r\n    }\r\n  }\r\n\r\n  // Redirect to appropriate dashboard after login\r\n  if (to.path === '/dashboard') {\r\n    if (isTeacher) {\r\n      next('/teacher-dashboard')\r\n      return\r\n    } else if (isSSPHead) {\r\n      next('/ssp-dashboard')\r\n      return\r\n    }\r\n  }\r\n\r\n  next()\r\n})\r\n\r\nexport default router "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}