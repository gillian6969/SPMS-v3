{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { ref, onMounted } from 'vue';\nimport { useStore } from 'vuex';\nimport { useRouter } from 'vue-router';\nexport default {\n  name: 'Login',\n  setup() {\n    const store = useStore();\n    const router = useRouter();\n    const loginType = ref('user');\n    const email = ref('');\n    const password = ref('');\n    const error = ref('');\n    const isLoading = ref(false);\n    const recaptchaToken = ref('');\n    const recaptchaSiteKey = '6LcsLNkqAAAAAH5OO5HjmocsPxA_y80LzVold7rW';\n    onMounted(() => {\n      // Load reCAPTCHA script\n      const script = document.createElement('script');\n      script.src = 'https://www.google.com/recaptcha/api.js';\n      script.async = true;\n      script.defer = true;\n      document.head.appendChild(script);\n\n      // Initialize reCAPTCHA\n      script.onload = () => {\n        window.grecaptcha.ready(() => {\n          window.grecaptcha.render('g-recaptcha', {\n            sitekey: recaptchaSiteKey,\n            callback: token => {\n              recaptchaToken.value = token;\n            },\n            'expired-callback': () => {\n              recaptchaToken.value = '';\n            }\n          });\n        });\n      };\n    });\n    const handleLogin = async () => {\n      try {\n        if (!recaptchaToken.value) {\n          error.value = 'Please complete the reCAPTCHA verification';\n          return;\n        }\n        error.value = '';\n        isLoading.value = true;\n        const credentials = {\n          email: email.value,\n          password: password.value,\n          loginType: loginType.value,\n          recaptchaToken: recaptchaToken.value\n        };\n        console.log('Attempting login with:', {\n          email: credentials.email,\n          loginType: credentials.loginType,\n          timestamp: new Date().toISOString()\n        });\n        const response = await store.dispatch('login', credentials);\n        console.log('Login response received:', {\n          userRole: response.data.user?.role,\n          loginType: loginType.value,\n          timestamp: new Date().toISOString()\n        });\n        const user = response.data.user;\n\n        // Check login type before proceeding\n        if (loginType.value === 'citHead') {\n          if (user.role === 'teacher' || user.role === 'ssp') {\n            console.log('Access denied: Non-CIT Head using CIT Head login');\n            error.value = 'Access denied. Please use the Teacher/Student login.';\n            await store.dispatch('logout');\n            return;\n          }\n        }\n        if (loginType === 'user') {\n          if (user.role === 'citHead' || user.role === 'sspHead') {\n            console.log('Access denied: CIT Head using regular login');\n            error.value = 'Access denied. Please use the CIT Head login.';\n            await store.dispatch('logout');\n            return;\n          }\n        }\n\n        // if (loginType.value === 'citHead' && user.role !== 'citHead') {\n        //   console.log('Access denied: Non-CIT Head using CIT Head login')\n        //   error.value = 'Access denied. Please use the Teacher/Student login.'\n        //   await store.dispatch('logout')\n        //   return\n        // }\n\n        // if (loginType.value === 'user' && user.role === 'citHead') {\n        //   console.log('Access denied: CIT Head using regular login')\n        //   error.value = 'Access denied. Please use the CIT Head login.'\n        //   await store.dispatch('logout')\n        //   return\n        // }\n\n        router.push('/dashboard');\n      } catch (err) {\n        console.error('Login error:', {\n          error: err,\n          response: err.response?.data,\n          status: err.response?.status,\n          timestamp: new Date().toISOString()\n        });\n        if (err.response?.status === 403) {\n          error.value = err.response.data.message || 'Access denied. Please check your login type.';\n        } else if (err.response?.status === 400) {\n          error.value = err.response.data.message || 'Invalid credentials. Please try again.';\n        } else {\n          error.value = 'Login failed. Please try again.';\n        }\n\n        // Reset reCAPTCHA on error\n        if (window.grecaptcha) {\n          window.grecaptcha.reset();\n        }\n        recaptchaToken.value = '';\n      } finally {\n        isLoading.value = false;\n      }\n    };\n    const goToForgotPassword = () => {\n      router.push('/forgot');\n    };\n    return {\n      loginType,\n      email,\n      password,\n      error,\n      isLoading,\n      handleLogin,\n      recaptchaSiteKey,\n      recaptchaToken,\n      goToForgotPassword\n    };\n  }\n};","map":{"version":3,"names":["ref","onMounted","useStore","useRouter","name","setup","store","router","loginType","email","password","error","isLoading","recaptchaToken","recaptchaSiteKey","script","document","createElement","src","async","defer","head","appendChild","onload","window","grecaptcha","ready","render","sitekey","callback","token","value","expired-callback","handleLogin","credentials","console","log","timestamp","Date","toISOString","response","dispatch","userRole","data","user","role","push","err","status","message","reset","goToForgotPassword"],"sources":["D:\\au_dev\\client\\src\\views\\Login.vue"],"sourcesContent":["<template>\r\n  <div class=\"login-container\">\r\n    <div class=\"login-card\" :data-login-type=\"loginType\">\r\n      <div class=\"left-section\">\r\n        <div class=\"content-wrapper\">\r\n          <div class=\"logo-container\">\r\n            <img src=\"@/assets/logo1.png\" alt=\"School Logo\" class=\"logo logo1\" :class=\"{ active: loginType === 'citHead' }\">\r\n            <img src=\"@/assets/logo2.png\" alt=\"School Logo\" class=\"logo logo2\" :class=\"{ active: loginType === 'user' }\">\r\n          </div>\r\n          <h1 class=\"school-name\">PHINMA ARAULLO UNIVERSITY</h1>\r\n          <p class=\"system-name\">Student Performance Monitoring System</p>\r\n        </div>\r\n      </div>\r\n      \r\n      <div class=\"right-section\" :data-login-type=\"loginType\">\r\n        <h2 class=\"form-title\">{{ loginType === 'citHead' ? 'CIT HEAD & SSP HEAD LOGIN' : 'TEACHER & SSP ADVISERS LOGIN' }}</h2>\r\n        \r\n        <!-- Login Type Selector -->\r\n        <div class=\"login-type-selector\">\r\n          <button \r\n            class=\"type-btn\" \r\n            :class=\"{'active': loginType === 'user'}\"\r\n            :data-login-type=\"loginType\"\r\n            @click=\"loginType = 'user'\"\r\n          >\r\n            CIT Head\r\n          </button>\r\n          <button \r\n            class=\"type-btn\" \r\n            :class=\"{'active': loginType === 'citHead'}\"\r\n            :data-login-type=\"loginType\"\r\n            @click=\"loginType = 'citHead'\"\r\n          >\r\n            TEACHER & SSP ADVISERS LOGIN\r\n          </button>\r\n        </div>\r\n\r\n        <form @submit.prevent=\"handleLogin\" class=\"login-form\">\r\n          <div class=\"form-group\">\r\n            <label class=\"form-label\">Username</label>\r\n            <input \r\n              type=\"text\" \r\n              class=\"form-control\" \r\n              v-model=\"email\" \r\n              placeholder=\"Enter your email here\"\r\n              required\r\n              :disabled=\"isLoading\"\r\n            >\r\n          </div>\r\n          \r\n          <div class=\"form-group\">\r\n            <label class=\"form-label\">Password</label>\r\n            <input \r\n              type=\"password\" \r\n              class=\"form-control\" \r\n              v-model=\"password\" \r\n              placeholder=\"Enter your password here\"\r\n              required\r\n              :disabled=\"isLoading\"\r\n            >\r\n            <div class=\"mt-3 hover:cursor-pointer\" @click=\"goToForgotPassword\">\r\n              <h4>Forgot Password</h4>\r\n            </div>\r\n          </div>\r\n\r\n          <!-- reCAPTCHA -->\r\n          <div class=\"form-group recaptcha-container\">\r\n            <div id=\"g-recaptcha\"></div>\r\n          </div>\r\n\r\n          <button type=\"submit\" class=\"btn-login\" :data-login-type=\"loginType\" :disabled=\"isLoading || !recaptchaToken\">\r\n            <span v-if=\"isLoading\" class=\"spinner\">\r\n              <i class=\"fas fa-spinner fa-spin\"></i>\r\n            </span>\r\n            <span v-else>Login</span>\r\n          </button>\r\n\r\n          <p v-if=\"error\" class=\"error-message\">{{ error }}</p>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { ref, onMounted } from 'vue'\r\nimport { useStore } from 'vuex'\r\nimport { useRouter } from 'vue-router'\r\n\r\nexport default {\r\n  name: 'Login',\r\n  setup() {\r\n    const store = useStore()\r\n    const router = useRouter()\r\n\r\n    const loginType = ref('user')\r\n    const email = ref('')\r\n    const password = ref('')\r\n    const error = ref('')\r\n    const isLoading = ref(false)\r\n    const recaptchaToken = ref('')\r\n    const recaptchaSiteKey = '6LcsLNkqAAAAAH5OO5HjmocsPxA_y80LzVold7rW'\r\n\r\n    onMounted(() => {\r\n      // Load reCAPTCHA script\r\n      const script = document.createElement('script')\r\n      script.src = 'https://www.google.com/recaptcha/api.js'\r\n      script.async = true\r\n      script.defer = true\r\n      document.head.appendChild(script)\r\n\r\n      // Initialize reCAPTCHA\r\n      script.onload = () => {\r\n        window.grecaptcha.ready(() => {\r\n          window.grecaptcha.render('g-recaptcha', {\r\n            sitekey: recaptchaSiteKey,\r\n            callback: (token) => {\r\n              recaptchaToken.value = token\r\n            },\r\n            'expired-callback': () => {\r\n              recaptchaToken.value = ''\r\n            }\r\n          })\r\n        })\r\n      }\r\n    })\r\n\r\n    const handleLogin = async () => {\r\n      try {\r\n        if (!recaptchaToken.value) {\r\n          error.value = 'Please complete the reCAPTCHA verification'\r\n          return\r\n        }\r\n\r\n        error.value = ''\r\n        isLoading.value = true\r\n\r\n        const credentials = {\r\n          email: email.value,\r\n          password: password.value,\r\n          loginType: loginType.value,\r\n          recaptchaToken: recaptchaToken.value\r\n        }\r\n\r\n        console.log('Attempting login with:', { \r\n          email: credentials.email, \r\n          loginType: credentials.loginType,\r\n          timestamp: new Date().toISOString()\r\n        })\r\n\r\n        const response = await store.dispatch('login', credentials)\r\n        console.log('Login response received:', {\r\n          userRole: response.data.user?.role,\r\n          loginType: loginType.value,\r\n          timestamp: new Date().toISOString()\r\n        })\r\n        \r\n        const user = response.data.user\r\n        \r\n        // Check login type before proceeding\r\n        if(loginType.value === 'citHead'){\r\n          if(user.role === 'teacher' || user.role === 'ssp'){\r\n            console.log('Access denied: Non-CIT Head using CIT Head login')\r\n            error.value = 'Access denied. Please use the Teacher/Student login.'\r\n            await store.dispatch('logout')\r\n            return\r\n          }\r\n        }\r\n\r\n        if(loginType === 'user'){\r\n          if(user.role === 'citHead' || user.role === 'sspHead'){\r\n            console.log('Access denied: CIT Head using regular login')\r\n            error.value = 'Access denied. Please use the CIT Head login.'\r\n            await store.dispatch('logout')\r\n            return\r\n          }\r\n        }\r\n\r\n        // if (loginType.value === 'citHead' && user.role !== 'citHead') {\r\n        //   console.log('Access denied: Non-CIT Head using CIT Head login')\r\n        //   error.value = 'Access denied. Please use the Teacher/Student login.'\r\n        //   await store.dispatch('logout')\r\n        //   return\r\n        // }\r\n        \r\n        // if (loginType.value === 'user' && user.role === 'citHead') {\r\n        //   console.log('Access denied: CIT Head using regular login')\r\n        //   error.value = 'Access denied. Please use the CIT Head login.'\r\n        //   await store.dispatch('logout')\r\n        //   return\r\n        // }\r\n\r\n        router.push('/dashboard')\r\n      } catch (err) {\r\n        console.error('Login error:', {\r\n          error: err,\r\n          response: err.response?.data,\r\n          status: err.response?.status,\r\n          timestamp: new Date().toISOString()\r\n        })\r\n        \r\n        if (err.response?.status === 403) {\r\n          error.value = err.response.data.message || 'Access denied. Please check your login type.'\r\n        } else if (err.response?.status === 400) {\r\n          error.value = err.response.data.message || 'Invalid credentials. Please try again.'\r\n        } else {\r\n          error.value = 'Login failed. Please try again.'\r\n        }\r\n\r\n        // Reset reCAPTCHA on error\r\n        if (window.grecaptcha) {\r\n          window.grecaptcha.reset()\r\n        }\r\n        recaptchaToken.value = ''\r\n      } finally {\r\n        isLoading.value = false\r\n      }\r\n    }\r\n\r\n    const goToForgotPassword = () => {\r\n      router.push('/forgot')\r\n    }\r\n\r\n    return {\r\n      loginType,\r\n      email,\r\n      password,\r\n      error,\r\n      isLoading,\r\n      handleLogin,\r\n      recaptchaSiteKey,\r\n      recaptchaToken,\r\n      goToForgotPassword\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n@import url('https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&family=Poppins:wght@400;500;600;700&display=swap');\r\n\r\n.login-container {\r\n  @apply min-h-screen w-screen flex items-stretch justify-end bg-gray-50 m-0 p-0 overflow-hidden fixed inset-0;\r\n}\r\n\r\n.login-card {\r\n  @apply w-screen h-full flex bg-white overflow-hidden m-0 p-0 relative;\r\n}\r\n\r\n.left-section {\r\n  @apply flex-1 p-8 flex flex-col items-center justify-center text-center bg-white m-0 relative transition-transform duration-500;\r\n}\r\n\r\n.content-wrapper {\r\n  @apply flex flex-col items-center justify-center gap-0 w-full text-center px-8;\r\n}\r\n\r\n.logo-container {\r\n  @apply relative w-[600px] h-[600px] mb-0 flex items-center justify-center;\r\n}\r\n\r\n.logo {\r\n  @apply absolute max-w-full max-h-full w-auto h-auto top-1/2 left-1/2 -translate-x-1/2 -translate-y-1/2 transition-opacity duration-700 opacity-0 object-contain;\r\n}\r\n\r\n.logo.active {\r\n  @apply opacity-100;\r\n}\r\n\r\n/* Logo transitions based on login type */\r\n.login-card[data-login-type=\"citHead\"] .logo-container .logo1 {\r\n  opacity: 1;\r\n}\r\n\r\n.login-card[data-login-type=\"citHead\"] .logo-container .logo2 {\r\n  opacity: 0;\r\n}\r\n\r\n.login-card[data-login-type=\"user\"] .logo-container .logo1 {\r\n  opacity: 0;\r\n}\r\n\r\n.login-card[data-login-type=\"user\"] .logo-container .logo2 {\r\n  opacity: 1;\r\n}\r\n\r\n.right-section {\r\n  @apply min-w-[500px] w-[600px] p-20 text-white flex flex-col justify-center m-0 relative transition-all duration-700;\r\n}\r\n\r\n/* Sliding animations */\r\n.login-card[data-login-type=\"citHead\"] .left-section {\r\n  transform: translateX(0);\r\n}\r\n\r\n.login-card[data-login-type=\"citHead\"] .right-section {\r\n  transform: translateX(0);\r\n  @apply bg-navy rounded-l-3xl;\r\n}\r\n\r\n.login-card[data-login-type=\"user\"] .left-section {\r\n  transform: translateX(600px);\r\n}\r\n\r\n.login-card[data-login-type=\"user\"] .right-section {\r\n  transform: translateX(calc(-100vw + 600px));\r\n  @apply bg-navy rounded-r-3xl;\r\n}\r\n\r\n.login-type-selector {\r\n  @apply flex gap-4 mb-8;\r\n}\r\n\r\n.type-btn {\r\n  @apply flex-1 py-3 px-4 border-2 border-white bg-transparent text-white rounded-lg cursor-pointer font-semibold transition-all duration-300;\r\n}\r\n\r\n.type-btn:hover:not(.active) {\r\n  @apply bg-white/10;\r\n}\r\n\r\n.type-btn.active[data-login-type=\"citHead\"],\r\n.type-btn.active[data-login-type=\"user\"] {\r\n  @apply bg-white text-navy;\r\n}\r\n\r\n.school-name {\r\n  @apply text-4xl font-bold text-navy m-0 text-center relative w-full leading-tight -mt-8;\r\n}\r\n\r\n.system-name {\r\n  @apply text-xl text-gray-800 m-0 relative w-full leading-relaxed mt-2;\r\n}\r\n\r\n.login-form {\r\n  @apply w-full;\r\n}\r\n\r\n.form-title {\r\n  @apply text-5xl font-semibold mb-8 text-white text-start -mt-16;\r\n}\r\n\r\n.form-group {\r\n  @apply mb-6;\r\n}\r\n\r\n.form-label {\r\n  @apply block mb-2 text-white text-base font-medium;\r\n}\r\n\r\n.form-control {\r\n  @apply w-full py-3 px-4 border border-white/20 rounded-lg bg-transparent text-white text-base transition-all duration-300;\r\n}\r\n\r\n.form-control::placeholder {\r\n  @apply text-white/70;\r\n}\r\n\r\n.form-control:focus {\r\n  @apply outline-none border-white ring-2 ring-white/10;\r\n}\r\n\r\n.btn-login {\r\n  @apply bg-white text-navy py-3 px-4 rounded-lg w-3/5 uppercase font-bold mt-8 border-none cursor-pointer transition-colors duration-200 block mx-auto;\r\n}\r\n\r\n.btn-login:hover {\r\n  @apply bg-gray-100;\r\n}\r\n\r\n.error-message {\r\n  @apply text-red-400 mt-4 text-center;\r\n}\r\n\r\n.spinner {\r\n  @apply inline-block mr-2;\r\n}\r\n\r\n.btn-login:disabled {\r\n  @apply opacity-70 cursor-not-allowed;\r\n}\r\n\r\n.form-control:disabled {\r\n  @apply bg-white/10 cursor-not-allowed;\r\n}\r\n\r\n.recaptcha-container {\r\n  @apply flex justify-center mt-8;\r\n}\r\n\r\n/* Responsive Design */\r\n@media (max-width: 768px) {\r\n  .login-card {\r\n    @apply flex-col max-w-[400px];\r\n  }\r\n\r\n  .right-section {\r\n    @apply w-full p-8;\r\n  }\r\n\r\n  .left-section {\r\n    @apply p-8;\r\n  }\r\n\r\n  .logo-container {\r\n    @apply w-[300px] h-[300px];\r\n  }\r\n\r\n  .school-name {\r\n    @apply text-2xl;\r\n  }\r\n\r\n  .system-name {\r\n    @apply text-lg;\r\n  }\r\n\r\n  .form-title {\r\n    @apply text-3xl mb-6 -mt-10;\r\n  }\r\n\r\n  .login-type-selector {\r\n    @apply mb-6;\r\n  }\r\n\r\n  .form-group {\r\n    @apply mb-5;\r\n  }\r\n\r\n  .btn-login {\r\n    @apply w-full mt-6;\r\n  }\r\n}\r\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}