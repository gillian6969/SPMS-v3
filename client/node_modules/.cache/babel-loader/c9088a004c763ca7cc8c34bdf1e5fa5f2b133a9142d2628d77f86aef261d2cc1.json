{"ast":null,"code":"import { normalizeClass as _normalizeClass, createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, createCommentVNode as _createCommentVNode, vModelText as _vModelText, withDirectives as _withDirectives, vModelDynamic as _vModelDynamic, openBlock as _openBlock, createElementBlock as _createElementBlock, withModifiers as _withModifiers, Fragment as _Fragment } from \"vue\";\nimport _imports_0 from '@/assets/logo2.png';\nconst _hoisted_1 = {\n  class: \"login-container\"\n};\nconst _hoisted_2 = [\"data-login-type\"];\nconst _hoisted_3 = {\n  class: \"left-section\"\n};\nconst _hoisted_4 = {\n  class: \"content-wrapper\"\n};\nconst _hoisted_5 = {\n  class: \"logo-container\"\n};\nconst _hoisted_6 = [\"data-login-type\"];\nconst _hoisted_7 = {\n  class: \"form-title\"\n};\nconst _hoisted_8 = {\n  class: \"login-type-selector\"\n};\nconst _hoisted_9 = [\"data-login-type\"];\nconst _hoisted_10 = [\"data-login-type\"];\nconst _hoisted_11 = {\n  class: \"form-group\"\n};\nconst _hoisted_12 = [\"disabled\"];\nconst _hoisted_13 = {\n  class: \"form-group\"\n};\nconst _hoisted_14 = {\n  class: \"password-input-container\"\n};\nconst _hoisted_15 = [\"type\", \"disabled\"];\nconst _hoisted_16 = [\"data-login-type\", \"disabled\"];\nconst _hoisted_17 = {\n  key: 0,\n  class: \"spinner\"\n};\nconst _hoisted_18 = {\n  key: 1\n};\nconst _hoisted_19 = {\n  key: 0,\n  class: \"error-message\"\n};\nconst _hoisted_20 = {\n  key: 0,\n  class: \"modal-overlay\"\n};\nconst _hoisted_21 = {\n  class: \"modal-container\"\n};\nconst _hoisted_22 = {\n  class: \"modal-header\"\n};\nconst _hoisted_23 = {\n  class: \"modal-body\"\n};\nconst _hoisted_24 = {\n  key: 0\n};\nconst _hoisted_25 = {\n  class: \"form-group\"\n};\nconst _hoisted_26 = [\"disabled\"];\nconst _hoisted_27 = {\n  key: 0,\n  class: \"spinner\"\n};\nconst _hoisted_28 = {\n  key: 1\n};\nconst _hoisted_29 = {\n  key: 1\n};\nconst _hoisted_30 = {\n  class: \"form-group\"\n};\nconst _hoisted_31 = [\"disabled\"];\nconst _hoisted_32 = {\n  key: 0,\n  class: \"spinner\"\n};\nconst _hoisted_33 = {\n  key: 1\n};\nconst _hoisted_34 = {\n  key: 2\n};\nconst _hoisted_35 = {\n  class: \"form-group\"\n};\nconst _hoisted_36 = {\n  class: \"password-input-container\"\n};\nconst _hoisted_37 = [\"type\"];\nconst _hoisted_38 = {\n  class: \"password-requirements mt-2\"\n};\nconst _hoisted_39 = {\n  class: \"text-xs\"\n};\nconst _hoisted_40 = {\n  class: \"form-group\"\n};\nconst _hoisted_41 = {\n  class: \"password-input-container\"\n};\nconst _hoisted_42 = [\"type\"];\nconst _hoisted_43 = {\n  key: 0,\n  class: \"text-red-400 text-sm mt-1\"\n};\nconst _hoisted_44 = [\"disabled\"];\nconst _hoisted_45 = {\n  key: 0,\n  class: \"spinner\"\n};\nconst _hoisted_46 = {\n  key: 1\n};\nconst _hoisted_47 = {\n  key: 3,\n  class: \"error-message mt-4\"\n};\nconst _hoisted_48 = {\n  key: 4,\n  class: \"success-message mt-4\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createElementVNode(\"div\", _hoisted_1, [_createElementVNode(\"div\", {\n    class: \"login-card\",\n    \"data-login-type\": $setup.loginType\n  }, [_createElementVNode(\"div\", _hoisted_3, [_createElementVNode(\"div\", _hoisted_4, [_createElementVNode(\"div\", _hoisted_5, [_createElementVNode(\"img\", {\n    src: _imports_0,\n    alt: \"School Logo\",\n    class: _normalizeClass([\"logo logo1\", {\n      active: $setup.loginType === 'citHead'\n    }])\n  }, null, 2 /* CLASS */), _createElementVNode(\"img\", {\n    src: _imports_0,\n    alt: \"School Logo\",\n    class: _normalizeClass([\"logo logo2\", {\n      active: $setup.loginType === 'user'\n    }])\n  }, null, 2 /* CLASS */)]), _cache[17] || (_cache[17] = _createElementVNode(\"h1\", {\n    class: \"school-name\"\n  }, \"PHINMA ARAULLO UNIVERSITY\", -1 /* HOISTED */)), _cache[18] || (_cache[18] = _createElementVNode(\"p\", {\n    class: \"system-name\"\n  }, \"Student Performance Monitoring System\", -1 /* HOISTED */))])]), _createElementVNode(\"div\", {\n    class: \"right-section\",\n    \"data-login-type\": $setup.loginType\n  }, [_createElementVNode(\"h2\", _hoisted_7, _toDisplayString($setup.loginType === 'citHead' ? 'CIT HEAD & SSP HEAD LOGIN' : 'TEACHER & SSP ADVISERS LOGIN'), 1 /* TEXT */), _createCommentVNode(\" Login Type Selector \"), _createElementVNode(\"div\", _hoisted_8, [_createElementVNode(\"button\", {\n    class: _normalizeClass([\"type-btn\", {\n      'active': $setup.loginType === 'user'\n    }]),\n    \"data-login-type\": $setup.loginType,\n    onClick: _cache[0] || (_cache[0] = $event => $setup.loginType = 'user')\n  }, \" TEACHER & SSP ADVISERS LOGIN \", 10 /* CLASS, PROPS */, _hoisted_9), _createElementVNode(\"button\", {\n    class: _normalizeClass([\"type-btn\", {\n      'active': $setup.loginType === 'citHead'\n    }]),\n    \"data-login-type\": $setup.loginType,\n    onClick: _cache[1] || (_cache[1] = $event => $setup.loginType = 'citHead')\n  }, \" CIT Head & SSP Head LOGIN \", 10 /* CLASS, PROPS */, _hoisted_10)]), _createElementVNode(\"form\", {\n    onSubmit: _cache[6] || (_cache[6] = _withModifiers((...args) => $setup.handleLogin && $setup.handleLogin(...args), [\"prevent\"])),\n    class: \"login-form\"\n  }, [_createElementVNode(\"div\", _hoisted_11, [_cache[19] || (_cache[19] = _createElementVNode(\"label\", {\n    class: \"form-label\"\n  }, \"Username\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    class: \"form-control\",\n    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $setup.email = $event),\n    placeholder: \"Enter your email here\",\n    required: \"\",\n    disabled: $setup.isLoading\n  }, null, 8 /* PROPS */, _hoisted_12), [[_vModelText, $setup.email]])]), _createElementVNode(\"div\", _hoisted_13, [_cache[21] || (_cache[21] = _createElementVNode(\"label\", {\n    class: \"form-label\"\n  }, \"Password\", -1 /* HOISTED */)), _createElementVNode(\"div\", _hoisted_14, [_withDirectives(_createElementVNode(\"input\", {\n    type: _ctx.showPassword ? 'text' : 'password',\n    class: \"form-control password-input\",\n    \"onUpdate:modelValue\": _cache[3] || (_cache[3] = $event => $setup.password = $event),\n    placeholder: \"Enter your password here\",\n    required: \"\",\n    disabled: $setup.isLoading\n  }, null, 8 /* PROPS */, _hoisted_15), [[_vModelDynamic, $setup.password]]), _createElementVNode(\"button\", {\n    type: \"button\",\n    class: \"password-toggle-btn\",\n    onClick: _cache[4] || (_cache[4] = $event => _ctx.showPassword = !_ctx.showPassword)\n  }, [_createElementVNode(\"i\", {\n    class: _normalizeClass(_ctx.showPassword ? 'fas fa-eye-slash' : 'fas fa-eye')\n  }, null, 2 /* CLASS */)])]), _createElementVNode(\"div\", {\n    class: \"mt-3 hover:cursor-pointer\",\n    onClick: _cache[5] || (_cache[5] = (...args) => $setup.goToForgotPassword && $setup.goToForgotPassword(...args))\n  }, _cache[20] || (_cache[20] = [_createElementVNode(\"h4\", null, \"Forgot Password\", -1 /* HOISTED */)]))]), _createCommentVNode(\" reCAPTCHA \"), _cache[23] || (_cache[23] = _createElementVNode(\"div\", {\n    class: \"form-group recaptcha-container\"\n  }, [_createElementVNode(\"div\", {\n    id: \"g-recaptcha\"\n  })], -1 /* HOISTED */)), _createElementVNode(\"button\", {\n    type: \"submit\",\n    class: \"btn-login\",\n    \"data-login-type\": $setup.loginType,\n    disabled: $setup.isLoading || !$setup.recaptchaToken\n  }, [$setup.isLoading ? (_openBlock(), _createElementBlock(\"span\", _hoisted_17, _cache[22] || (_cache[22] = [_createElementVNode(\"i\", {\n    class: \"fas fa-spinner fa-spin\"\n  }, null, -1 /* HOISTED */)]))) : (_openBlock(), _createElementBlock(\"span\", _hoisted_18, \"Login\"))], 8 /* PROPS */, _hoisted_16), $setup.error ? (_openBlock(), _createElementBlock(\"p\", _hoisted_19, _toDisplayString($setup.error), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true)], 32 /* NEED_HYDRATION */)], 8 /* PROPS */, _hoisted_6)], 8 /* PROPS */, _hoisted_2)]), _createCommentVNode(\" Forgot Password Modal \"), $setup.showForgotPasswordModal ? (_openBlock(), _createElementBlock(\"div\", _hoisted_20, [_createElementVNode(\"div\", _hoisted_21, [_createElementVNode(\"div\", _hoisted_22, [_cache[24] || (_cache[24] = _createElementVNode(\"h3\", {\n    class: \"text-xl font-semibold\"\n  }, \"Reset Password\", -1 /* HOISTED */)), _createElementVNode(\"button\", {\n    onClick: _cache[7] || (_cache[7] = $event => $setup.showForgotPasswordModal = false),\n    class: \"close-btn\"\n  }, \"Ã—\")]), _createElementVNode(\"div\", _hoisted_23, [$setup.forgotPasswordStep === 1 ? (_openBlock(), _createElementBlock(\"div\", _hoisted_24, [_cache[26] || (_cache[26] = _createElementVNode(\"p\", {\n    class: \"mb-4\"\n  }, \"Enter your email address to receive a verification code\", -1 /* HOISTED */)), _createElementVNode(\"div\", _hoisted_25, [_withDirectives(_createElementVNode(\"input\", {\n    type: \"email\",\n    \"onUpdate:modelValue\": _cache[8] || (_cache[8] = $event => $setup.forgotEmail = $event),\n    placeholder: \"Email Address\",\n    class: \"form-control bg-white text-gray-800\",\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $setup.forgotEmail]])]), _createElementVNode(\"button\", {\n    onClick: _cache[9] || (_cache[9] = (...args) => $setup.sendVerificationCode && $setup.sendVerificationCode(...args)),\n    class: \"btn-primary w-full\",\n    disabled: $setup.isLoadingReset\n  }, [$setup.isLoadingReset ? (_openBlock(), _createElementBlock(\"span\", _hoisted_27, _cache[25] || (_cache[25] = [_createElementVNode(\"i\", {\n    class: \"fas fa-spinner fa-spin\"\n  }, null, -1 /* HOISTED */)]))) : (_openBlock(), _createElementBlock(\"span\", _hoisted_28, \"Send Verification Code\"))], 8 /* PROPS */, _hoisted_26)])) : _createCommentVNode(\"v-if\", true), $setup.forgotPasswordStep === 2 ? (_openBlock(), _createElementBlock(\"div\", _hoisted_29, [_cache[28] || (_cache[28] = _createElementVNode(\"p\", {\n    class: \"mb-4\"\n  }, \"Enter the verification code sent to your email\", -1 /* HOISTED */)), _createElementVNode(\"div\", _hoisted_30, [_withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    \"onUpdate:modelValue\": _cache[10] || (_cache[10] = $event => $setup.verificationCode = $event),\n    placeholder: \"Verification Code\",\n    class: \"form-control bg-white text-gray-800\",\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $setup.verificationCode]])]), _createElementVNode(\"button\", {\n    onClick: _cache[11] || (_cache[11] = (...args) => $setup.verifyCode && $setup.verifyCode(...args)),\n    class: \"btn-primary w-full\",\n    disabled: $setup.isLoadingReset\n  }, [$setup.isLoadingReset ? (_openBlock(), _createElementBlock(\"span\", _hoisted_32, _cache[27] || (_cache[27] = [_createElementVNode(\"i\", {\n    class: \"fas fa-spinner fa-spin\"\n  }, null, -1 /* HOISTED */)]))) : (_openBlock(), _createElementBlock(\"span\", _hoisted_33, \"Verify Code\"))], 8 /* PROPS */, _hoisted_31)])) : _createCommentVNode(\"v-if\", true), $setup.forgotPasswordStep === 3 ? (_openBlock(), _createElementBlock(\"div\", _hoisted_34, [_cache[31] || (_cache[31] = _createElementVNode(\"p\", {\n    class: \"mb-4\"\n  }, \"Set your new password\", -1 /* HOISTED */)), _createElementVNode(\"div\", _hoisted_35, [_createElementVNode(\"div\", _hoisted_36, [_withDirectives(_createElementVNode(\"input\", {\n    type: _ctx.showNewPassword ? 'text' : 'password',\n    \"onUpdate:modelValue\": _cache[12] || (_cache[12] = $event => $setup.newPassword = $event),\n    placeholder: \"New Password\",\n    class: \"form-control bg-white text-gray-800 password-input\",\n    required: \"\"\n  }, null, 8 /* PROPS */, _hoisted_37), [[_vModelDynamic, $setup.newPassword]]), _createElementVNode(\"button\", {\n    type: \"button\",\n    class: \"password-toggle-btn text-navy\",\n    onClick: _cache[13] || (_cache[13] = $event => _ctx.showNewPassword = !_ctx.showNewPassword)\n  }, [_createElementVNode(\"i\", {\n    class: _normalizeClass(_ctx.showNewPassword ? 'fas fa-eye-slash' : 'fas fa-eye')\n  }, null, 2 /* CLASS */)])]), _createCommentVNode(\" Password strength requirements \"), _createElementVNode(\"div\", _hoisted_38, [_cache[29] || (_cache[29] = _createElementVNode(\"p\", {\n    class: \"text-sm mb-1\"\n  }, \"Password must have:\", -1 /* HOISTED */)), _createElementVNode(\"ul\", _hoisted_39, [_createElementVNode(\"li\", {\n    class: _normalizeClass({\n      'requirement-met': _ctx.passwordLength\n    })\n  }, \"At least 8 characters\", 2 /* CLASS */), _createElementVNode(\"li\", {\n    class: _normalizeClass({\n      'requirement-met': _ctx.hasUpperCase\n    })\n  }, \"At least 1 uppercase letter\", 2 /* CLASS */), _createElementVNode(\"li\", {\n    class: _normalizeClass({\n      'requirement-met': _ctx.hasLowerCase\n    })\n  }, \"At least 1 lowercase letter\", 2 /* CLASS */), _createElementVNode(\"li\", {\n    class: _normalizeClass({\n      'requirement-met': _ctx.hasNumber\n    })\n  }, \"At least 1 number\", 2 /* CLASS */), _createElementVNode(\"li\", {\n    class: _normalizeClass({\n      'requirement-met': _ctx.hasSpecialChar\n    })\n  }, \"At least 1 special character\", 2 /* CLASS */)])])]), _createElementVNode(\"div\", _hoisted_40, [_createElementVNode(\"div\", _hoisted_41, [_withDirectives(_createElementVNode(\"input\", {\n    type: _ctx.showConfirmPassword ? 'text' : 'password',\n    \"onUpdate:modelValue\": _cache[14] || (_cache[14] = $event => $setup.confirmPassword = $event),\n    placeholder: \"Confirm New Password\",\n    class: \"form-control bg-white text-gray-800 password-input\",\n    required: \"\"\n  }, null, 8 /* PROPS */, _hoisted_42), [[_vModelDynamic, $setup.confirmPassword]]), _createElementVNode(\"button\", {\n    type: \"button\",\n    class: \"password-toggle-btn text-navy\",\n    onClick: _cache[15] || (_cache[15] = $event => _ctx.showConfirmPassword = !_ctx.showConfirmPassword)\n  }, [_createElementVNode(\"i\", {\n    class: _normalizeClass(_ctx.showConfirmPassword ? 'fas fa-eye-slash' : 'fas fa-eye')\n  }, null, 2 /* CLASS */)])]), $setup.newPassword && $setup.confirmPassword && $setup.newPassword !== $setup.confirmPassword ? (_openBlock(), _createElementBlock(\"p\", _hoisted_43, \" Passwords do not match \")) : _createCommentVNode(\"v-if\", true)]), _createElementVNode(\"button\", {\n    onClick: _cache[16] || (_cache[16] = (...args) => $setup.resetPassword && $setup.resetPassword(...args)),\n    class: \"btn-primary w-full\",\n    disabled: $setup.isLoadingReset\n  }, [$setup.isLoadingReset ? (_openBlock(), _createElementBlock(\"span\", _hoisted_45, _cache[30] || (_cache[30] = [_createElementVNode(\"i\", {\n    class: \"fas fa-spinner fa-spin\"\n  }, null, -1 /* HOISTED */)]))) : (_openBlock(), _createElementBlock(\"span\", _hoisted_46, \"Reset Password\"))], 8 /* PROPS */, _hoisted_44)])) : _createCommentVNode(\"v-if\", true), $setup.resetError ? (_openBlock(), _createElementBlock(\"p\", _hoisted_47, _toDisplayString($setup.resetError), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true), $setup.resetSuccess ? (_openBlock(), _createElementBlock(\"p\", _hoisted_48, _toDisplayString($setup.resetSuccess), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true)])])])) : _createCommentVNode(\"v-if\", true)], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"names":["_imports_0","class","key","_createElementBlock","_Fragment","_createElementVNode","_hoisted_1","$setup","loginType","_hoisted_3","_hoisted_4","_hoisted_5","src","alt","_normalizeClass","active","_hoisted_7","_toDisplayString","_createCommentVNode","_hoisted_8","onClick","_cache","$event","_hoisted_9","_hoisted_10","onSubmit","_withModifiers","args","handleLogin","_hoisted_11","type","email","placeholder","required","disabled","isLoading","_hoisted_12","_hoisted_13","_hoisted_14","_ctx","showPassword","password","_hoisted_15","goToForgotPassword","id","recaptchaToken","_hoisted_17","_hoisted_18","_hoisted_16","error","_hoisted_19","_hoisted_6","_hoisted_2","showForgotPasswordModal","_hoisted_20","_hoisted_21","_hoisted_22","_hoisted_23","forgotPasswordStep","_hoisted_24","_hoisted_25","forgotEmail","sendVerificationCode","isLoadingReset","_hoisted_27","_hoisted_28","_hoisted_26","_hoisted_29","_hoisted_30","verificationCode","verifyCode","_hoisted_32","_hoisted_33","_hoisted_31","_hoisted_34","_hoisted_35","_hoisted_36","showNewPassword","newPassword","_hoisted_37","_hoisted_38","_hoisted_39","passwordLength","hasUpperCase","hasLowerCase","hasNumber","hasSpecialChar","_hoisted_40","_hoisted_41","showConfirmPassword","confirmPassword","_hoisted_42","_hoisted_43","resetPassword","_hoisted_45","_hoisted_46","_hoisted_44","resetError","_hoisted_47","resetSuccess","_hoisted_48"],"sources":["D:\\au_dev\\client\\src\\views\\Login.vue"],"sourcesContent":["<template>\r\n  <div class=\"login-container\">\r\n    <div class=\"login-card\" :data-login-type=\"loginType\">\r\n      <div class=\"left-section\">\r\n        <div class=\"content-wrapper\">\r\n          <div class=\"logo-container\">\r\n            <img src=\"@/assets/logo2.png\" alt=\"School Logo\" class=\"logo logo1\" :class=\"{ active: loginType === 'citHead' }\">\r\n            <img src=\"@/assets/logo2.png\" alt=\"School Logo\" class=\"logo logo2\" :class=\"{ active: loginType === 'user' }\">\r\n          </div>\r\n          <h1 class=\"school-name\">PHINMA ARAULLO UNIVERSITY</h1>\r\n          <p class=\"system-name\">Student Performance Monitoring System</p>\r\n        </div>\r\n      </div>\r\n      \r\n      <div class=\"right-section\" :data-login-type=\"loginType\">\r\n        <h2 class=\"form-title\">{{ loginType === 'citHead' ? 'CIT HEAD & SSP HEAD LOGIN' : 'TEACHER & SSP ADVISERS LOGIN' }}</h2>\r\n        \r\n        <!-- Login Type Selector -->\r\n        <div class=\"login-type-selector\">\r\n          <button \r\n            class=\"type-btn\" \r\n            :class=\"{'active': loginType === 'user'}\"\r\n            :data-login-type=\"loginType\"\r\n            @click=\"loginType = 'user'\"\r\n          >\r\n          TEACHER & SSP ADVISERS LOGIN\r\n          </button>\r\n          <button \r\n            class=\"type-btn\" \r\n            :class=\"{'active': loginType === 'citHead'}\"\r\n            :data-login-type=\"loginType\"\r\n            @click=\"loginType = 'citHead'\"\r\n          >\r\n           CIT Head & SSP Head LOGIN\r\n          </button>\r\n        </div>\r\n\r\n        <form @submit.prevent=\"handleLogin\" class=\"login-form\">\r\n          <div class=\"form-group\">\r\n            <label class=\"form-label\">Username</label>\r\n            <input \r\n              type=\"text\" \r\n              class=\"form-control\" \r\n              v-model=\"email\" \r\n              placeholder=\"Enter your email here\"\r\n              required\r\n              :disabled=\"isLoading\"\r\n            >\r\n          </div>\r\n          \r\n          <div class=\"form-group\">\r\n            <label class=\"form-label\">Password</label>\r\n            <div class=\"password-input-container\">\r\n              <input \r\n                :type=\"showPassword ? 'text' : 'password'\" \r\n                class=\"form-control password-input\" \r\n                v-model=\"password\" \r\n                placeholder=\"Enter your password here\"\r\n                required\r\n                :disabled=\"isLoading\"\r\n              >\r\n              <button \r\n                type=\"button\" \r\n                class=\"password-toggle-btn\" \r\n                @click=\"showPassword = !showPassword\"\r\n              >\r\n                <i :class=\"showPassword ? 'fas fa-eye-slash' : 'fas fa-eye'\"></i>\r\n              </button>\r\n            </div>\r\n            <div class=\"mt-3 hover:cursor-pointer\" @click=\"goToForgotPassword\">\r\n              <h4>Forgot Password</h4>\r\n            </div>\r\n          </div>\r\n\r\n          <!-- reCAPTCHA -->\r\n          <div class=\"form-group recaptcha-container\">\r\n            <div id=\"g-recaptcha\"></div>\r\n          </div>\r\n\r\n          <button type=\"submit\" class=\"btn-login\" :data-login-type=\"loginType\" :disabled=\"isLoading || !recaptchaToken\">\r\n            <span v-if=\"isLoading\" class=\"spinner\">\r\n              <i class=\"fas fa-spinner fa-spin\"></i>\r\n            </span>\r\n            <span v-else>Login</span>\r\n          </button>\r\n\r\n          <p v-if=\"error\" class=\"error-message\">{{ error }}</p>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <!-- Forgot Password Modal -->\r\n  <div v-if=\"showForgotPasswordModal\" class=\"modal-overlay\">\r\n    <div class=\"modal-container\">\r\n      <div class=\"modal-header\">\r\n        <h3 class=\"text-xl font-semibold\">Reset Password</h3>\r\n        <button @click=\"showForgotPasswordModal = false\" class=\"close-btn\">&times;</button>\r\n      </div>\r\n      \r\n      <div class=\"modal-body\">\r\n        <div v-if=\"forgotPasswordStep === 1\">\r\n          <p class=\"mb-4\">Enter your email address to receive a verification code</p>\r\n          <div class=\"form-group\">\r\n            <input \r\n              type=\"email\" \r\n              v-model=\"forgotEmail\" \r\n              placeholder=\"Email Address\" \r\n              class=\"form-control bg-white text-gray-800\"\r\n              required\r\n            >\r\n          </div>\r\n          <button \r\n            @click=\"sendVerificationCode\" \r\n            class=\"btn-primary w-full\"\r\n            :disabled=\"isLoadingReset\"\r\n          >\r\n            <span v-if=\"isLoadingReset\" class=\"spinner\">\r\n              <i class=\"fas fa-spinner fa-spin\"></i>\r\n            </span>\r\n            <span v-else>Send Verification Code</span>\r\n          </button>\r\n        </div>\r\n\r\n        <div v-if=\"forgotPasswordStep === 2\">\r\n          <p class=\"mb-4\">Enter the verification code sent to your email</p>\r\n          <div class=\"form-group\">\r\n            <input \r\n              type=\"text\" \r\n              v-model=\"verificationCode\" \r\n              placeholder=\"Verification Code\" \r\n              class=\"form-control bg-white text-gray-800\"\r\n              required\r\n            >\r\n          </div>\r\n          <button \r\n            @click=\"verifyCode\" \r\n            class=\"btn-primary w-full\"\r\n            :disabled=\"isLoadingReset\"\r\n          >\r\n            <span v-if=\"isLoadingReset\" class=\"spinner\">\r\n              <i class=\"fas fa-spinner fa-spin\"></i>\r\n            </span>\r\n            <span v-else>Verify Code</span>\r\n          </button>\r\n        </div>\r\n\r\n        <div v-if=\"forgotPasswordStep === 3\">\r\n          <p class=\"mb-4\">Set your new password</p>\r\n          <div class=\"form-group\">\r\n            <div class=\"password-input-container\">\r\n              <input \r\n                :type=\"showNewPassword ? 'text' : 'password'\" \r\n                v-model=\"newPassword\" \r\n                placeholder=\"New Password\" \r\n                class=\"form-control bg-white text-gray-800 password-input\"\r\n                required\r\n              >\r\n              <button \r\n                type=\"button\" \r\n                class=\"password-toggle-btn text-navy\" \r\n                @click=\"showNewPassword = !showNewPassword\"\r\n              >\r\n                <i :class=\"showNewPassword ? 'fas fa-eye-slash' : 'fas fa-eye'\"></i>\r\n              </button>\r\n            </div>\r\n            \r\n            <!-- Password strength requirements -->\r\n            <div class=\"password-requirements mt-2\">\r\n              <p class=\"text-sm mb-1\">Password must have:</p>\r\n              <ul class=\"text-xs\">\r\n                <li :class=\"{ 'requirement-met': passwordLength }\">At least 8 characters</li>\r\n                <li :class=\"{ 'requirement-met': hasUpperCase }\">At least 1 uppercase letter</li>\r\n                <li :class=\"{ 'requirement-met': hasLowerCase }\">At least 1 lowercase letter</li>\r\n                <li :class=\"{ 'requirement-met': hasNumber }\">At least 1 number</li>\r\n                <li :class=\"{ 'requirement-met': hasSpecialChar }\">At least 1 special character</li>\r\n              </ul>\r\n            </div>\r\n          </div>\r\n          <div class=\"form-group\">\r\n            <div class=\"password-input-container\">\r\n              <input \r\n                :type=\"showConfirmPassword ? 'text' : 'password'\" \r\n                v-model=\"confirmPassword\" \r\n                placeholder=\"Confirm New Password\" \r\n                class=\"form-control bg-white text-gray-800 password-input\"\r\n                required\r\n              >\r\n              <button \r\n                type=\"button\" \r\n                class=\"password-toggle-btn text-navy\" \r\n                @click=\"showConfirmPassword = !showConfirmPassword\"\r\n              >\r\n                <i :class=\"showConfirmPassword ? 'fas fa-eye-slash' : 'fas fa-eye'\"></i>\r\n              </button>\r\n            </div>\r\n            <p v-if=\"newPassword && confirmPassword && newPassword !== confirmPassword\" class=\"text-red-400 text-sm mt-1\">\r\n              Passwords do not match\r\n            </p>\r\n          </div>\r\n          <button \r\n            @click=\"resetPassword\" \r\n            class=\"btn-primary w-full\"\r\n            :disabled=\"isLoadingReset\"\r\n          >\r\n            <span v-if=\"isLoadingReset\" class=\"spinner\">\r\n              <i class=\"fas fa-spinner fa-spin\"></i>\r\n            </span>\r\n            <span v-else>Reset Password</span>\r\n          </button>\r\n        </div>\r\n\r\n        <p v-if=\"resetError\" class=\"error-message mt-4\">{{ resetError }}</p>\r\n        <p v-if=\"resetSuccess\" class=\"success-message mt-4\">{{ resetSuccess }}</p>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { ref, onMounted } from 'vue'\r\nimport { useStore } from 'vuex'\r\nimport { useRouter } from 'vue-router'\r\nimport axios from 'axios'\r\n\r\nexport default {\r\n  name: 'Login',\r\n  setup() {\r\n    const store = useStore()\r\n    const router = useRouter()\r\n\r\n    const loginType = ref('user')\r\n    const email = ref('')\r\n    const password = ref('')\r\n    const error = ref('')\r\n    const isLoading = ref(false)\r\n    const recaptchaToken = ref('')\r\n    const recaptchaSiteKey = '6LcsLNkqAAAAAH5OO5HjmocsPxA_y80LzVold7rW'\r\n\r\n    onMounted(() => {\r\n      // Load reCAPTCHA script\r\n      const script = document.createElement('script')\r\n      script.src = 'https://www.google.com/recaptcha/api.js'\r\n      script.async = true\r\n      script.defer = true\r\n      document.head.appendChild(script)\r\n\r\n      // Initialize reCAPTCHA\r\n      script.onload = () => {\r\n        window.grecaptcha.ready(() => {\r\n          window.grecaptcha.render('g-recaptcha', {\r\n            sitekey: recaptchaSiteKey,\r\n            callback: (token) => {\r\n              recaptchaToken.value = token\r\n            },\r\n            'expired-callback': () => {\r\n              recaptchaToken.value = ''\r\n            }\r\n          })\r\n        })\r\n      }\r\n    })\r\n\r\n    const handleLogin = async () => {\r\n      try {\r\n        if (!recaptchaToken.value) {\r\n          error.value = 'Please complete the reCAPTCHA verification'\r\n          return\r\n        }\r\n\r\n        error.value = ''\r\n        isLoading.value = true\r\n\r\n        const credentials = {\r\n          email: email.value,\r\n          password: password.value,\r\n          loginType: loginType.value,\r\n          recaptchaToken: recaptchaToken.value\r\n        }\r\n\r\n        console.log('Attempting login with:', { \r\n          email: credentials.email, \r\n          loginType: credentials.loginType,\r\n          timestamp: new Date().toISOString()\r\n        })\r\n\r\n        const response = await store.dispatch('login', credentials)\r\n        console.log('Login response received:', {\r\n          userRole: response.data.user?.role,\r\n          loginType: loginType.value,\r\n          timestamp: new Date().toISOString()\r\n        })\r\n        \r\n        const user = response.data.user\r\n        \r\n        // Check login type before proceeding\r\n        if(loginType.value === 'citHead'){\r\n          if(user.role === 'teacher' || user.role === 'ssp'){\r\n            console.log('Access denied: Non-CIT Head using CIT Head login')\r\n            error.value = 'Access denied. Please use the Teacher/Student login.'\r\n            await store.dispatch('logout')\r\n            return\r\n          }\r\n        }\r\n\r\n        if(loginType === 'user'){\r\n          if(user.role === 'citHead' || user.role === 'sspHead'){\r\n            console.log('Access denied: CIT Head using regular login')\r\n            error.value = 'Access denied. Please use the CIT Head login.'\r\n            await store.dispatch('logout')\r\n            return\r\n          }\r\n        }\r\n\r\n        // if (loginType.value === 'citHead' && user.role !== 'citHead') {\r\n        //   console.log('Access denied: Non-CIT Head using CIT Head login')\r\n        //   error.value = 'Access denied. Please use the Teacher/Student login.'\r\n        //   await store.dispatch('logout')\r\n        //   return\r\n        // }\r\n        \r\n        // if (loginType.value === 'user' && user.role === 'citHead') {\r\n        //   console.log('Access denied: CIT Head using regular login')\r\n        //   error.value = 'Access denied. Please use the CIT Head login.'\r\n        //   await store.dispatch('logout')\r\n        //   return\r\n        // }\r\n\r\n        router.push('/dashboard')\r\n      } catch (err) {\r\n        console.error('Login error:', {\r\n          error: err,\r\n          response: err.response?.data,\r\n          status: err.response?.status,\r\n          timestamp: new Date().toISOString()\r\n        })\r\n        \r\n        if (err.response?.status === 403) {\r\n          error.value = err.response.data.message || 'Access denied. Please check your login type.'\r\n        } else if (err.response?.status === 400) {\r\n          error.value = err.response.data.message || 'Invalid credentials. Please try again.'\r\n        } else {\r\n          error.value = 'Login failed. Please try again.'\r\n        }\r\n\r\n        // Reset reCAPTCHA on error\r\n        if (window.grecaptcha) {\r\n          window.grecaptcha.reset()\r\n        }\r\n        recaptchaToken.value = ''\r\n      } finally {\r\n        isLoading.value = false\r\n      }\r\n    }\r\n\r\n    const goToForgotPassword = () => {\r\n      showForgotPasswordModal.value = true\r\n    }\r\n\r\n    // Forgot password state\r\n    const showForgotPasswordModal = ref(false)\r\n    const forgotPasswordStep = ref(1)\r\n    const forgotEmail = ref('')\r\n    const verificationCode = ref('')\r\n    const newPassword = ref('')\r\n    const confirmPassword = ref('')\r\n    const resetError = ref('')\r\n    const resetSuccess = ref('')\r\n    const isLoadingReset = ref(false)\r\n    \r\n    // Send verification code\r\n    const sendVerificationCode = async () => {\r\n      if (!forgotEmail.value) {\r\n        resetError.value = 'Please enter your email address'\r\n        return\r\n      }\r\n      \r\n      try {\r\n        resetError.value = ''\r\n        resetSuccess.value = ''\r\n        isLoadingReset.value = true\r\n        \r\n        const response = await axios.post('http://localhost:8000/api/users/profile/password/request-code', {\r\n          email: forgotEmail.value\r\n        })\r\n        \r\n        resetSuccess.value = 'Verification code sent to your email'\r\n        forgotPasswordStep.value = 2\r\n      } catch (err) {\r\n        resetError.value = err.response?.data?.message || 'Failed to send verification code. Please try again.'\r\n      } finally {\r\n        isLoadingReset.value = false\r\n      }\r\n    }\r\n    \r\n    // Verify code\r\n    const verifyCode = async () => {\r\n      if (!verificationCode.value) {\r\n        resetError.value = 'Please enter verification code'\r\n        return\r\n      }\r\n      \r\n      try {\r\n        resetError.value = ''\r\n        resetSuccess.value = ''\r\n        isLoadingReset.value = true\r\n        \r\n        const response = await axios.post('http://localhost:8000/api/users/profile/password/verify-code', {\r\n          email: forgotEmail.value,\r\n          code: verificationCode.value\r\n        })\r\n        \r\n        resetSuccess.value = 'Code verified successfully'\r\n        forgotPasswordStep.value = 3\r\n      } catch (err) {\r\n        resetError.value = err.response?.data?.message || 'Invalid verification code. Please try again.'\r\n      } finally {\r\n        isLoadingReset.value = false\r\n      }\r\n    }\r\n    \r\n    // Reset password\r\n    const resetPassword = async () => {\r\n      if (!newPassword.value) {\r\n        resetError.value = 'Please enter new password'\r\n        return\r\n      }\r\n      \r\n      if (newPassword.value !== confirmPassword.value) {\r\n        resetError.value = 'Passwords do not match'\r\n        return\r\n      }\r\n      \r\n      if (newPassword.value.length < 8) {\r\n        resetError.value = 'Password must be at least 8 characters long'\r\n        return\r\n      }\r\n      \r\n      try {\r\n        resetError.value = ''\r\n        resetSuccess.value = ''\r\n        isLoadingReset.value = true\r\n        \r\n        const response = await axios.post('http://localhost:8000/api/users/profile/password/reset-with-code', {\r\n          email: forgotEmail.value,\r\n          code: verificationCode.value,\r\n          password: newPassword.value\r\n        })\r\n        \r\n        resetSuccess.value = 'Password reset successfully'\r\n        setTimeout(() => {\r\n          showForgotPasswordModal.value = false\r\n          forgotPasswordStep.value = 1\r\n          forgotEmail.value = ''\r\n          verificationCode.value = ''\r\n          newPassword.value = ''\r\n          confirmPassword.value = ''\r\n          resetError.value = ''\r\n          resetSuccess.value = ''\r\n        }, 2000)\r\n      } catch (err) {\r\n        resetError.value = err.response?.data?.message || 'Failed to reset password. Please try again.'\r\n      } finally {\r\n        isLoadingReset.value = false\r\n      }\r\n    }\r\n\r\n    return {\r\n      loginType,\r\n      email,\r\n      password,\r\n      error,\r\n      isLoading,\r\n      handleLogin,\r\n      recaptchaSiteKey,\r\n      recaptchaToken,\r\n      goToForgotPassword,\r\n      // Forgot password\r\n      showForgotPasswordModal,\r\n      forgotPasswordStep,\r\n      forgotEmail,\r\n      verificationCode,\r\n      newPassword,\r\n      confirmPassword,\r\n      resetError,\r\n      resetSuccess,\r\n      isLoadingReset,\r\n      sendVerificationCode,\r\n      verifyCode,\r\n      resetPassword\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n@import url('https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&family=Poppins:wght@400;500;600;700&display=swap');\r\n\r\n.login-container {\r\n  @apply min-h-screen w-screen flex items-stretch justify-end bg-gray-50 m-0 p-0 overflow-hidden fixed inset-0;\r\n}\r\n\r\n.login-card {\r\n  @apply w-screen h-full flex bg-white overflow-hidden m-0 p-0 relative;\r\n}\r\n\r\n.left-section {\r\n  @apply flex-1 p-8 flex flex-col items-center justify-center text-center bg-white m-0 relative transition-transform duration-500;\r\n}\r\n\r\n.content-wrapper {\r\n  @apply flex flex-col items-center justify-center gap-0 w-full text-center px-8;\r\n}\r\n\r\n.logo-container {\r\n  @apply relative w-[600px] h-[600px] mb-0 flex items-center justify-center;\r\n}\r\n\r\n.logo {\r\n  @apply absolute max-w-full max-h-full w-auto h-auto top-1/2 left-1/2 -translate-x-1/2 -translate-y-1/2 transition-opacity duration-700 opacity-0 object-contain;\r\n}\r\n\r\n.logo.active {\r\n  @apply opacity-100;\r\n}\r\n\r\n/* Logo transitions based on login type */\r\n.login-card[data-login-type=\"citHead\"] .logo-container .logo1 {\r\n  opacity: 1;\r\n}\r\n\r\n.login-card[data-login-type=\"citHead\"] .logo-container .logo2 {\r\n  opacity: 0;\r\n}\r\n\r\n.login-card[data-login-type=\"user\"] .logo-container .logo1 {\r\n  opacity: 0;\r\n}\r\n\r\n.login-card[data-login-type=\"user\"] .logo-container .logo2 {\r\n  opacity: 1;\r\n}\r\n\r\n.right-section {\r\n  @apply min-w-[500px] w-[600px] p-20 text-white flex flex-col justify-center m-0 relative transition-all duration-700;\r\n}\r\n\r\n/* Sliding animations */\r\n.login-card[data-login-type=\"citHead\"] .left-section {\r\n  transform: translateX(0);\r\n}\r\n\r\n.login-card[data-login-type=\"citHead\"] .right-section {\r\n  transform: translateX(0);\r\n  @apply bg-navy rounded-l-3xl;\r\n}\r\n\r\n.login-card[data-login-type=\"user\"] .left-section {\r\n  transform: translateX(600px);\r\n}\r\n\r\n.login-card[data-login-type=\"user\"] .right-section {\r\n  transform: translateX(calc(-100vw + 600px));\r\n  @apply bg-navy rounded-r-3xl;\r\n}\r\n\r\n.login-type-selector {\r\n  @apply flex gap-4 mb-8;\r\n}\r\n\r\n.type-btn {\r\n  @apply flex-1 py-3 px-4 border-2 border-white bg-transparent text-white rounded-lg cursor-pointer font-semibold transition-all duration-300;\r\n}\r\n\r\n.type-btn:hover:not(.active) {\r\n  @apply bg-white/10;\r\n}\r\n\r\n.type-btn.active[data-login-type=\"citHead\"],\r\n.type-btn.active[data-login-type=\"user\"] {\r\n  @apply bg-white text-navy;\r\n}\r\n\r\n.school-name {\r\n  @apply text-4xl font-bold text-navy m-0 text-center relative w-full leading-tight -mt-8;\r\n}\r\n\r\n.system-name {\r\n  @apply text-xl text-gray-800 m-0 relative w-full leading-relaxed mt-2;\r\n}\r\n\r\n.login-form {\r\n  @apply w-full;\r\n}\r\n\r\n.form-title {\r\n  @apply text-5xl font-semibold mb-8 text-white text-start -mt-16;\r\n}\r\n\r\n.form-group {\r\n  @apply mb-6;\r\n}\r\n\r\n.form-label {\r\n  @apply block mb-2 text-white text-base font-medium;\r\n}\r\n\r\n.form-control {\r\n  @apply w-full py-3 px-4 border border-white/20 rounded-lg bg-transparent text-white text-base transition-all duration-300;\r\n}\r\n\r\n.form-control::placeholder {\r\n  @apply text-white/70;\r\n}\r\n\r\n.form-control:focus {\r\n  @apply outline-none border-white ring-2 ring-white/10;\r\n}\r\n\r\n.btn-login {\r\n  @apply bg-white text-navy py-3 px-4 rounded-lg w-3/5 uppercase font-bold mt-8 border-none cursor-pointer transition-colors duration-200 block mx-auto;\r\n}\r\n\r\n.btn-login:hover {\r\n  @apply bg-gray-100;\r\n}\r\n\r\n.error-message {\r\n  @apply text-red-400 mt-4 text-center;\r\n}\r\n\r\n.spinner {\r\n  @apply inline-block mr-2;\r\n}\r\n\r\n.btn-login:disabled {\r\n  @apply opacity-70 cursor-not-allowed;\r\n}\r\n\r\n.form-control:disabled {\r\n  @apply bg-white/10 cursor-not-allowed;\r\n}\r\n\r\n.recaptcha-container {\r\n  @apply flex justify-center mt-8;\r\n}\r\n\r\n/* Responsive Design */\r\n@media (max-width: 768px) {\r\n  .login-card {\r\n    @apply flex-col max-w-[400px];\r\n  }\r\n\r\n  .right-section {\r\n    @apply w-full p-8;\r\n  }\r\n\r\n  .left-section {\r\n    @apply p-8;\r\n  }\r\n\r\n  .logo-container {\r\n    @apply w-[300px] h-[300px];\r\n  }\r\n\r\n  .school-name {\r\n    @apply text-2xl;\r\n  }\r\n\r\n  .system-name {\r\n    @apply text-lg;\r\n  }\r\n\r\n  .form-title {\r\n    @apply text-3xl mb-6 -mt-10;\r\n  }\r\n\r\n  .login-type-selector {\r\n    @apply mb-6;\r\n  }\r\n\r\n  .form-group {\r\n    @apply mb-5;\r\n  }\r\n\r\n  .btn-login {\r\n    @apply w-full mt-6;\r\n  }\r\n}\r\n\r\n/* Modal Styles */\r\n.modal-overlay {\r\n  @apply fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50;\r\n}\r\n\r\n.modal-container {\r\n  @apply bg-navy w-full max-w-md mx-auto rounded-lg shadow-xl overflow-hidden;\r\n}\r\n\r\n.modal-header {\r\n  @apply flex justify-between items-center p-4 bg-navy border-b border-white/20 text-white;\r\n}\r\n\r\n.close-btn {\r\n  @apply text-white text-2xl font-bold hover:text-gray-300 focus:outline-none;\r\n}\r\n\r\n.modal-body {\r\n  @apply p-6 text-white;\r\n}\r\n\r\n.btn-primary {\r\n  @apply bg-white text-navy py-3 px-4 rounded-lg font-bold border-none cursor-pointer transition-colors duration-200 text-center;\r\n}\r\n\r\n.btn-primary:hover {\r\n  @apply bg-gray-100;\r\n}\r\n\r\n.btn-primary:disabled {\r\n  @apply opacity-70 cursor-not-allowed;\r\n}\r\n\r\n.success-message {\r\n  @apply text-green-400 text-center;\r\n}\r\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}