{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.filter.js\";\nimport \"core-js/modules/es.iterator.for-each.js\";\nimport \"core-js/modules/es.iterator.map.js\";\nimport \"core-js/modules/es.set.difference.v2.js\";\nimport \"core-js/modules/es.set.intersection.v2.js\";\nimport \"core-js/modules/es.set.is-disjoint-from.v2.js\";\nimport \"core-js/modules/es.set.is-subset-of.v2.js\";\nimport \"core-js/modules/es.set.is-superset-of.v2.js\";\nimport \"core-js/modules/es.set.symmetric-difference.v2.js\";\nimport \"core-js/modules/es.set.union.v2.js\";\nimport { ref, computed, onMounted } from 'vue';\nimport { useStore } from 'vuex';\nimport axios from 'axios';\nexport default {\n  name: 'StudentAssessments',\n  setup() {\n    const store = useStore();\n    const isLoading = ref(true);\n    const assessments = ref([]);\n    const searchQuery = ref('');\n    const filterSubject = ref('');\n    const filterType = ref('');\n    const sortOption = ref('date-desc');\n\n    // Fetch assessments data\n    const fetchAssessments = async () => {\n      isLoading.value = true;\n      try {\n        const response = await axios.get('/api/users/student/assessments', {\n          headers: {\n            Authorization: `Bearer ${store.state.auth.token}`\n          }\n        });\n        assessments.value = response.data;\n\n        // Add fallback sample data if needed\n        if (assessments.value.length === 0) {\n          assessments.value = generateSampleAssessments();\n        }\n      } catch (error) {\n        console.error('Error fetching assessment data:', error);\n        // Fallback to sample data\n        assessments.value = generateSampleAssessments();\n      } finally {\n        isLoading.value = false;\n      }\n    };\n\n    // Generate sample data for testing\n    const generateSampleAssessments = () => {\n      const subjects = ['Mathematics', 'English', 'Science', 'History'];\n      const types = ['Quiz', 'Exam', 'Project', 'Assignment'];\n      return subjects.map(subject => {\n        const assessmentCount = Math.floor(Math.random() * 5) + 3; // 3-7 assessments per subject\n\n        const subjectAssessments = [];\n        for (let i = 0; i < assessmentCount; i++) {\n          const maxScore = [10, 20, 50, 100][Math.floor(Math.random() * 4)];\n          const score = Math.floor(Math.random() * (maxScore * 0.6)) + maxScore * 0.3; // Score between 30% and 90%\n\n          subjectAssessments.push({\n            _id: `sample-${subject}-${i}`,\n            title: `${subject} ${types[Math.floor(Math.random() * types.length)]} ${i + 1}`,\n            type: types[Math.floor(Math.random() * types.length)],\n            maxScore: maxScore,\n            score: score,\n            date: new Date(Date.now() - Math.random() * 180 * 24 * 60 * 60 * 1000).toISOString(),\n            teacherName: 'Sample Teacher'\n          });\n        }\n        return {\n          subject,\n          section: '1A',\n          teacher: 'Sample Teacher',\n          assessments: subjectAssessments\n        };\n      });\n    };\n\n    // Available filter options\n    const availableSubjects = computed(() => {\n      const subjects = new Set();\n      assessments.value.forEach(subject => {\n        subjects.add(subject.subject);\n      });\n      return [...subjects];\n    });\n    const availableTypes = computed(() => {\n      const types = new Set();\n      assessments.value.forEach(subject => {\n        subject.assessments.forEach(assessment => {\n          types.add(assessment.type);\n        });\n      });\n      return [...types];\n    });\n\n    // Filter and sort assessments\n    const filteredAssessments = computed(() => {\n      // Filter by subject\n      let filtered = [...assessments.value];\n      if (filterSubject.value) {\n        filtered = filtered.filter(subject => subject.subject === filterSubject.value);\n      }\n\n      // Filter assessments by search query and type\n      filtered = filtered.map(subject => {\n        const filteredAssessments = subject.assessments.filter(assessment => {\n          const matchesSearch = searchQuery.value === '' || assessment.title.toLowerCase().includes(searchQuery.value.toLowerCase()) || assessment.type.toLowerCase().includes(searchQuery.value.toLowerCase()) || subject.subject.toLowerCase().includes(searchQuery.value.toLowerCase());\n          const matchesType = filterType.value === '' || assessment.type === filterType.value;\n          return matchesSearch && matchesType;\n        });\n        return {\n          ...subject,\n          assessments: filteredAssessments\n        };\n      });\n\n      // Remove subjects with no matching assessments\n      filtered = filtered.filter(subject => subject.assessments.length > 0);\n      return filtered;\n    });\n\n    // Group assessments by subject\n    const groupedAssessments = computed(() => {\n      const sorted = [...filteredAssessments.value];\n\n      // Sort assessments within each subject\n      sorted.forEach(subject => {\n        subject.assessments.sort((a, b) => {\n          if (sortOption.value === 'date-desc') {\n            return new Date(b.date) - new Date(a.date);\n          } else if (sortOption.value === 'date-asc') {\n            return new Date(a.date) - new Date(b.date);\n          } else if (sortOption.value === 'score-desc') {\n            return b.score / b.maxScore - a.score / a.maxScore;\n          } else if (sortOption.value === 'score-asc') {\n            return a.score / a.maxScore - b.score / b.maxScore;\n          }\n          return 0;\n        });\n      });\n      return sorted.map(subject => ({\n        name: subject.subject,\n        section: subject.section,\n        teacher: subject.teacher,\n        assessments: subject.assessments\n      }));\n    });\n\n    // Calculate summary statistics\n    const allAssessments = computed(() => {\n      let all = [];\n      assessments.value.forEach(subject => {\n        subject.assessments.forEach(assessment => {\n          all.push(assessment);\n        });\n      });\n      return all;\n    });\n    const totalAssessments = computed(() => {\n      return allAssessments.value.length;\n    });\n    const averageScore = computed(() => {\n      if (allAssessments.value.length === 0) return 0;\n      let totalPercentage = 0;\n      allAssessments.value.forEach(assessment => {\n        totalPercentage += assessment.score / assessment.maxScore * 100;\n      });\n      return (totalPercentage / allAssessments.value.length).toFixed(1);\n    });\n    const highestScore = computed(() => {\n      if (allAssessments.value.length === 0) return 0;\n      let highest = 0;\n      allAssessments.value.forEach(assessment => {\n        const percentage = assessment.score / assessment.maxScore * 100;\n        if (percentage > highest) {\n          highest = percentage;\n        }\n      });\n      return highest.toFixed(1);\n    });\n    const lowestScore = computed(() => {\n      if (allAssessments.value.length === 0) return 0;\n      let lowest = 100;\n      allAssessments.value.forEach(assessment => {\n        const percentage = assessment.score / assessment.maxScore * 100;\n        if (percentage < lowest) {\n          lowest = percentage;\n        }\n      });\n      return lowest.toFixed(1);\n    });\n\n    // Helper methods\n    const formatDate = dateString => {\n      const date = new Date(dateString);\n      return date.toLocaleDateString('en-US', {\n        year: 'numeric',\n        month: 'short',\n        day: 'numeric'\n      });\n    };\n    const calculatePercentage = (score, maxScore) => {\n      return Math.round(score / maxScore * 100);\n    };\n    const getPerformanceClass = (score, maxScore) => {\n      const percentage = score / maxScore * 100;\n      if (percentage >= 90) return 'performance-excellent';\n      if (percentage >= 80) return 'performance-good';\n      if (percentage >= 70) return 'performance-average';\n      if (percentage >= 60) return 'performance-fair';\n      return 'performance-poor';\n    };\n    onMounted(() => {\n      fetchAssessments();\n    });\n    return {\n      isLoading,\n      searchQuery,\n      filterSubject,\n      filterType,\n      sortOption,\n      assessments,\n      availableSubjects,\n      availableTypes,\n      filteredAssessments,\n      groupedAssessments,\n      totalAssessments,\n      averageScore,\n      highestScore,\n      lowestScore,\n      formatDate,\n      calculatePercentage,\n      getPerformanceClass\n    };\n  }\n};","map":{"version":3,"names":["ref","computed","onMounted","useStore","axios","name","setup","store","isLoading","assessments","searchQuery","filterSubject","filterType","sortOption","fetchAssessments","value","response","get","headers","Authorization","state","auth","token","data","length","generateSampleAssessments","error","console","subjects","types","map","subject","assessmentCount","Math","floor","random","subjectAssessments","i","maxScore","score","push","_id","title","type","date","Date","now","toISOString","teacherName","section","teacher","availableSubjects","Set","forEach","add","availableTypes","assessment","filteredAssessments","filtered","filter","matchesSearch","toLowerCase","includes","matchesType","groupedAssessments","sorted","sort","a","b","allAssessments","all","totalAssessments","averageScore","totalPercentage","toFixed","highestScore","highest","percentage","lowestScore","lowest","formatDate","dateString","toLocaleDateString","year","month","day","calculatePercentage","round","getPerformanceClass"],"sources":["D:\\au_dev\\client\\src\\views\\StudentAssessments.vue"],"sourcesContent":["<template>\r\n  <div class=\"student-assessments\">\r\n    <div class=\"page-header\">\r\n      <h2>Assessment Records</h2>\r\n      <p class=\"subtitle\">View your assessment scores and performance</p>\r\n    </div>\r\n\r\n    <!-- Search and Filter Controls -->\r\n    <div class=\"controls\">\r\n      <div class=\"search-box\">\r\n        <i class=\"fas fa-search\"></i>\r\n        <input \r\n          type=\"text\" \r\n          v-model=\"searchQuery\" \r\n          placeholder=\"Search by subject, title, or type...\"\r\n          class=\"search-input\"\r\n        >\r\n      </div>\r\n      \r\n      <div class=\"filter-box\">\r\n        <select v-model=\"filterSubject\" class=\"filter-select\">\r\n          <option value=\"\">All Subjects</option>\r\n          <option v-for=\"subject in availableSubjects\" :key=\"subject\" :value=\"subject\">\r\n            {{ subject }}\r\n          </option>\r\n        </select>\r\n        \r\n        <select v-model=\"filterType\" class=\"filter-select\">\r\n          <option value=\"\">All Types</option>\r\n          <option v-for=\"type in availableTypes\" :key=\"type\" :value=\"type\">\r\n            {{ type }}\r\n          </option>\r\n        </select>\r\n        \r\n        <select v-model=\"sortOption\" class=\"filter-select\">\r\n          <option value=\"date-desc\">Newest First</option>\r\n          <option value=\"date-asc\">Oldest First</option>\r\n          <option value=\"score-desc\">Highest Score</option>\r\n          <option value=\"score-asc\">Lowest Score</option>\r\n        </select>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Assessment Cards by Subject -->\r\n    <div v-if=\"isLoading\" class=\"loading-container\">\r\n      <div class=\"spinner\"></div>\r\n      <p>Loading assessment records...</p>\r\n    </div>\r\n\r\n    <div v-else class=\"assessment-container\">\r\n      <div v-if=\"filteredAssessments.length === 0\" class=\"no-data\">\r\n        <i class=\"fas fa-clipboard\"></i>\r\n        <p v-if=\"searchQuery || filterSubject || filterType\">\r\n          No assessments match your filters. Try adjusting your search criteria.\r\n        </p>\r\n        <p v-else>\r\n          No assessment records available. Check back later!\r\n        </p>\r\n      </div>\r\n\r\n      <div v-else class=\"subject-groups\">\r\n        <div v-for=\"subject in groupedAssessments\" :key=\"subject.name\" class=\"subject-section\">\r\n          <div class=\"subject-header\">\r\n            <h3>{{ subject.name }}</h3>\r\n            <div class=\"subject-meta\">\r\n              <span class=\"section-badge\">{{ subject.section }}</span>\r\n              <span class=\"teacher-name\">Teacher: {{ subject.teacher }}</span>\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"assessment-grid\">\r\n            <div \r\n              v-for=\"assessment in subject.assessments\" \r\n              :key=\"assessment._id\" \r\n              class=\"assessment-card\"\r\n            >\r\n              <div class=\"assessment-header\">\r\n                <span class=\"assessment-type\">{{ assessment.type }}</span>\r\n                <span class=\"assessment-date\">{{ formatDate(assessment.date) }}</span>\r\n              </div>\r\n              <h4 class=\"assessment-title\">{{ assessment.title }}</h4>\r\n              <div class=\"score-container\">\r\n                <div class=\"score-display\">\r\n                  <span class=\"score-value\">{{ assessment.score }}</span>\r\n                  <span class=\"score-divider\">/</span>\r\n                  <span class=\"max-score\">{{ assessment.maxScore }}</span>\r\n                </div>\r\n                <div class=\"score-percentage\">\r\n                  {{ calculatePercentage(assessment.score, assessment.maxScore) }}%\r\n                </div>\r\n              </div>\r\n              \r\n              <div class=\"progress-bar\">\r\n                <div \r\n                  class=\"progress-fill\" \r\n                  :style=\"{ width: `${Math.min(100, (assessment.score / assessment.maxScore) * 100)}%` }\"\r\n                  :class=\"getPerformanceClass(assessment.score, assessment.maxScore)\"\r\n                ></div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Assessment Summary -->\r\n    <div class=\"summary-section\">\r\n      <div class=\"summary-card\">\r\n        <h3>Assessment Summary</h3>\r\n        <div class=\"summary-grid\">\r\n          <div class=\"summary-item\">\r\n            <div class=\"summary-label\">Total Assessments</div>\r\n            <div class=\"summary-value\">{{ totalAssessments }}</div>\r\n          </div>\r\n          <div class=\"summary-item\">\r\n            <div class=\"summary-label\">Average Score</div>\r\n            <div class=\"summary-value\">{{ averageScore }}%</div>\r\n          </div>\r\n          <div class=\"summary-item\">\r\n            <div class=\"summary-label\">Highest Score</div>\r\n            <div class=\"summary-value\">{{ highestScore }}%</div>\r\n          </div>\r\n          <div class=\"summary-item\">\r\n            <div class=\"summary-label\">Lowest Score</div>\r\n            <div class=\"summary-value\">{{ lowestScore }}%</div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { ref, computed, onMounted } from 'vue'\r\nimport { useStore } from 'vuex'\r\nimport axios from 'axios'\r\n\r\nexport default {\r\n  name: 'StudentAssessments',\r\n  setup() {\r\n    const store = useStore()\r\n    const isLoading = ref(true)\r\n    const assessments = ref([])\r\n    const searchQuery = ref('')\r\n    const filterSubject = ref('')\r\n    const filterType = ref('')\r\n    const sortOption = ref('date-desc')\r\n\r\n    // Fetch assessments data\r\n    const fetchAssessments = async () => {\r\n      isLoading.value = true\r\n      try {\r\n        const response = await axios.get('/api/users/student/assessments', {\r\n          headers: {\r\n            Authorization: `Bearer ${store.state.auth.token}`\r\n          }\r\n        })\r\n        assessments.value = response.data\r\n        \r\n        // Add fallback sample data if needed\r\n        if (assessments.value.length === 0) {\r\n          assessments.value = generateSampleAssessments()\r\n        }\r\n      } catch (error) {\r\n        console.error('Error fetching assessment data:', error)\r\n        // Fallback to sample data\r\n        assessments.value = generateSampleAssessments()\r\n      } finally {\r\n        isLoading.value = false\r\n      }\r\n    }\r\n\r\n    // Generate sample data for testing\r\n    const generateSampleAssessments = () => {\r\n      const subjects = ['Mathematics', 'English', 'Science', 'History']\r\n      const types = ['Quiz', 'Exam', 'Project', 'Assignment']\r\n      \r\n      return subjects.map(subject => {\r\n        const assessmentCount = Math.floor(Math.random() * 5) + 3 // 3-7 assessments per subject\r\n        \r\n        const subjectAssessments = []\r\n        for (let i = 0; i < assessmentCount; i++) {\r\n          const maxScore = [10, 20, 50, 100][Math.floor(Math.random() * 4)]\r\n          const score = Math.floor(Math.random() * (maxScore * 0.6)) + (maxScore * 0.3) // Score between 30% and 90%\r\n          \r\n          subjectAssessments.push({\r\n            _id: `sample-${subject}-${i}`,\r\n            title: `${subject} ${types[Math.floor(Math.random() * types.length)]} ${i + 1}`,\r\n            type: types[Math.floor(Math.random() * types.length)],\r\n            maxScore: maxScore,\r\n            score: score,\r\n            date: new Date(Date.now() - (Math.random() * 180 * 24 * 60 * 60 * 1000)).toISOString(),\r\n            teacherName: 'Sample Teacher'\r\n          })\r\n        }\r\n        \r\n        return {\r\n          subject,\r\n          section: '1A',\r\n          teacher: 'Sample Teacher',\r\n          assessments: subjectAssessments\r\n        }\r\n      })\r\n    }\r\n\r\n    // Available filter options\r\n    const availableSubjects = computed(() => {\r\n      const subjects = new Set()\r\n      assessments.value.forEach(subject => {\r\n        subjects.add(subject.subject)\r\n      })\r\n      return [...subjects]\r\n    })\r\n\r\n    const availableTypes = computed(() => {\r\n      const types = new Set()\r\n      assessments.value.forEach(subject => {\r\n        subject.assessments.forEach(assessment => {\r\n          types.add(assessment.type)\r\n        })\r\n      })\r\n      return [...types]\r\n    })\r\n\r\n    // Filter and sort assessments\r\n    const filteredAssessments = computed(() => {\r\n      // Filter by subject\r\n      let filtered = [...assessments.value]\r\n      \r\n      if (filterSubject.value) {\r\n        filtered = filtered.filter(subject => subject.subject === filterSubject.value)\r\n      }\r\n\r\n      // Filter assessments by search query and type\r\n      filtered = filtered.map(subject => {\r\n        const filteredAssessments = subject.assessments.filter(assessment => {\r\n          const matchesSearch = searchQuery.value === '' ||\r\n            assessment.title.toLowerCase().includes(searchQuery.value.toLowerCase()) ||\r\n            assessment.type.toLowerCase().includes(searchQuery.value.toLowerCase()) ||\r\n            subject.subject.toLowerCase().includes(searchQuery.value.toLowerCase())\r\n          \r\n          const matchesType = filterType.value === '' || assessment.type === filterType.value\r\n          \r\n          return matchesSearch && matchesType\r\n        })\r\n\r\n        return {\r\n          ...subject,\r\n          assessments: filteredAssessments\r\n        }\r\n      })\r\n\r\n      // Remove subjects with no matching assessments\r\n      filtered = filtered.filter(subject => subject.assessments.length > 0)\r\n\r\n      return filtered\r\n    })\r\n\r\n    // Group assessments by subject\r\n    const groupedAssessments = computed(() => {\r\n      const sorted = [...filteredAssessments.value]\r\n      \r\n      // Sort assessments within each subject\r\n      sorted.forEach(subject => {\r\n        subject.assessments.sort((a, b) => {\r\n          if (sortOption.value === 'date-desc') {\r\n            return new Date(b.date) - new Date(a.date)\r\n          } else if (sortOption.value === 'date-asc') {\r\n            return new Date(a.date) - new Date(b.date)\r\n          } else if (sortOption.value === 'score-desc') {\r\n            return (b.score / b.maxScore) - (a.score / a.maxScore)\r\n          } else if (sortOption.value === 'score-asc') {\r\n            return (a.score / a.maxScore) - (b.score / b.maxScore)\r\n          }\r\n          return 0\r\n        })\r\n      })\r\n      \r\n      return sorted.map(subject => ({\r\n        name: subject.subject,\r\n        section: subject.section,\r\n        teacher: subject.teacher,\r\n        assessments: subject.assessments\r\n      }))\r\n    })\r\n\r\n    // Calculate summary statistics\r\n    const allAssessments = computed(() => {\r\n      let all = []\r\n      assessments.value.forEach(subject => {\r\n        subject.assessments.forEach(assessment => {\r\n          all.push(assessment)\r\n        })\r\n      })\r\n      return all\r\n    })\r\n\r\n    const totalAssessments = computed(() => {\r\n      return allAssessments.value.length\r\n    })\r\n\r\n    const averageScore = computed(() => {\r\n      if (allAssessments.value.length === 0) return 0\r\n      \r\n      let totalPercentage = 0\r\n      allAssessments.value.forEach(assessment => {\r\n        totalPercentage += (assessment.score / assessment.maxScore) * 100\r\n      })\r\n      \r\n      return (totalPercentage / allAssessments.value.length).toFixed(1)\r\n    })\r\n\r\n    const highestScore = computed(() => {\r\n      if (allAssessments.value.length === 0) return 0\r\n      \r\n      let highest = 0\r\n      allAssessments.value.forEach(assessment => {\r\n        const percentage = (assessment.score / assessment.maxScore) * 100\r\n        if (percentage > highest) {\r\n          highest = percentage\r\n        }\r\n      })\r\n      \r\n      return highest.toFixed(1)\r\n    })\r\n\r\n    const lowestScore = computed(() => {\r\n      if (allAssessments.value.length === 0) return 0\r\n      \r\n      let lowest = 100\r\n      allAssessments.value.forEach(assessment => {\r\n        const percentage = (assessment.score / assessment.maxScore) * 100\r\n        if (percentage < lowest) {\r\n          lowest = percentage\r\n        }\r\n      })\r\n      \r\n      return lowest.toFixed(1)\r\n    })\r\n\r\n    // Helper methods\r\n    const formatDate = (dateString) => {\r\n      const date = new Date(dateString)\r\n      return date.toLocaleDateString('en-US', {\r\n        year: 'numeric',\r\n        month: 'short',\r\n        day: 'numeric'\r\n      })\r\n    }\r\n\r\n    const calculatePercentage = (score, maxScore) => {\r\n      return Math.round((score / maxScore) * 100)\r\n    }\r\n\r\n    const getPerformanceClass = (score, maxScore) => {\r\n      const percentage = (score / maxScore) * 100\r\n      if (percentage >= 90) return 'performance-excellent'\r\n      if (percentage >= 80) return 'performance-good'\r\n      if (percentage >= 70) return 'performance-average'\r\n      if (percentage >= 60) return 'performance-fair'\r\n      return 'performance-poor'\r\n    }\r\n\r\n    onMounted(() => {\r\n      fetchAssessments()\r\n    })\r\n\r\n    return {\r\n      isLoading,\r\n      searchQuery,\r\n      filterSubject,\r\n      filterType,\r\n      sortOption,\r\n      assessments,\r\n      availableSubjects,\r\n      availableTypes,\r\n      filteredAssessments,\r\n      groupedAssessments,\r\n      totalAssessments,\r\n      averageScore,\r\n      highestScore,\r\n      lowestScore,\r\n      formatDate,\r\n      calculatePercentage,\r\n      getPerformanceClass\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.student-assessments {\r\n  padding: 1.5rem;\r\n}\r\n\r\n.page-header {\r\n  margin-bottom: 2rem;\r\n}\r\n\r\n.page-header h2 {\r\n  font-size: 1.8rem;\r\n  color: #2d3748;\r\n  margin-bottom: 0.5rem;\r\n}\r\n\r\n.subtitle {\r\n  color: #718096;\r\n  font-size: 1.1rem;\r\n}\r\n\r\n.controls {\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  gap: 1rem;\r\n  margin-bottom: 2rem;\r\n}\r\n\r\n.search-box {\r\n  flex: 1;\r\n  min-width: 300px;\r\n  position: relative;\r\n}\r\n\r\n.search-input {\r\n  width: 100%;\r\n  padding: 0.75rem 1rem 0.75rem 2.5rem;\r\n  border-radius: 0.5rem;\r\n  border: 1px solid #e2e8f0;\r\n  background: white;\r\n  font-size: 1rem;\r\n  transition: all 0.3s ease;\r\n}\r\n\r\n.search-input:focus {\r\n  border-color: #4299e1;\r\n  box-shadow: 0 0 0 3px rgba(66, 153, 225, 0.15);\r\n  outline: none;\r\n}\r\n\r\n.search-box i {\r\n  position: absolute;\r\n  left: 1rem;\r\n  top: 50%;\r\n  transform: translateY(-50%);\r\n  color: #a0aec0;\r\n}\r\n\r\n.filter-box {\r\n  display: flex;\r\n  gap: 0.75rem;\r\n  flex-wrap: wrap;\r\n}\r\n\r\n.filter-select {\r\n  padding: 0.75rem 1rem;\r\n  border-radius: 0.5rem;\r\n  border: 1px solid #e2e8f0;\r\n  background: white;\r\n  font-size: 0.875rem;\r\n  color: #4a5568;\r\n  min-width: 150px;\r\n  transition: all 0.3s ease;\r\n}\r\n\r\n.filter-select:focus {\r\n  border-color: #4299e1;\r\n  box-shadow: 0 0 0 3px rgba(66, 153, 225, 0.15);\r\n  outline: none;\r\n}\r\n\r\n.loading-container {\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  padding: 5rem;\r\n  color: #a0aec0;\r\n}\r\n\r\n.spinner {\r\n  width: 40px;\r\n  height: 40px;\r\n  border: 3px solid #e2e8f0;\r\n  border-top-color: #4299e1;\r\n  border-radius: 50%;\r\n  animation: spin 1s linear infinite;\r\n  margin-bottom: 1rem;\r\n}\r\n\r\n@keyframes spin {\r\n  to { transform: rotate(360deg); }\r\n}\r\n\r\n.no-data {\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  padding: 5rem;\r\n  color: #a0aec0;\r\n  text-align: center;\r\n}\r\n\r\n.no-data i {\r\n  font-size: 3rem;\r\n  margin-bottom: 1rem;\r\n}\r\n\r\n.subject-groups {\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 2.5rem;\r\n}\r\n\r\n.subject-section {\r\n  background: white;\r\n  border-radius: 1rem;\r\n  overflow: hidden;\r\n  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.05);\r\n}\r\n\r\n.subject-header {\r\n  padding: 1.5rem;\r\n  background: linear-gradient(to right, #203464, #4a69bd);\r\n  color: white;\r\n  position: relative;\r\n}\r\n\r\n.subject-header h3 {\r\n  font-size: 1.25rem;\r\n  margin: 0;\r\n  margin-bottom: 0.5rem;\r\n}\r\n\r\n.subject-meta {\r\n  display: flex;\r\n  gap: 1rem;\r\n  align-items: center;\r\n  font-size: 0.875rem;\r\n  color: rgba(255, 255, 255, 0.8);\r\n}\r\n\r\n.section-badge {\r\n  background: rgba(255, 255, 255, 0.2);\r\n  padding: 0.25rem 0.75rem;\r\n  border-radius: 1rem;\r\n  font-size: 0.75rem;\r\n}\r\n\r\n.assessment-grid {\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));\r\n  gap: 1.5rem;\r\n  padding: 1.5rem;\r\n}\r\n\r\n.assessment-card {\r\n  background: #f8fafc;\r\n  border-radius: 0.75rem;\r\n  padding: 1.25rem;\r\n  transition: transform 0.3s ease, box-shadow 0.3s ease;\r\n  border: 1px solid #edf2f7;\r\n}\r\n\r\n.assessment-card:hover {\r\n  transform: translateY(-5px);\r\n  box-shadow: 0 10px 15px rgba(0, 0, 0, 0.05);\r\n}\r\n\r\n.assessment-header {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  margin-bottom: 0.75rem;\r\n  align-items: center;\r\n}\r\n\r\n.assessment-type {\r\n  display: inline-block;\r\n  padding: 0.25rem 0.75rem;\r\n  border-radius: 1rem;\r\n  background: #e6f6ff;\r\n  color: #0377bf;\r\n  font-size: 0.75rem;\r\n  font-weight: 500;\r\n}\r\n\r\n.assessment-date {\r\n  font-size: 0.75rem;\r\n  color: #718096;\r\n}\r\n\r\n.assessment-title {\r\n  font-size: 1rem;\r\n  color: #2d3748;\r\n  margin: 0 0 1rem 0;\r\n  line-height: 1.4;\r\n  height: 2.8em;\r\n  overflow: hidden;\r\n  display: -webkit-box;\r\n  -webkit-line-clamp: 2;\r\n  -webkit-box-orient: vertical;\r\n}\r\n\r\n.score-container {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  margin-bottom: 0.5rem;\r\n}\r\n\r\n.score-display {\r\n  display: flex;\r\n  align-items: baseline;\r\n}\r\n\r\n.score-value {\r\n  font-size: 1.5rem;\r\n  font-weight: 600;\r\n  color: #2d3748;\r\n}\r\n\r\n.score-divider {\r\n  font-size: 1.25rem;\r\n  color: #a0aec0;\r\n  margin: 0 0.25rem;\r\n}\r\n\r\n.max-score {\r\n  font-size: 1.25rem;\r\n  color: #718096;\r\n}\r\n\r\n.score-percentage {\r\n  font-size: 1.25rem;\r\n  font-weight: 500;\r\n  color: #4a5568;\r\n}\r\n\r\n.progress-bar {\r\n  height: 8px;\r\n  background: #edf2f7;\r\n  border-radius: 4px;\r\n  overflow: hidden;\r\n}\r\n\r\n.progress-fill {\r\n  height: 100%;\r\n  border-radius: 4px;\r\n  transition: width 0.5s ease;\r\n}\r\n\r\n.performance-excellent {\r\n  background: #48bb78;\r\n}\r\n\r\n.performance-good {\r\n  background: #68d391;\r\n}\r\n\r\n.performance-average {\r\n  background: #f6e05e;\r\n}\r\n\r\n.performance-fair {\r\n  background: #f6ad55;\r\n}\r\n\r\n.performance-poor {\r\n  background: #f56565;\r\n}\r\n\r\n.summary-section {\r\n  margin-top: 3rem;\r\n}\r\n\r\n.summary-card {\r\n  background: white;\r\n  border-radius: 1rem;\r\n  padding: 1.5rem;\r\n  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.05);\r\n}\r\n\r\n.summary-card h3 {\r\n  font-size: 1.25rem;\r\n  color: #2d3748;\r\n  margin: 0 0 1.5rem 0;\r\n}\r\n\r\n.summary-grid {\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));\r\n  gap: 1.5rem;\r\n}\r\n\r\n.summary-item {\r\n  text-align: center;\r\n  padding: 1rem;\r\n  background: #f8fafc;\r\n  border-radius: 0.75rem;\r\n}\r\n\r\n.summary-label {\r\n  font-size: 0.875rem;\r\n  color: #718096;\r\n  margin-bottom: 0.5rem;\r\n}\r\n\r\n.summary-value {\r\n  font-size: 1.5rem;\r\n  font-weight: 600;\r\n  color: #2d3748;\r\n}\r\n\r\n@media (max-width: 768px) {\r\n  .controls {\r\n    flex-direction: column;\r\n    gap: 1rem;\r\n  }\r\n  \r\n  .filter-box {\r\n    width: 100%;\r\n  }\r\n  \r\n  .filter-select {\r\n    flex: 1;\r\n  }\r\n  \r\n  .assessment-grid {\r\n    grid-template-columns: 1fr;\r\n  }\r\n}\r\n</style> "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}