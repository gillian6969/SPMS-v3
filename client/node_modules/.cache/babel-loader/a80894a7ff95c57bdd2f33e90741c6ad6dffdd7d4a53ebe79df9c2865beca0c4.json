{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.filter.js\";\nimport \"core-js/modules/es.iterator.for-each.js\";\nimport \"core-js/modules/es.iterator.reduce.js\";\nimport { ref, computed, onMounted, onUnmounted, watch, nextTick } from 'vue';\nimport { useStore } from 'vuex';\nimport axios from 'axios';\nimport Chart from 'chart.js/auto';\nimport { Dropdown } from 'bootstrap';\nimport { formatDate } from '../utils';\nimport StudentAssessmentChart from '../components/StudentAssessmentChart.vue';\n\n// Create axios instance with correct base URL\nconst api = axios.create({\n  baseURL: 'http://localhost:8081/api',\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\nexport default {\n  name: 'StudentManagement',\n  components: {\n    StudentAssessmentChart\n  },\n  setup() {\n    const store = useStore();\n    const students = ref([]);\n    const searchQuery = ref('');\n    const selectedStudent = ref(null);\n    const performanceChart = ref(null);\n    const sortField = ref('');\n    const sortOrder = ref('asc');\n    const showDeleteModal = ref(false);\n    const studentToDelete = ref(null);\n    const isEditing = ref(false);\n    const editingStudent = ref(null);\n    const showSearch = ref(false);\n    const assessments = ref([]);\n    const selectedYear = ref('');\n    const selectedSection = ref('');\n    const selectedFile = ref(null);\n    const uploadYear = ref('');\n    const isUploading = ref(false);\n    const subjectChart = ref(null);\n    const attendanceChart = ref(null);\n    const historyStartDate = ref('');\n    const historyEndDate = ref('');\n    const showStartDatePicker = ref(false);\n    const showEndDatePicker = ref(false);\n    const showAddStudentModal = ref(false);\n    const showAddSingleStudentModal = ref(false);\n    const availableYears = ['1st', '2nd', '3rd', '4th'];\n    const availableSections = ['South 1', 'South 2', 'South 3'];\n    const newStudent = ref({\n      studentId: '',\n      firstName: '',\n      middleName: '',\n      lastName: '',\n      email: '',\n      contactNumber: '',\n      year: '',\n      section: ''\n    });\n    const isAddingStudent = ref(false);\n\n    // Add pagination state\n    const currentPage = ref(1);\n    const itemsPerPage = 25;\n\n    // Compute total pages\n    const totalPages = computed(() => Math.ceil(sortedStudents.value.length / itemsPerPage));\n\n    // Get paginated students\n    const paginatedStudents = computed(() => {\n      const start = (currentPage.value - 1) * itemsPerPage;\n      const end = start + itemsPerPage;\n      return sortedStudents.value.slice(start, end);\n    });\n\n    // Compute pagination info\n    const paginationInfo = computed(() => {\n      const start = (currentPage.value - 1) * itemsPerPage + 1;\n      const end = Math.min(start + itemsPerPage - 1, sortedStudents.value.length);\n      return {\n        start,\n        end\n      };\n    });\n\n    // Pagination methods\n    const nextPage = () => {\n      if (currentPage.value < totalPages.value) {\n        currentPage.value++;\n      }\n    };\n    const previousPage = () => {\n      if (currentPage.value > 1) {\n        currentPage.value--;\n      }\n    };\n\n    // Reset pagination when filters change\n    watch([searchQuery, selectedYear, selectedSection], () => {\n      currentPage.value = 1;\n    });\n\n    // Initialize data on component mount\n    onMounted(async () => {\n      if (store.getters.isLoggedIn) {\n        await fetchStudents();\n      }\n\n      // Initialize dropdowns after a short delay to ensure DOM is ready\n      nextTick(() => {\n        const dropdownElements = document.querySelectorAll('[data-bs-toggle=\"dropdown\"]');\n        const dropdownInstances = [];\n        dropdownElements.forEach(element => {\n          if (element) {\n            dropdownInstances.push(new Dropdown(element));\n          }\n        });\n\n        // Cleanup dropdowns on unmount\n        onUnmounted(() => {\n          dropdownInstances.forEach(dropdown => {\n            if (dropdown && typeof dropdown.dispose === 'function') {\n              dropdown.dispose();\n            }\n          });\n        });\n      });\n    });\n\n    // Watch for auth state changes\n    watch(() => store.state.auth.token, newToken => {\n      if (newToken) {\n        fetchStudents();\n      }\n    });\n\n    // File upload handlers\n    const handleFileChange = event => {\n      const file = event.target.files[0];\n      if (file && file.type !== 'text/csv') {\n        alert('Please select a CSV file');\n        event.target.value = '';\n        selectedFile.value = null;\n        return;\n      }\n      selectedFile.value = file;\n      console.log('File selected:', file?.name);\n    };\n    const handleFileUpload = async () => {\n      if (!selectedFile.value || !uploadYear.value) {\n        alert('Please select both a year and a CSV file');\n        return;\n      }\n      isUploading.value = true;\n      const formData = new FormData();\n      formData.append('file', selectedFile.value);\n      formData.append('year', uploadYear.value);\n      try {\n        console.log('Starting upload...', {\n          year: uploadYear.value,\n          fileName: selectedFile.value.name\n        });\n        const token = store.state.auth.token;\n        if (!token) {\n          throw new Error('No authentication token found');\n        }\n\n        // Log the form data to verify what's being sent\n        console.log('Form data contents:', {\n          file: selectedFile.value,\n          year: uploadYear.value\n        });\n        const response = await api.post('/students/upload', formData, {\n          headers: {\n            'Authorization': `Bearer ${token}`,\n            'Content-Type': 'multipart/form-data'\n          }\n        });\n        console.log('Upload successful:', response.data);\n        if (response.data.errors && response.data.errors.length > 0) {\n          const errorMessage = response.data.errors.join('\\n');\n          alert(`Upload completed with some errors:\\n${errorMessage}`);\n        } else {\n          const counts = response.data.sectionCounts;\n          alert(`File uploaded successfully!\\n\\nStudent distribution:\\nSouth 1: ${counts['South 1']} students\\nSouth 2: ${counts['South 2']} students\\nSouth 3: ${counts['South 3']} students`);\n        }\n\n        // Reset form\n        selectedFile.value = null;\n        uploadYear.value = '';\n\n        // Refresh student list and close modal\n        await fetchStudents();\n\n        // Debug: Check if emails are included in the fetched students after upload\n        console.log('Students after upload:', students.value);\n        if (students.value.length > 0) {\n          console.log('First student after upload:', students.value[0]);\n          console.log('Email field exists after upload:', 'email' in students.value[0]);\n          console.log('Email value after upload:', students.value[0].email);\n        }\n        showAddStudentModal.value = false;\n      } catch (error) {\n        console.error('Upload failed:', error);\n        alert('Error uploading file: ' + (error.response?.data?.message || error.message));\n      } finally {\n        isUploading.value = false;\n      }\n    };\n\n    // Filter students\n    const filteredStudents = computed(() => {\n      return students.value.filter(student => {\n        const searchLower = searchQuery.value.toLowerCase();\n        const matchesSearch = student.studentId.toLowerCase().includes(searchLower) || student.firstName.toLowerCase().includes(searchLower) || student.lastName.toLowerCase().includes(searchLower);\n\n        // Apply year and section filters\n        const matchesYear = !selectedYear.value || student.year === selectedYear.value;\n        const matchesSection = !selectedSection.value || student.section === selectedSection.value;\n        return matchesSearch && matchesYear && matchesSection;\n      });\n    });\n\n    // Student actions\n    const closeStudentModal = () => {\n      if (performanceChart.value) {\n        const existingChart = Chart.getChart(performanceChart.value);\n        if (existingChart) {\n          existingChart.destroy();\n        }\n      }\n      if (attendanceChart.value && attendanceChart.value._chart) {\n        attendanceChart.value._chart.destroy();\n        attendanceChart.value._chart = null;\n      }\n      selectedStudent.value = null;\n    };\n    const confirmDelete = student => {\n      studentToDelete.value = student;\n      showDeleteModal.value = true;\n    };\n    const deleteStudent = async student => {\n      try {\n        const token = store.state.auth.token;\n\n        // Delete the student from students collection using MongoDB _id\n        await api.delete('/students/' + student._id, {\n          headers: {\n            'Authorization': `Bearer ${token}`\n          }\n        });\n\n        // Update local state\n        students.value = students.value.filter(s => s._id !== student._id);\n        selectedStudent.value = null;\n        showDeleteModal.value = false;\n        studentToDelete.value = null;\n        alert('Student deleted successfully');\n      } catch (error) {\n        console.error('Failed to delete student:', error);\n        alert('Failed to delete student. Please try again.');\n      }\n    };\n    const startEditing = student => {\n      editingStudent.value = {\n        ...student\n      };\n      isEditing.value = true;\n    };\n    const cancelEditing = () => {\n      editingStudent.value = null;\n      isEditing.value = false;\n    };\n    const saveStudentChanges = async () => {\n      try {\n        const token = store.state.auth.token;\n\n        // Update student information\n        const studentResponse = await api.put('/students/' + editingStudent.value._id, {\n          studentId: editingStudent.value.studentId,\n          firstName: editingStudent.value.firstName,\n          lastName: editingStudent.value.lastName,\n          email: editingStudent.value.email,\n          year: editingStudent.value.year,\n          section: editingStudent.value.section\n        }, {\n          headers: {\n            'Authorization': `Bearer ${token}`\n          }\n        });\n        if (studentResponse.data) {\n          // Update local state\n          const index = students.value.findIndex(s => s._id === editingStudent.value._id);\n          if (index !== -1) {\n            students.value[index] = {\n              ...editingStudent.value\n            };\n          }\n          selectedStudent.value = null;\n          editingStudent.value = null;\n          isEditing.value = false;\n          alert('Student information updated successfully');\n        } else {\n          throw new Error('Failed to update student information');\n        }\n      } catch (error) {\n        console.error('Failed to update student:', error);\n        alert('Failed to update student information. Please try again.');\n      }\n    };\n    const sortBy = field => {\n      if (sortField.value === field) {\n        sortOrder.value = sortOrder.value === 'asc' ? 'desc' : 'asc';\n      } else {\n        sortField.value = field;\n        sortOrder.value = 'asc';\n      }\n    };\n    const getSortIcon = field => {\n      if (sortField.value !== field) return 'fas fa-sort';\n      return sortOrder.value === 'asc' ? 'fas fa-sort-up' : 'fas fa-sort-down';\n    };\n    const sortedStudents = computed(() => {\n      let students = filteredStudents.value;\n      if (sortField.value) {\n        students = [...students].sort((a, b) => {\n          let aVal = a[sortField.value];\n          let bVal = b[sortField.value];\n\n          // Handle case-insensitive string comparison\n          if (typeof aVal === 'string') aVal = aVal.toLowerCase();\n          if (typeof bVal === 'string') bVal = bVal.toLowerCase();\n          if (aVal < bVal) return sortOrder.value === 'asc' ? -1 : 1;\n          if (aVal > bVal) return sortOrder.value === 'asc' ? 1 : -1;\n          return 0;\n        });\n      }\n      return students;\n    });\n    const toggleSearch = () => {\n      showSearch.value = !showSearch.value;\n      if (!showSearch.value) {\n        searchQuery.value = '';\n      }\n    };\n    const handleSearch = () => {\n      // Implement any additional search logic here if needed\n      console.log('Searching for:', searchQuery.value);\n    };\n    const clearSearch = () => {\n      searchQuery.value = '';\n      handleSearch();\n    };\n\n    // Add getAcademicYearRange function\n    const getAcademicYearRange = year => {\n      const currentYear = new Date().getFullYear();\n      let yearNumber = 0;\n      switch (year) {\n        case '1st':\n          yearNumber = 1;\n          break;\n        case '2nd':\n          yearNumber = 2;\n          break;\n        case '3rd':\n          yearNumber = 3;\n          break;\n        case '4th':\n          yearNumber = 4;\n          break;\n        default:\n          return 'N/A';\n      }\n      const startYear = currentYear - yearNumber + 1;\n      return `${startYear} - ${startYear + 1}`;\n    };\n\n    // Add hasActiveFilters computed property\n    const hasActiveFilters = computed(() => {\n      return selectedYear.value || selectedSection.value;\n    });\n\n    // Add viewStudent function\n    const viewStudent = async student => {\n      selectedStudent.value = student;\n      try {\n        // Fetch student's attendance\n        const response = await api.get(`/attendance/${student._id}/history`, {\n          params: {\n            all: true,\n            subject: '',\n            startDate: '',\n            endDate: ''\n          },\n          headers: {\n            'Authorization': `Bearer ${store.state.auth.token}`\n          }\n        });\n\n        // Process attendance data for chart\n        if (response.data && response.data.records && response.data.records.length > 0) {\n          attendanceHistory.value = response.data.records || [];\n\n          // Count occurrences of each status\n          attendanceCounts.value = {\n            present: 0,\n            late: 0,\n            absent: 0\n          };\n          attendanceHistory.value.forEach(record => {\n            if (record.status in attendanceCounts.value) {\n              attendanceCounts.value[record.status]++;\n            }\n          });\n          selectedStudent.value = {\n            ...selectedStudent.value,\n            attendanceHistory: response.data\n          };\n        } else {\n          // Generate demo data if no real data is available\n          generateDemoAttendanceData();\n        }\n      } catch (error) {\n        console.error('Failed to fetch attendance data:', error);\n        // Generate demo data on error\n        generateDemoAttendanceData();\n      }\n\n      // Initialize attendance chart after DOM update\n      nextTick(() => {\n        initAttendanceChart();\n      });\n    };\n\n    // Add this new function to initialize the attendance chart\n    const initAttendanceChart = () => {\n      const ctx = attendanceChart.value;\n      if (!ctx) return;\n\n      // Destroy previous chart if it exists\n      if (ctx._chart) {\n        ctx._chart.destroy();\n      }\n\n      // Create attendance chart\n      ctx._chart = new Chart(ctx, {\n        type: 'doughnut',\n        data: {\n          labels: ['Present', 'Late', 'Absent'],\n          datasets: [{\n            data: [attendanceCounts.value.present || 0, attendanceCounts.value.late || 0, attendanceCounts.value.absent || 0],\n            backgroundColor: ['#10b981', '#f59e0b', '#ef4444'],\n            borderWidth: 0,\n            hoverOffset: 4\n          }]\n        },\n        options: {\n          responsive: true,\n          maintainAspectRatio: false,\n          cutout: '70%',\n          plugins: {\n            legend: {\n              position: 'bottom',\n              labels: {\n                usePointStyle: true,\n                padding: 15,\n                font: {\n                  size: 12\n                }\n              }\n            },\n            tooltip: {\n              callbacks: {\n                label: function (context) {\n                  const label = context.label || '';\n                  const value = context.raw || 0;\n                  const total = context.chart.data.datasets[0].data.reduce((a, b) => a + b, 0);\n                  const percentage = total > 0 ? Math.round(value / total * 100) : 0;\n                  return `${label}: ${value} (${percentage}%)`;\n                }\n              }\n            }\n          }\n        }\n      });\n    };\n\n    // Add clearFilters function\n    const clearFilters = () => {\n      selectedYear.value = '';\n      selectedSection.value = '';\n      searchQuery.value = '';\n    };\n    const applyFilters = () => {\n      fetchStudents();\n    };\n\n    // Function to handle adding a single student\n    const handleAddSingleStudent = async () => {\n      try {\n        isAddingStudent.value = true;\n\n        // Validate required fields\n        const requiredFields = ['studentId', 'firstName', 'middleName', 'lastName', 'email', 'contactNumber', 'year', 'section'];\n        for (const field of requiredFields) {\n          if (!newStudent.value[field]) {\n            throw new Error(`${field.charAt(0).toUpperCase() + field.slice(1)} is required`);\n          }\n        }\n\n        // Validate email format\n        const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n        if (!emailRegex.test(newStudent.value.email)) {\n          throw new Error('Please enter a valid email address');\n        }\n        const token = store.state.auth.token;\n        if (!token) {\n          throw new Error('No authentication token found');\n        }\n\n        // Send request to add student\n        const response = await api.post('/students', {\n          ...newStudent.value,\n          // Calculate academic years based on current year and student's year level\n          academicYears: calculateAcademicYears(newStudent.value.year)\n        }, {\n          headers: {\n            'Authorization': `Bearer ${token}`\n          }\n        });\n        console.log('Student added successfully:', response.data);\n\n        // Reset form and close modal\n        resetNewStudentForm();\n        showAddSingleStudentModal.value = false;\n\n        // Refresh student list\n        await fetchStudents();\n        alert('Student added successfully');\n      } catch (error) {\n        console.error('Failed to add student:', error);\n        alert('Error adding student: ' + (error.response?.data?.message || error.message));\n      } finally {\n        isAddingStudent.value = false;\n      }\n    };\n\n    // Helper function to reset the new student form\n    const resetNewStudentForm = () => {\n      newStudent.value = {\n        studentId: '',\n        firstName: '',\n        middleName: '',\n        lastName: '',\n        email: '',\n        contactNumber: '',\n        year: '',\n        section: ''\n      };\n    };\n\n    // Helper function to calculate academic years\n    const calculateAcademicYears = year => {\n      const currentYear = new Date().getFullYear();\n      let startYear, endYear;\n      switch (year) {\n        case '1st':\n          startYear = currentYear;\n          endYear = currentYear + 4;\n          break;\n        case '2nd':\n          startYear = currentYear - 1;\n          endYear = currentYear + 3;\n          break;\n        case '3rd':\n          startYear = currentYear - 2;\n          endYear = currentYear + 2;\n          break;\n        case '4th':\n          startYear = currentYear - 3;\n          endYear = currentYear + 1;\n          break;\n        default:\n          startYear = currentYear;\n          endYear = currentYear + 4;\n      }\n      return {\n        startYear,\n        endYear\n      };\n    };\n\n    // Add fetchStudents function that was accidentally removed\n    const fetchStudents = async () => {\n      try {\n        const token = store.state.auth.token;\n        const response = await api.get('/students', {\n          headers: {\n            'Authorization': `Bearer ${token}`\n          }\n        });\n        students.value = response.data;\n        const response1 = await api.get('/students/assessments/all', {\n          headers: {\n            'Authorization': `Bearer ${token}`\n          }\n        });\n        assessments.value = response1.data?.assessments;\n      } catch (error) {\n        console.error('Failed to fetch students:', error);\n        alert('Failed to fetch students. Please try again.');\n      }\n    };\n\n    // Function to fetch assessment data for a specific student\n    const fetchStudentAssessments = async () => {\n      if (!selectedStudent.value) return;\n      isLoadingAssessments.value = true;\n      try {\n        // Try to fetch from API first\n        const response = await api.get(`/students/assessments/all`, {\n          params: {\n            studentId: selectedStudent.value.studentId\n          },\n          headers: {\n            Authorization: `Bearer ${store.state.auth.token}`\n          }\n        });\n        if (response.data && response.data.assessments) {\n          assessments.value = response.data.assessments;\n        } else {\n          // If no data or API call fails, use demo data\n          generateDemoAssessmentData();\n        }\n      } catch (error) {\n        console.error('Failed to fetch student assessments:', error);\n        // Generate demo data on failure\n        generateDemoAssessmentData();\n      } finally {\n        isLoadingAssessments.value = false;\n      }\n    };\n\n    // Generate demo assessment data\n    const generateDemoAssessmentData = () => {\n      // Create sample assessment data\n      const types = ['Quiz', 'Activity', 'Performance Task', 'Assignment'];\n      const subjects = ['Math', 'Science', 'English', 'History'];\n      const demoData = [];\n\n      // Generate 8 random assessments\n      for (let i = 0; i < 8; i++) {\n        const type = types[Math.floor(Math.random() * types.length)];\n        const subject = subjects[Math.floor(Math.random() * subjects.length)];\n        const maxScore = Math.floor(Math.random() * 40) + 10; // Random max score between 10-50\n        const studentScore = Math.floor(Math.random() * (maxScore * 0.8)) + Math.floor(maxScore * 0.2); // Between 20% and 100% of max\n\n        // Create assessment object with student's score\n        const assessment = {\n          _id: `demo-${i}`,\n          type,\n          number: i + 1,\n          subject,\n          title: `${type} ${i + 1} (${subject})`,\n          maxScore,\n          date: new Date(Date.now() - i * 7 * 24 * 60 * 60 * 1000).toISOString(),\n          // Spread over past weeks\n          scores: {}\n        };\n\n        // Add student's score if they have an ID\n        if (selectedStudent.value && selectedStudent.value.studentId) {\n          assessment.scores[selectedStudent.value.studentId] = studentScore;\n        }\n        demoData.push(assessment);\n      }\n      assessments.value = demoData;\n    };\n\n    // New function to fetch attendance history\n    const fetchAttendanceHistory = async () => {\n      if (!selectedStudent.value) return;\n      isLoadingAttendance.value = true;\n      try {\n        const response = await api.get(`/attendance/${selectedStudent.value.studentId}/history`, {\n          params: {\n            startDate: attendanceFilter.value.startDate,\n            endDate: attendanceFilter.value.endDate,\n            section: selectedStudent.value.section,\n            year: selectedStudent.value.year,\n            all: true\n          },\n          headers: {\n            Authorization: `Bearer ${store.state.auth.token}`\n          }\n        });\n        if (response.data && response.data.records && response.data.records.length > 0) {\n          attendanceHistory.value = response.data.records;\n\n          // Count attendance statuses\n          attendanceCounts.value = {\n            present: 0,\n            late: 0,\n            absent: 0\n          };\n          attendanceHistory.value.forEach(record => {\n            if (record.status in attendanceCounts.value) {\n              attendanceCounts.value[record.status]++;\n            }\n          });\n        } else {\n          // If no data, generate demo data\n          generateDemoAttendanceData();\n        }\n\n        // Update chart on next DOM update\n        nextTick(() => {\n          initAttendanceChart();\n        });\n      } catch (error) {\n        console.error('Failed to fetch attendance history:', error);\n        // Generate demo data on error\n        generateDemoAttendanceData();\n\n        // Update chart\n        nextTick(() => {\n          initAttendanceChart();\n        });\n      } finally {\n        isLoadingAttendance.value = false;\n      }\n    };\n\n    // Generate demo attendance data\n    const generateDemoAttendanceData = () => {\n      const statuses = ['present', 'late', 'absent'];\n      const subjects = ['Math', 'Science', 'English', 'History', 'Physical Education'];\n\n      // Clear existing data\n      attendanceHistory.value = [];\n      attendanceCounts.value = {\n        present: 0,\n        late: 0,\n        absent: 0\n      };\n\n      // Generate 20 days of attendance records\n      for (let i = 0; i < 20; i++) {\n        // Higher chance of present for better looking demo data\n        const randomStatus = Math.random();\n        let status;\n        if (randomStatus < 0.7) {\n          status = 'present';\n        } else if (randomStatus < 0.9) {\n          status = 'late';\n        } else {\n          status = 'absent';\n        }\n        const subject = subjects[Math.floor(Math.random() * subjects.length)];\n\n        // Create random date in the last 30 days\n        const date = new Date();\n        date.setDate(date.getDate() - Math.floor(Math.random() * 30));\n        const record = {\n          _id: `demo-${i}`,\n          studentId: selectedStudent.value.studentId,\n          date: date.toISOString(),\n          subject,\n          status,\n          section: selectedStudent.value.section || 'Section A',\n          year: selectedStudent.value.year || '1st'\n        };\n\n        // Add to history\n        attendanceHistory.value.push(record);\n\n        // Update counts\n        if (status in attendanceCounts.value) {\n          attendanceCounts.value[status]++;\n        }\n      }\n\n      // Sort by date (newest first)\n      attendanceHistory.value.sort((a, b) => new Date(b.date) - new Date(a.date));\n\n      // Update the selectedStudent's attendanceHistory with the demo data\n      selectedStudent.value = {\n        ...selectedStudent.value,\n        attendanceHistory: {\n          records: attendanceHistory.value\n        }\n      };\n\n      // Initialize chart after DOM update\n      nextTick(() => {\n        initAttendanceChart();\n      });\n    };\n    return {\n      students,\n      searchQuery,\n      selectedStudent,\n      performanceChart,\n      attendanceChart,\n      sortField,\n      sortOrder,\n      showDeleteModal,\n      studentToDelete,\n      isEditing,\n      editingStudent,\n      showSearch,\n      showAddStudentModal,\n      showAddSingleStudentModal,\n      selectedFile,\n      uploadYear,\n      isUploading,\n      availableYears,\n      availableSections,\n      newStudent,\n      isAddingStudent,\n      handleFileChange,\n      handleFileUpload,\n      handleAddSingleStudent,\n      resetNewStudentForm,\n      filteredStudents,\n      closeStudentModal,\n      confirmDelete,\n      deleteStudent,\n      startEditing,\n      cancelEditing,\n      saveStudentChanges,\n      sortBy,\n      getSortIcon,\n      sortedStudents,\n      toggleSearch,\n      handleSearch,\n      clearSearch,\n      fetchStudents,\n      hasActiveFilters,\n      selectedYear,\n      selectedSection,\n      viewStudent,\n      getAcademicYearRange,\n      clearFilters,\n      applyFilters,\n      currentPage,\n      totalPages,\n      paginatedStudents,\n      paginationInfo,\n      nextPage,\n      previousPage,\n      formatDate,\n      assessments,\n      attendanceCounts,\n      attendanceHistory,\n      initAttendanceChart\n    };\n  }\n};","map":{"version":3,"names":["ref","computed","onMounted","onUnmounted","watch","nextTick","useStore","axios","Chart","Dropdown","formatDate","StudentAssessmentChart","api","create","baseURL","headers","name","components","setup","store","students","searchQuery","selectedStudent","performanceChart","sortField","sortOrder","showDeleteModal","studentToDelete","isEditing","editingStudent","showSearch","assessments","selectedYear","selectedSection","selectedFile","uploadYear","isUploading","subjectChart","attendanceChart","historyStartDate","historyEndDate","showStartDatePicker","showEndDatePicker","showAddStudentModal","showAddSingleStudentModal","availableYears","availableSections","newStudent","studentId","firstName","middleName","lastName","email","contactNumber","year","section","isAddingStudent","currentPage","itemsPerPage","totalPages","Math","ceil","sortedStudents","value","length","paginatedStudents","start","end","slice","paginationInfo","min","nextPage","previousPage","getters","isLoggedIn","fetchStudents","dropdownElements","document","querySelectorAll","dropdownInstances","forEach","element","push","dropdown","dispose","state","auth","token","newToken","handleFileChange","event","file","target","files","type","alert","console","log","handleFileUpload","formData","FormData","append","fileName","Error","response","post","data","errors","errorMessage","join","counts","sectionCounts","error","message","filteredStudents","filter","student","searchLower","toLowerCase","matchesSearch","includes","matchesYear","matchesSection","closeStudentModal","existingChart","getChart","destroy","_chart","confirmDelete","deleteStudent","delete","_id","s","startEditing","cancelEditing","saveStudentChanges","studentResponse","put","index","findIndex","sortBy","field","getSortIcon","sort","a","b","aVal","bVal","toggleSearch","handleSearch","clearSearch","getAcademicYearRange","currentYear","Date","getFullYear","yearNumber","startYear","hasActiveFilters","viewStudent","get","params","all","subject","startDate","endDate","records","attendanceHistory","attendanceCounts","present","late","absent","record","status","generateDemoAttendanceData","initAttendanceChart","ctx","labels","datasets","backgroundColor","borderWidth","hoverOffset","options","responsive","maintainAspectRatio","cutout","plugins","legend","position","usePointStyle","padding","font","size","tooltip","callbacks","label","context","raw","total","chart","reduce","percentage","round","clearFilters","applyFilters","handleAddSingleStudent","requiredFields","charAt","toUpperCase","emailRegex","test","academicYears","calculateAcademicYears","resetNewStudentForm","endYear","response1","fetchStudentAssessments","isLoadingAssessments","Authorization","generateDemoAssessmentData","types","subjects","demoData","i","floor","random","maxScore","studentScore","assessment","number","title","date","now","toISOString","scores","fetchAttendanceHistory","isLoadingAttendance","attendanceFilter","statuses","randomStatus","setDate","getDate"],"sources":["D:\\au_dev\\client\\src\\views\\StudentManagement.vue"],"sourcesContent":["<template>\n  <div class=\"student-management\">\n    <div class=\"sticky-controls\">\n      <div class=\"d-flex gap-2 mb-3\">\n        <button \n          class=\"btn btn-primary\" \n          @click=\"showAddStudentModal = true\"\n        >\n          <i class=\"fas fa-plus me-1\"></i> Add Student List\n        </button>\n        <button \n          class=\"btn btn-success\" \n          @click=\"showAddSingleStudentModal = true\"\n        >\n          <i class=\"fas fa-user-plus me-1\"></i> Add Single Student\n        </button>\n      </div>\n    \n        <!-- Table Controls -->\n        <div class=\"table-controls mb-3\">\n        <div class=\"d-flex justify-content-between align-items-center\">\n          <div class=\"d-flex align-items-center gap-3\">\n            <!-- Sort Dropdown -->\n            <div class=\"dropdown\">\n              <button \n                class=\"btn btn-control\" \n                type=\"button\" \n                id=\"sortDropdown\" \n                data-bs-toggle=\"dropdown\" \n                aria-expanded=\"false\"\n              >\n                <i class=\"fas fa-sort me-2\"></i> Sort by\n              </button>\n              <ul class=\"dropdown-menu shadow-lg\" aria-labelledby=\"sortDropdown\">\n                <li>\n                  <a class=\"dropdown-item d-flex align-items-center gap-2\" href=\"#\" @click.prevent=\"sortBy('studentId')\">\n                    <i class=\"fas fa-sort-numeric-down\"></i>\n                    <span>ID Number</span>\n                    <i :class=\"getSortIcon('studentId')\" class=\"ms-auto\"></i>\n                  </a>\n                </li>\n                <li>\n                  <a class=\"dropdown-item d-flex align-items-center gap-2\" href=\"#\" @click.prevent=\"sortBy('lastName')\">\n                    <i class=\"fas fa-sort-alpha-down\"></i>\n                    <span>Name</span>\n                    <i :class=\"getSortIcon('lastName')\" class=\"ms-auto\"></i>\n                  </a>\n                </li>\n              </ul>\n            </div>\n\n            <!-- Filter Dropdown -->\n            <div class=\"dropdown\">\n              <button \n                class=\"btn btn-control\" \n                type=\"button\" \n                id=\"filterDropdown\" \n                data-bs-toggle=\"dropdown\" \n                aria-expanded=\"false\"\n              >\n                <i class=\"fas fa-filter me-2\"></i> \n                {{ hasActiveFilters ? `${selectedYear || 'All Years'} - ${selectedSection || 'All Sections'}` : 'Filter Students' }}\n                <span v-if=\"hasActiveFilters\" class=\"filter-badge\">!</span>\n              </button>\n              <div class=\"dropdown-menu shadow-lg p-3\" aria-labelledby=\"filterDropdown\">\n                <div class=\"d-flex justify-content-between align-items-center mb-2\">\n                  <h6 class=\"dropdown-header px-0 mb-0\">Filter Options</h6>\n                    <button \n                    v-if=\"hasActiveFilters\"\n                    class=\"btn btn-sm btn-outline-secondary\"\n                    @click=\"clearFilters\"\n                    >\n                    Clear Filters\n                    </button>\n                  </div>\n                \n                <!-- Year Filter -->\n                <div class=\"mb-3\">\n                  <label class=\"form-label\">Year Level</label>\n                  <select class=\"form-select mb-2\" v-model=\"selectedYear\" @change=\"applyFilters\">\n                    <option value=\"\">All Years</option>\n                    <option value=\"1st\">1st Year</option>\n                    <option value=\"2nd\">2nd Year</option>\n                    <option value=\"3rd\">3rd Year</option>\n                    <option value=\"4th\">4th Year</option>\n                  </select>\n                </div>\n                \n                <!-- Section Filter -->\n                <div class=\"mb-3\">\n                  <label class=\"form-label\">Section</label>\n                  <select class=\"form-select\" v-model=\"selectedSection\" @change=\"applyFilters\">\n                    <option value=\"\">All Sections</option>\n                    <option value=\"South 1\">South 1</option>\n                    <option value=\"South 2\">South 2</option>\n                    <option value=\"South 3\">South 3</option>\n                  </select>\n                </div>\n              </div>\n            </div>\n\n            <!-- Search Control -->\n          <div class=\"search-control\">\n            <div class=\"input-group\">\n              <span class=\"input-group-text border-end-0\">\n                <i class=\"fas fa-search\"></i>\n              </span>\n                <input \n                  type=\"text\" \n                class=\"form-control border-start-0\" \n                  v-model=\"searchQuery\"\n                placeholder=\"Search students...\"\n                @input=\"handleSearch\"\n              >\n              <button \n                v-if=\"searchQuery\"\n                class=\"btn btn-outline-secondary border-start-0\" \n                type=\"button\"\n                @click=\"clearSearch\"\n              >\n                <i class=\"fas fa-times\"></i>\n              </button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n        </div>\n\n        <div class=\"table-responsive\">\n          <table class=\"table table-hover\">\n            <thead>\n              <tr>\n                <th>Student ID</th>\n                <th>Last Name</th>\n                <th>First Name</th>\n                <th>Email</th>\n                <th>Year</th>\n                <th>Section</th>\n              </tr>\n            </thead>\n            <tbody>\n          <template v-if=\"paginatedStudents.length > 0\">\n                <tr \n              v-for=\"student in paginatedStudents\" \n                  :key=\"student.studentId\"\n                  @click=\"viewStudent(student)\"\n                  class=\"clickable-row\"\n                >\n                  <td>{{ student.studentId }}</td>\n                  <td>{{ student.lastName }}</td>\n                  <td>{{ student.firstName }}</td>\n                  <td>{{ student.email }}</td>\n                  <td>{{ student.year }}</td>\n                  <td>{{ student.section }}</td>\n                </tr>\n              </template>\n              <tr v-else>\n                <td colspan=\"6\" class=\"text-center py-4\">\n                  <div class=\"empty-state-message\">\n                    <i class=\"fas fa-users text-muted mb-2\"></i>\n                    <p class=\"mb-0\">No students found</p>\n                    <p class=\"text-muted small\" v-if=\"hasActiveFilters\">\n                      Try adjusting your filters\n                    </p>\n                  </div>\n                </td>\n              </tr>\n            </tbody>\n          </table>\n    </div>\n\n    <!-- Pagination Controls -->\n    <div class=\"pagination-controls mt-3 d-flex justify-content-between align-items-center\">\n      <div class=\"pagination-info\">\n        Showing {{ paginationInfo.start }} to {{ paginationInfo.end }} of {{ sortedStudents.length }} entries\n      </div>\n      <div class=\"pagination-buttons\">\n        <button \n          class=\"btn btn-outline-primary me-2\" \n          @click=\"previousPage\" \n          :disabled=\"currentPage === 1\"\n        >\n          <i class=\"fas fa-chevron-left me-1\"></i> Previous\n        </button>\n        <button \n          class=\"btn btn-outline-primary\" \n          @click=\"nextPage\" \n          :disabled=\"currentPage >= totalPages\"\n        >\n          Next <i class=\"fas fa-chevron-right ms-1\"></i>\n        </button>\n      </div>\n    </div>\n\n    <!-- Add Student Modal -->\n    <div v-if=\"showAddStudentModal\" class=\"add-student-modal\">\n      <div class=\"add-student-backdrop\" @click=\"showAddStudentModal = false\"></div>\n      <div class=\"add-student-dialog\">\n        <div class=\"add-student-content\">\n          <div class=\"modal-header bg-primary text-white\">\n            <h5 class=\"modal-title\">Add Student List</h5>\n            <button type=\"button\" class=\"btn-close btn-close-white\" @click=\"showAddStudentModal = false\"></button>\n          </div>\n          <div class=\"modal-body\">\n            <form @submit.prevent=\"handleFileUpload\">\n              <!-- Year Selection -->\n              <div class=\"mb-3\">\n                <label class=\"form-label\">Year Level</label>\n                <select class=\"form-select\" v-model=\"uploadYear\" required>\n                  <option value=\"\">Select Year</option>\n                  <option v-for=\"year in availableYears\" :key=\"year\" :value=\"year\">{{ year }}</option>\n                </select>\n                <small class=\"text-muted d-block mt-1\">\n                  Note: Sections will be automatically assigned based on the number of students (50 students per section).\n                </small>\n              </div>\n\n              <!-- File Upload -->\n              <div class=\"mb-3\">\n                <label class=\"form-label\">CSV File</label>\n                <input \n                  type=\"file\" \n                  class=\"form-control\" \n                  accept=\".csv\"\n                  @change=\"handleFileChange\"\n                  required\n                >\n                <small class=\"text-muted d-block mt-1\">\n                  <strong>Required fields:</strong> StudentID, LastName, FirstName, MiddleName, ContactNumber, Email\n                </small>\n                <small class=\"text-muted d-block mt-1\">\n                  <strong>Important:</strong> Make sure the CSV file has an \"Email\" column with valid email addresses.\n                </small>\n                <small class=\"text-muted d-block mt-1\">\n                  File must be in CSV format with headers matching the required fields exactly.\n                </small>\n              </div>\n\n              <div class=\"text-end\">\n                <button type=\"button\" class=\"btn btn-secondary me-2\" @click=\"showAddStudentModal = false\">\n                  Cancel\n                </button>\n                <button type=\"submit\" class=\"btn btn-primary\" :disabled=\"isUploading || !selectedFile\">\n                  {{ isUploading ? 'Uploading...' : 'Upload' }}\n                </button>\n              </div>\n            </form>\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <!-- Student Details Modal -->\n    <div v-if=\"selectedStudent\" class=\"modal-wrapper\" @click.self=\"closeStudentModal\">\n      <div class=\"modal-backdrop\" @click=\"closeStudentModal\"></div>\n      <div class=\"modal-dialog modal-xxl\">\n        <div class=\"modal-content\">\n          <div class=\"modal-header bg-primary text-white\">\n            <h5 class=\"modal-title\">\n              <i class=\"fas fa-user-graduate me-2\"></i>\n              Student Details\n            </h5>\n            <button type=\"button\" class=\"btn-close btn-close-white\" @click=\"closeStudentModal\"></button>\n          </div>\n          <div class=\"modal-body\">\n            <div class=\"student-details\">\n              <!-- Student Information (Left Side) -->\n              <div class=\"student-info\">\n                <h6 class=\"info-title\">Student Information</h6>\n                <div class=\"info-content\">\n                  <p><strong>Name:</strong> {{ selectedStudent.firstName }} {{ selectedStudent.lastName }}</p>\n                  <p><strong>ID:</strong> {{ selectedStudent.studentId }}</p>\n                  <p><strong>Year Level:</strong> {{ selectedStudent.year }}</p>\n                  <p><strong>Academic Year:</strong> {{ getAcademicYearRange(selectedStudent.year) }}</p>\n                  <p><strong>Section:</strong> {{ selectedStudent.section }}</p>\n                  <p><strong>Email:</strong> {{ selectedStudent.email }}</p>\n                </div>\n              </div>\n\n              <!-- Performance and Attendance (Right Side) -->\n              <div class=\"student-charts\">\n                <div class=\"chart-section\">\n                  <h6>Performance Trends</h6>\n                  <StudentAssessmentChart :studentId=\"selectedStudent.studentId\" :assessments=\"assessments\"/>\n                  <canvas ref=\"performanceChart\"></canvas>\n                  </div>\n                <div class=\"chart-section\">\n                  <h6>Attendance History</h6>\n                  <div class=\"chart-container mb-4\" style=\"height: 300px;\">\n                    <canvas ref=\"attendanceChart\"></canvas>\n                  </div>\n                  <div class=\"table-responsive attendance-table\">\n                    <table class=\"table\">\n                        <thead>\n                          <tr>\n                            <th>Date</th>\n                            <th>Subject</th>\n                          <th>Status</th>\n                          </tr>\n                        </thead>\n                        <tbody>\n                        <tr v-for=\"record in selectedStudent.attendanceHistory?.records\" :key=\"record._id\">\n                          <td>{{ formatDate (record.date) }}</td>\n                          <td>{{ record.subject }}</td>\n                          <td>\n                            <span \n                              class=\"badge capitalize\"\n                              :class=\"{\n                                'bg-success': record.status === 'present',\n                                'bg-danger': record.status === 'absent',\n                                'bg-warning': record.status === 'late'\n                              }\"\n                            >\n                              {{ record.status}}\n                              </span>\n                            </td>\n                          </tr>\n                        </tbody>\n                      </table>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <!-- Edit Student Modal -->\n    <div v-if=\"isEditing\" class=\"modal-wrapper\">\n      <div class=\"modal-backdrop\" @click=\"cancelEditing\"></div>\n      <div class=\"modal-dialog\">\n        <div class=\"modal-content\">\n          <div class=\"modal-header\">\n            <h5 class=\"modal-title\">Edit Student</h5>\n            <button type=\"button\" class=\"btn-close\" @click=\"cancelEditing\"></button>\n          </div>\n          <div class=\"modal-body\">\n            <form @submit.prevent=\"saveStudentChanges\">\n              <div class=\"mb-3\">\n                <label class=\"form-label\">Student ID</label>\n                <input \n                  type=\"text\" \n                  class=\"form-control\" \n                  v-model=\"editingStudent.studentId\"\n                >\n              </div>\n              <div class=\"mb-3\">\n                <label class=\"form-label\">First Name</label>\n                <input \n                  type=\"text\" \n                  class=\"form-control\" \n                  v-model=\"editingStudent.firstName\"\n                >\n              </div>\n              <div class=\"mb-3\">\n                <label class=\"form-label\">Last Name</label>\n                <input \n                  type=\"text\" \n                  class=\"form-control\" \n                  v-model=\"editingStudent.lastName\"\n                >\n              </div>\n              <div class=\"mb-3\">\n                <label class=\"form-label\">Email</label>\n                <input \n                  type=\"email\" \n                  class=\"form-control\" \n                  v-model=\"editingStudent.email\"\n                >\n              </div>\n              <div class=\"mb-3\">\n                <label class=\"form-label\">Year</label>\n                <select class=\"form-select\" v-model=\"editingStudent.year\">\n                  <option v-for=\"year in availableYears\" :value=\"year\">{{ year }}</option>\n                </select>\n              </div>\n              <div class=\"mb-3\">\n                <label class=\"form-label\">Section</label>\n                <select class=\"form-select\" v-model=\"editingStudent.section\">\n                  <option v-for=\"section in availableSections\" :value=\"section\">{{ section }}</option>\n                </select>\n              </div>\n              <div class=\"d-flex justify-content-end gap-2\">\n                <button type=\"button\" class=\"btn btn-secondary\" @click=\"cancelEditing\">\n                  Cancel\n                </button>\n                <button type=\"submit\" class=\"btn btn-primary\">\n                  Save Changes\n                </button>\n              </div>\n            </form>\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <!-- Delete Confirmation Modal -->\n    <div v-if=\"showDeleteModal\" class=\"modal-wrapper\">\n      <div class=\"modal-backdrop\" @click=\"showDeleteModal = false\"></div>\n      <div class=\"modal-dialog\">\n        <div class=\"modal-content\">\n          <div class=\"modal-header\">\n            <h5 class=\"modal-title\">Confirm Delete</h5>\n            <button type=\"button\" class=\"btn-close\" @click=\"showDeleteModal = false\"></button>\n          </div>\n          <div class=\"modal-body\">\n            <p>Are you sure you want to delete this student?</p>\n            <p class=\"text-danger\">\n              <strong>{{ studentToDelete?.firstName }} {{ studentToDelete?.lastName }}</strong>\n            </p>\n            <p class=\"text-muted small\">This action cannot be undone.</p>\n          </div>\n          <div class=\"modal-footer\">\n            <button \n              type=\"button\" \n              class=\"btn btn-secondary\" \n              @click=\"showDeleteModal = false\"\n            >\n              Cancel\n            </button>\n            <button \n              type=\"button\" \n              class=\"btn btn-danger\" \n              @click=\"deleteStudent(studentToDelete)\"\n            >\n              Delete\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <!-- Add Single Student Modal -->\n    <div v-if=\"showAddSingleStudentModal\" class=\"modal-wrapper\">\n      <div class=\"modal-backdrop\" @click=\"showAddSingleStudentModal = false\"></div>\n      <div class=\"modal-dialog\">\n        <div class=\"modal-content\">\n          <div class=\"modal-header bg-success text-white\">\n            <h5 class=\"modal-title\">\n              <i class=\"fas fa-user-plus me-2\"></i>\n              Add Single Student\n            </h5>\n            <button type=\"button\" class=\"btn-close btn-close-white\" @click=\"showAddSingleStudentModal = false\"></button>\n          </div>\n          <div class=\"modal-body\">\n            <form @submit.prevent=\"handleAddSingleStudent\">\n              <div class=\"mb-3\">\n                <label class=\"form-label\">Student ID <span class=\"text-danger\">*</span></label>\n                <input \n                  type=\"text\" \n                  class=\"form-control\" \n                  v-model=\"newStudent.studentId\"\n                  required\n                >\n              </div>\n              <div class=\"mb-3\">\n                <label class=\"form-label\">First Name <span class=\"text-danger\">*</span></label>\n                <input \n                  type=\"text\" \n                  class=\"form-control\" \n                  v-model=\"newStudent.firstName\"\n                  required\n                >\n              </div>\n              <div class=\"mb-3\">\n                <label class=\"form-label\">Middle Name <span class=\"text-danger\">*</span></label>\n                <input \n                  type=\"text\" \n                  class=\"form-control\" \n                  v-model=\"newStudent.middleName\"\n                  required\n                >\n              </div>\n              <div class=\"mb-3\">\n                <label class=\"form-label\">Last Name <span class=\"text-danger\">*</span></label>\n                <input \n                  type=\"text\" \n                  class=\"form-control\" \n                  v-model=\"newStudent.lastName\"\n                  required\n                >\n              </div>\n              <div class=\"mb-3\">\n                <label class=\"form-label\">Email <span class=\"text-danger\">*</span></label>\n                <input \n                  type=\"email\" \n                  class=\"form-control\" \n                  v-model=\"newStudent.email\"\n                  required\n                >\n              </div>\n              <div class=\"mb-3\">\n                <label class=\"form-label\">Contact Number <span class=\"text-danger\">*</span></label>\n                <input \n                  type=\"text\" \n                  class=\"form-control\" \n                  v-model=\"newStudent.contactNumber\"\n                  required\n                >\n              </div>\n              <div class=\"mb-3\">\n                <label class=\"form-label\">Year <span class=\"text-danger\">*</span></label>\n                <select class=\"form-select\" v-model=\"newStudent.year\" required>\n                  <option value=\"\">Select Year</option>\n                  <option v-for=\"year in availableYears\" :key=\"year\" :value=\"year\">{{ year }}</option>\n                </select>\n              </div>\n              <div class=\"mb-3\">\n                <label class=\"form-label\">Section <span class=\"text-danger\">*</span></label>\n                <select class=\"form-select\" v-model=\"newStudent.section\" required>\n                  <option value=\"\">Select Section</option>\n                  <option v-for=\"section in availableSections\" :key=\"section\" :value=\"section\">{{ section }}</option>\n                </select>\n              </div>\n              <div class=\"d-flex justify-content-end gap-2\">\n                <button type=\"button\" class=\"btn btn-secondary\" @click=\"showAddSingleStudentModal = false\">\n                  Cancel\n                </button>\n                <button type=\"submit\" class=\"btn btn-success\" :disabled=\"isAddingStudent\">\n                  {{ isAddingStudent ? 'Adding...' : 'Add Student' }}\n                </button>\n              </div>\n            </form>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { ref, computed, onMounted, onUnmounted, watch, nextTick } from 'vue'\nimport { useStore } from 'vuex'\nimport axios from 'axios'\nimport Chart from 'chart.js/auto'\nimport { Dropdown } from 'bootstrap'\nimport { formatDate } from '../utils'\nimport StudentAssessmentChart from '../components/StudentAssessmentChart.vue'\n\n// Create axios instance with correct base URL\nconst api = axios.create({\n  baseURL: 'http://localhost:8081/api',\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\nexport default {\n  name: 'StudentManagement',\n  components : {\n    StudentAssessmentChart\n  },\n  setup() {\n    const store = useStore()\n    const students = ref([])\n    const searchQuery = ref('')\n    const selectedStudent = ref(null)\n    const performanceChart = ref(null)\n    const sortField = ref('')\n    const sortOrder = ref('asc')\n    const showDeleteModal = ref(false)\n    const studentToDelete = ref(null)\n    const isEditing = ref(false)\n    const editingStudent = ref(null)\n    const showSearch = ref(false)\n    const assessments = ref([])\nconst selectedYear = ref('')\nconst selectedSection = ref('')\nconst selectedFile = ref(null)\nconst uploadYear = ref('')\nconst isUploading = ref(false)\nconst subjectChart = ref(null)\nconst attendanceChart = ref(null)\nconst historyStartDate = ref('')\nconst historyEndDate = ref('')\nconst showStartDatePicker = ref(false)\nconst showEndDatePicker = ref(false)\nconst showAddStudentModal = ref(false)\nconst showAddSingleStudentModal = ref(false)\nconst availableYears = ['1st', '2nd', '3rd', '4th']\nconst availableSections = ['South 1', 'South 2', 'South 3']\nconst newStudent = ref({\n  studentId: '',\n  firstName: '',\n  middleName: '',\n  lastName: '',\n  email: '',\n  contactNumber: '',\n  year: '',\n  section: ''\n})\nconst isAddingStudent = ref(false)\n\n// Add pagination state\nconst currentPage = ref(1)\nconst itemsPerPage = 25\n\n// Compute total pages\nconst totalPages = computed(() => Math.ceil(sortedStudents.value.length / itemsPerPage))\n\n// Get paginated students\nconst paginatedStudents = computed(() => {\n  const start = (currentPage.value - 1) * itemsPerPage\n  const end = start + itemsPerPage\n  return sortedStudents.value.slice(start, end)\n})\n\n// Compute pagination info\nconst paginationInfo = computed(() => {\n  const start = (currentPage.value - 1) * itemsPerPage + 1\n  const end = Math.min(start + itemsPerPage - 1, sortedStudents.value.length)\n  return { start, end }\n})\n\n// Pagination methods\nconst nextPage = () => {\n  if (currentPage.value < totalPages.value) {\n    currentPage.value++\n  }\n}\n\nconst previousPage = () => {\n  if (currentPage.value > 1) {\n    currentPage.value--\n  }\n}\n\n// Reset pagination when filters change\nwatch([searchQuery, selectedYear, selectedSection], () => {\n  currentPage.value = 1\n})\n\n    // Initialize data on component mount\n    onMounted(async () => {\n      if (store.getters.isLoggedIn) {\n    await fetchStudents();\n      }\n      \n  // Initialize dropdowns after a short delay to ensure DOM is ready\n  nextTick(() => {\n      const dropdownElements = document.querySelectorAll('[data-bs-toggle=\"dropdown\"]')\n    const dropdownInstances = []\n    \n      dropdownElements.forEach(element => {\n      if (element) {\n        dropdownInstances.push(new Dropdown(element))\n      }\n    })\n\n    // Cleanup dropdowns on unmount\n    onUnmounted(() => {\n      dropdownInstances.forEach(dropdown => {\n        if (dropdown && typeof dropdown.dispose === 'function') {\n          dropdown.dispose()\n        }\n      })\n    })\n  })\n})\n\n    // Watch for auth state changes\n    watch(() => store.state.auth.token, (newToken) => {\n      if (newToken) {\n        fetchStudents();\n      }\n    });\n\n    // File upload handlers\n    const handleFileChange = (event) => {\n      const file = event.target.files[0]\n      if (file && file.type !== 'text/csv') {\n        alert('Please select a CSV file')\n        event.target.value = ''\n        selectedFile.value = null\n        return\n      }\n      selectedFile.value = file\n      console.log('File selected:', file?.name)\n    }\n\n    const handleFileUpload = async () => {\n      if (!selectedFile.value || !uploadYear.value) {\n        alert('Please select both a year and a CSV file')\n        return\n      }\n\n      isUploading.value = true\n      const formData = new FormData()\n      formData.append('file', selectedFile.value)\n      formData.append('year', uploadYear.value)\n\n      try {\n        console.log('Starting upload...', {\n          year: uploadYear.value,\n          fileName: selectedFile.value.name\n        })\n\n        const token = store.state.auth.token\n        if (!token) {\n          throw new Error('No authentication token found')\n        }\n\n    // Log the form data to verify what's being sent\n    console.log('Form data contents:', {\n      file: selectedFile.value,\n      year: uploadYear.value\n    })\n\n    const response = await api.post('/students/upload', formData, {\n          headers: {\n        'Authorization': `Bearer ${token}`,\n        'Content-Type': 'multipart/form-data'\n          }\n        })\n\n        console.log('Upload successful:', response.data)\n\n        if (response.data.errors && response.data.errors.length > 0) {\n          const errorMessage = response.data.errors.join('\\n')\n          alert(`Upload completed with some errors:\\n${errorMessage}`)\n        } else {\n          const counts = response.data.sectionCounts\n          alert(`File uploaded successfully!\\n\\nStudent distribution:\\nSouth 1: ${counts['South 1']} students\\nSouth 2: ${counts['South 2']} students\\nSouth 3: ${counts['South 3']} students`)\n        }\n\n        // Reset form\n        selectedFile.value = null\n        uploadYear.value = ''\n        \n        // Refresh student list and close modal\n        await fetchStudents()\n    \n    // Debug: Check if emails are included in the fetched students after upload\n    console.log('Students after upload:', students.value);\n    if (students.value.length > 0) {\n      console.log('First student after upload:', students.value[0]);\n      console.log('Email field exists after upload:', 'email' in students.value[0]);\n      console.log('Email value after upload:', students.value[0].email);\n    }\n    \n        showAddStudentModal.value = false\n      } catch (error) {\n    console.error('Upload failed:', error)\n        alert('Error uploading file: ' + (error.response?.data?.message || error.message))\n      } finally {\n        isUploading.value = false\n      }\n    }\n\n    // Filter students\n    const filteredStudents = computed(() => {\n      return students.value.filter(student => {\n        const searchLower = searchQuery.value.toLowerCase();\nconst matchesSearch = \n          student.studentId.toLowerCase().includes(searchLower) ||\n          student.firstName.toLowerCase().includes(searchLower) ||\nstudent.lastName.toLowerCase().includes(searchLower);\n\n// Apply year and section filters\nconst matchesYear = !selectedYear.value || student.year === selectedYear.value;\nconst matchesSection = !selectedSection.value || student.section === selectedSection.value;\n\nreturn matchesSearch && matchesYear && matchesSection;\n      });\n    });\n\n    // Student actions\n    const closeStudentModal = () => {\n      if (performanceChart.value) {\n        const existingChart = Chart.getChart(performanceChart.value);\n        if (existingChart) {\n          existingChart.destroy();\n        }\n      }\n      \n      if (attendanceChart.value && attendanceChart.value._chart) {\n        attendanceChart.value._chart.destroy();\n        attendanceChart.value._chart = null;\n      }\n      \n      selectedStudent.value = null;\n    };\n\n    const confirmDelete = (student) => {\nstudentToDelete.value = student;\nshowDeleteModal.value = true;\n    }\n\n    const deleteStudent = async (student) => {\n      try {\n        const token = store.state.auth.token;\n\n    // Delete the student from students collection using MongoDB _id\n    await api.delete(\n      '/students/' + student._id,\n            {\n              headers: {\n                'Authorization': `Bearer ${token}`\n              }\n            }\n        );\n\n            // Update local state\n        students.value = students.value.filter(s => s._id !== student._id);\n        selectedStudent.value = null;\n        showDeleteModal.value = false;\n        studentToDelete.value = null;\n        alert('Student deleted successfully');\n      } catch (error) {\n    console.error('Failed to delete student:', error);\n        alert('Failed to delete student. Please try again.');\n      }\n    }\n\nconst startEditing = (student) => {\n  editingStudent.value = { ...student }\n      isEditing.value = true\n    }\n\n    const cancelEditing = () => {\neditingStudent.value = null\n      isEditing.value = false\n    }\n\n    const saveStudentChanges = async () => {\n      try {\n        const token = store.state.auth.token\n        \n    // Update student information\n    const studentResponse = await api.put('/students/' + editingStudent.value._id, {\n            studentId: editingStudent.value.studentId,\n            firstName: editingStudent.value.firstName,\n            lastName: editingStudent.value.lastName,\n            email: editingStudent.value.email,\n            year: editingStudent.value.year,\n            section: editingStudent.value.section\n        }, {\n            headers: {\n              'Authorization': `Bearer ${token}`\n            }\n        })\n\n        if (studentResponse.data) {\n            // Update local state\n            const index = students.value.findIndex(s => s._id === editingStudent.value._id)\n            if (index !== -1) {\n              students.value[index] = { ...editingStudent.value }\n            }\n            \n            selectedStudent.value = null\n            editingStudent.value = null\n            isEditing.value = false\n            alert('Student information updated successfully')\n        } else {\n          throw new Error('Failed to update student information')\n        }\n      } catch (error) {\n    console.error('Failed to update student:', error)\n        alert('Failed to update student information. Please try again.')\n      }\n    }\n\n    const sortBy = (field) => {\n      if (sortField.value === field) {\n        sortOrder.value = sortOrder.value === 'asc' ? 'desc' : 'asc'\n      } else {\n        sortField.value = field\n        sortOrder.value = 'asc'\n      }\n    }\n\n    const getSortIcon = (field) => {\n      if (sortField.value !== field) return 'fas fa-sort'\n      return sortOrder.value === 'asc' ? 'fas fa-sort-up' : 'fas fa-sort-down'\n    }\n\n    const sortedStudents = computed(() => {\n      let students = filteredStudents.value\n\n      if (sortField.value) {\n        students = [...students].sort((a, b) => {\n          let aVal = a[sortField.value]\n          let bVal = b[sortField.value]\n\n          // Handle case-insensitive string comparison\n          if (typeof aVal === 'string') aVal = aVal.toLowerCase()\n          if (typeof bVal === 'string') bVal = bVal.toLowerCase()\n\n          if (aVal < bVal) return sortOrder.value === 'asc' ? -1 : 1\n          if (aVal > bVal) return sortOrder.value === 'asc' ? 1 : -1\n          return 0\n        })\n      }\n\n      return students\n    })\n\n    const toggleSearch = () => {\n      showSearch.value = !showSearch.value\n      if (!showSearch.value) {\n        searchQuery.value = ''\n      }\n    }\n\n    const handleSearch = () => {\n      // Implement any additional search logic here if needed\n      console.log('Searching for:', searchQuery.value)\n    }\n\nconst clearSearch = () => {\nsearchQuery.value = ''\nhandleSearch()\n}\n\n// Add getAcademicYearRange function\nconst getAcademicYearRange = (year) => {\nconst currentYear = new Date().getFullYear()\nlet yearNumber = 0\n\nswitch(year) {\ncase '1st':\nyearNumber = 1\nbreak\ncase '2nd':\nyearNumber = 2\nbreak\ncase '3rd':\nyearNumber = 3\nbreak\ncase '4th':\nyearNumber = 4\nbreak\ndefault:\nreturn 'N/A'\n}\n\nconst startYear = currentYear - yearNumber + 1\nreturn `${startYear} - ${startYear + 1}`\n}\n\n// Add hasActiveFilters computed property\nconst hasActiveFilters = computed(() => {\nreturn selectedYear.value || selectedSection.value;\n});\n\n// Add viewStudent function\nconst viewStudent = async (student) => {\n  selectedStudent.value = student;\n\n  try {\n    // Fetch student's attendance\n    const response = await api.get(\n      `/attendance/${student._id}/history`,\n      {\n        params: {\n          all: true,\n          subject: '',\n          startDate: '',\n          endDate: ''\n        },\n        headers: { 'Authorization': `Bearer ${store.state.auth.token}` }\n      }\n    );\n\n    // Process attendance data for chart\n    if (response.data && response.data.records && response.data.records.length > 0) {\n      attendanceHistory.value = response.data.records || [];\n      \n      // Count occurrences of each status\n      attendanceCounts.value = {\n        present: 0,\n        late: 0,\n        absent: 0\n      };\n      \n      attendanceHistory.value.forEach(record => {\n        if (record.status in attendanceCounts.value) {\n          attendanceCounts.value[record.status]++;\n        }\n      });\n      \n      selectedStudent.value = {\n        ...selectedStudent.value,\n        attendanceHistory: response.data\n      };\n    } else {\n      // Generate demo data if no real data is available\n      generateDemoAttendanceData();\n    }\n  } catch (error) {\n    console.error('Failed to fetch attendance data:', error);\n    // Generate demo data on error\n    generateDemoAttendanceData();\n  }\n\n  // Initialize attendance chart after DOM update\n  nextTick(() => {\n    initAttendanceChart();\n  });\n};\n\n// Add this new function to initialize the attendance chart\nconst initAttendanceChart = () => {\n  const ctx = attendanceChart.value;\n  if (!ctx) return;\n  \n  // Destroy previous chart if it exists\n  if (ctx._chart) {\n    ctx._chart.destroy();\n  }\n  \n  // Create attendance chart\n  ctx._chart = new Chart(ctx, {\n    type: 'doughnut',\n    data: {\n      labels: ['Present', 'Late', 'Absent'],\n      datasets: [{\n        data: [\n          attendanceCounts.value.present || 0, \n          attendanceCounts.value.late || 0, \n          attendanceCounts.value.absent || 0\n        ],\n        backgroundColor: ['#10b981', '#f59e0b', '#ef4444'],\n        borderWidth: 0,\n        hoverOffset: 4\n      }]\n    },\n    options: {\n      responsive: true,\n      maintainAspectRatio: false,\n      cutout: '70%',\n      plugins: {\n        legend: {\n          position: 'bottom',\n          labels: {\n            usePointStyle: true,\n            padding: 15,\n            font: {\n              size: 12\n            }\n          }\n        },\n        tooltip: {\n          callbacks: {\n            label: function(context) {\n              const label = context.label || '';\n              const value = context.raw || 0;\n              const total = context.chart.data.datasets[0].data.reduce((a, b) => a + b, 0);\n              const percentage = total > 0 ? Math.round((value / total) * 100) : 0;\n              return `${label}: ${value} (${percentage}%)`;\n            }\n          }\n        }\n      }\n    }\n  });\n};\n\n// Add clearFilters function\nconst clearFilters = () => {\nselectedYear.value = '';\nselectedSection.value = '';\nsearchQuery.value = '';\n};\n\nconst applyFilters = () => {\nfetchStudents();\n};\n\n// Function to handle adding a single student\nconst handleAddSingleStudent = async () => {\n  try {\n    isAddingStudent.value = true\n    \n    // Validate required fields\n    const requiredFields = ['studentId', 'firstName', 'middleName', 'lastName', 'email', 'contactNumber', 'year', 'section']\n    for (const field of requiredFields) {\n      if (!newStudent.value[field]) {\n        throw new Error(`${field.charAt(0).toUpperCase() + field.slice(1)} is required`)\n      }\n    }\n    \n    // Validate email format\n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/\n    if (!emailRegex.test(newStudent.value.email)) {\n      throw new Error('Please enter a valid email address')\n    }\n    \n    const token = store.state.auth.token\n    if (!token) {\n      throw new Error('No authentication token found')\n    }\n    \n    // Send request to add student\n    const response = await api.post('/students', {\n      ...newStudent.value,\n      // Calculate academic years based on current year and student's year level\n      academicYears: calculateAcademicYears(newStudent.value.year)\n    }, {\n      headers: {\n        'Authorization': `Bearer ${token}`\n      }\n    })\n    \n    console.log('Student added successfully:', response.data)\n    \n    // Reset form and close modal\n    resetNewStudentForm()\n    showAddSingleStudentModal.value = false\n    \n    // Refresh student list\n    await fetchStudents()\n    \n    alert('Student added successfully')\n  } catch (error) {\n    console.error('Failed to add student:', error)\n    alert('Error adding student: ' + (error.response?.data?.message || error.message))\n  } finally {\n    isAddingStudent.value = false\n  }\n}\n\n// Helper function to reset the new student form\nconst resetNewStudentForm = () => {\n  newStudent.value = {\n    studentId: '',\n    firstName: '',\n    middleName: '',\n    lastName: '',\n    email: '',\n    contactNumber: '',\n    year: '',\n    section: ''\n  }\n}\n\n// Helper function to calculate academic years\nconst calculateAcademicYears = (year) => {\n  const currentYear = new Date().getFullYear()\n  let startYear, endYear\n  \n  switch(year) {\n        case '1st':\n      startYear = currentYear\n      endYear = currentYear + 4\n      break\n        case '2nd':\n      startYear = currentYear - 1\n      endYear = currentYear + 3\n      break\n        case '3rd':\n      startYear = currentYear - 2\n      endYear = currentYear + 2\n      break\n        case '4th':\n      startYear = currentYear - 3\n      endYear = currentYear + 1\n      break\n        default:\n      startYear = currentYear\n      endYear = currentYear + 4\n  }\n  \n  return { startYear, endYear }\n}\n\n// Add fetchStudents function that was accidentally removed\nconst fetchStudents = async () => {\n  try {\n    const token = store.state.auth.token;\n    const response = await api.get('/students', {\n            headers: {\n        'Authorization': `Bearer ${token}`\n      }\n    });\n    students.value = response.data;\n    const response1 = await api.get('/students/assessments/all', {\n        headers: {\n            'Authorization': `Bearer ${token}`\n        }\n    });\n    assessments.value = response1.data?.assessments\n  } catch (error) {\n    console.error('Failed to fetch students:', error);\n    alert('Failed to fetch students. Please try again.');\n  }\n};\n\n// Function to fetch assessment data for a specific student\nconst fetchStudentAssessments = async () => {\n  if (!selectedStudent.value) return;\n  \n  isLoadingAssessments.value = true;\n  \n  try {\n    // Try to fetch from API first\n    const response = await api.get(`/students/assessments/all`, {\n      params: { studentId: selectedStudent.value.studentId },\n      headers: {\n        Authorization: `Bearer ${store.state.auth.token}`\n      }\n    });\n    \n    if (response.data && response.data.assessments) {\n      assessments.value = response.data.assessments;\n    } else {\n      // If no data or API call fails, use demo data\n      generateDemoAssessmentData();\n    }\n  } catch (error) {\n    console.error('Failed to fetch student assessments:', error);\n    // Generate demo data on failure\n    generateDemoAssessmentData();\n  } finally {\n    isLoadingAssessments.value = false;\n  }\n};\n\n// Generate demo assessment data\nconst generateDemoAssessmentData = () => {\n  // Create sample assessment data\n  const types = ['Quiz', 'Activity', 'Performance Task', 'Assignment'];\n  const subjects = ['Math', 'Science', 'English', 'History'];\n  \n  const demoData = [];\n  \n  // Generate 8 random assessments\n  for (let i = 0; i < 8; i++) {\n    const type = types[Math.floor(Math.random() * types.length)];\n    const subject = subjects[Math.floor(Math.random() * subjects.length)];\n    const maxScore = Math.floor(Math.random() * 40) + 10; // Random max score between 10-50\n    const studentScore = Math.floor(Math.random() * (maxScore * 0.8)) + Math.floor(maxScore * 0.2); // Between 20% and 100% of max\n    \n    // Create assessment object with student's score\n    const assessment = {\n      _id: `demo-${i}`,\n      type,\n      number: i + 1,\n      subject,\n      title: `${type} ${i + 1} (${subject})`,\n      maxScore,\n      date: new Date(Date.now() - (i * 7 * 24 * 60 * 60 * 1000)).toISOString(), // Spread over past weeks\n      scores: {}\n    };\n    \n    // Add student's score if they have an ID\n    if (selectedStudent.value && selectedStudent.value.studentId) {\n      assessment.scores[selectedStudent.value.studentId] = studentScore;\n    }\n    \n    demoData.push(assessment);\n  }\n  \n  assessments.value = demoData;\n};\n\n// New function to fetch attendance history\nconst fetchAttendanceHistory = async () => {\n  if (!selectedStudent.value) return;\n  \n  isLoadingAttendance.value = true;\n  \n  try {\n    const response = await api.get(`/attendance/${selectedStudent.value.studentId}/history`, {\n      params: {\n        startDate: attendanceFilter.value.startDate,\n        endDate: attendanceFilter.value.endDate,\n        section: selectedStudent.value.section,\n        year: selectedStudent.value.year,\n        all: true\n      },\n      headers: {\n        Authorization: `Bearer ${store.state.auth.token}`\n      }\n    });\n    \n    if (response.data && response.data.records && response.data.records.length > 0) {\n      attendanceHistory.value = response.data.records;\n      \n      // Count attendance statuses\n      attendanceCounts.value = {\n        present: 0,\n        late: 0,\n        absent: 0\n      };\n      \n      attendanceHistory.value.forEach(record => {\n        if (record.status in attendanceCounts.value) {\n          attendanceCounts.value[record.status]++;\n        }\n      });\n    } else {\n      // If no data, generate demo data\n      generateDemoAttendanceData();\n    }\n    \n    // Update chart on next DOM update\n    nextTick(() => {\n      initAttendanceChart();\n    });\n  } catch (error) {\n    console.error('Failed to fetch attendance history:', error);\n    // Generate demo data on error\n    generateDemoAttendanceData();\n    \n    // Update chart\n    nextTick(() => {\n      initAttendanceChart();\n    });\n  } finally {\n    isLoadingAttendance.value = false;\n  }\n};\n\n// Generate demo attendance data\nconst generateDemoAttendanceData = () => {\n  const statuses = ['present', 'late', 'absent'];\n  const subjects = ['Math', 'Science', 'English', 'History', 'Physical Education'];\n  \n  // Clear existing data\n  attendanceHistory.value = [];\n  attendanceCounts.value = {\n    present: 0,\n    late: 0,\n    absent: 0\n  };\n  \n  // Generate 20 days of attendance records\n  for (let i = 0; i < 20; i++) {\n    // Higher chance of present for better looking demo data\n    const randomStatus = Math.random();\n    let status;\n    if (randomStatus < 0.7) {\n      status = 'present';\n    } else if (randomStatus < 0.9) {\n      status = 'late';\n    } else {\n      status = 'absent';\n    }\n    \n    const subject = subjects[Math.floor(Math.random() * subjects.length)];\n    \n    // Create random date in the last 30 days\n    const date = new Date();\n    date.setDate(date.getDate() - Math.floor(Math.random() * 30));\n    \n    const record = {\n      _id: `demo-${i}`,\n      studentId: selectedStudent.value.studentId,\n      date: date.toISOString(),\n      subject,\n      status,\n      section: selectedStudent.value.section || 'Section A',\n      year: selectedStudent.value.year || '1st'\n    };\n    \n    // Add to history\n    attendanceHistory.value.push(record);\n    \n    // Update counts\n    if (status in attendanceCounts.value) {\n      attendanceCounts.value[status]++;\n    }\n  }\n  \n  // Sort by date (newest first)\n  attendanceHistory.value.sort((a, b) => new Date(b.date) - new Date(a.date));\n  \n  // Update the selectedStudent's attendanceHistory with the demo data\n  selectedStudent.value = {\n    ...selectedStudent.value,\n    attendanceHistory: {\n      records: attendanceHistory.value\n    }\n  };\n  \n  // Initialize chart after DOM update\n  nextTick(() => {\n    initAttendanceChart();\n  });\n};\n\n    return {\n      students,\n      searchQuery,\n      selectedStudent,\n      performanceChart,\n      attendanceChart,\n      sortField,\n      sortOrder,\n      showDeleteModal,\n      studentToDelete,\n      isEditing,\n      editingStudent,\n      showSearch,\nshowAddStudentModal,\nshowAddSingleStudentModal,\nselectedFile,\nuploadYear,\nisUploading,\navailableYears,\navailableSections,\nnewStudent,\nisAddingStudent,\nhandleFileChange,\nhandleFileUpload,\nhandleAddSingleStudent,\nresetNewStudentForm,\nfilteredStudents,\ncloseStudentModal,\nconfirmDelete,\ndeleteStudent,\nstartEditing,\ncancelEditing,\nsaveStudentChanges,\nsortBy,\ngetSortIcon,\nsortedStudents,\ntoggleSearch,\nhandleSearch,\nclearSearch,\nfetchStudents,\nhasActiveFilters,\nselectedYear,\nselectedSection,\nviewStudent,\ngetAcademicYearRange,\nclearFilters,\napplyFilters,\ncurrentPage,\ntotalPages,\npaginatedStudents,\npaginationInfo,\nnextPage,\npreviousPage,\nformatDate,\nassessments,\nattendanceCounts,\nattendanceHistory,\ninitAttendanceChart\n    }\n  }\n}\n</script>\n\n<style scoped>\n/* Base z-index hierarchy */\n:root {\n  --z-base: 1;\n  --z-table: 1010;\n  --z-controls: 1020;\n  --z-dropdown: 1030;\n  --z-modal-backdrop: 1040;\n  --z-modal: 1050;\n}\n\n.student-management {\n  padding: 20px;\nposition: relative;\n}\n\n/* Button container styles */\n.d-flex.gap-2.mb-3 {\nposition: static;\ntop: auto;\nright: auto;\nz-index: auto;\n}\n\n/* Modal Styles */\n.modal-wrapper {\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100vw;\n  height: 100vh;\n  display: flex;\n  align-items: center;\n  justify-content: center;\nz-index: 2000;\n}\n\n.modal-backdrop {\nposition: fixed;\ntop: 0;\nleft: 0;\nwidth: 100vw;\nheight: 100vh;\nbackground-color: rgba(0, 0, 0, 0.5);\nz-index: 9998;\n}\n\n.modal {\n  position: relative;\n  width: 100%;\nmax-width: 500px;\nmargin: 2rem;\nz-index: 2001;\nbackground: white;\nborder-radius: 12px;\nbox-shadow: 0 20px 25px -5px rgba(0, 0, 0, 0.1), 0 10px 10px -5px rgba(0, 0, 0, 0.04);\noverflow: hidden;\n}\n\n.modal-content {\n  position: relative;\n  width: 100%;\nbackground: white;\nborder-radius: 12px;\n  overflow: hidden;\n}\n\n.modal-header {\ndisplay: flex;\nalign-items: center;\njustify-content: space-between;\npadding: 1rem 1.5rem;\nborder-bottom: 1px solid #e2e8f0;\n}\n\n.modal-header.bg-primary {\nbackground-color: #003366 !important;\n}\n\n.btn-close-white {\nfilter: brightness(0) invert(1);\n}\n\n.modal-body {\n  padding: 1.5rem;\n}\n\n.form-label {\nfont-weight: 500;\ncolor: #2d3748;\nmargin-bottom: 0.5rem;\n}\n\n.form-select,\n.form-control {\nborder: 2px solid #e2e8f0;\nborder-radius: 8px;\npadding: 0.75rem;\nwidth: 100%;\ntransition: all 0.2s;\n}\n\n.form-select:focus,\n.form-control:focus {\nborder-color: #003366;\nbox-shadow: 0 0 0 2px rgba(0, 51, 102, 0.1);\n}\n\n.text-muted {\ncolor: #718096 !important;\n}\n\n.btn {\npadding: 0.75rem 1.5rem;\nfont-weight: 500;\nborder-radius: 8px;\ntransition: all 0.2s;\n}\n\n.btn-primary {\nbackground-color: #003366;\nborder: none;\n}\n\n.btn-primary:hover:not(:disabled) {\nbackground-color: #004080;\n}\n\n.btn-secondary {\nbackground-color: #e2e8f0;\nborder: none;\ncolor: #4a5568;\n}\n\n.btn-secondary:hover {\nbackground-color: #cbd5e1;\n}\n\n.btn:disabled {\nopacity: 0.7;\ncursor: not-allowed;\n}\n\n/* Table container styles */\n.table-container {\nmargin-top: 0;\n}\n\n/* Table Styles */\n.table-responsive {\n  position: relative;\n  z-index: 1010;\n  background: white;\n  border-radius: 12px;\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.05);\n  overflow: hidden;\n}\n\n.table {\n  margin-bottom: 0;\n}\n\n.table thead th {\n  position: sticky;\n  top: 0;\n  background: white;\n  z-index: 1011;\n  padding: 1rem;\n  font-weight: 600;\n  color: #4a5568;\n  border-bottom: 2px solid #e2e8f0;\n}\n\n/* Student Info Card */\n.student-info-card {\n  background: white;\n  border-radius: 12px;\n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.05);\n  margin-bottom: 1.5rem;\n}\n\n.student-info-header {\n  padding: 1rem 1.25rem;\n  background: #f8f9fa;\n  border-bottom: 1px solid #e9ecef;\n  font-weight: 600;\n  color: #2d3748;\n}\n\n.student-info-content {\n  padding: 1.25rem;\n}\n\n.info-grid {\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));\n  gap: 1.25rem;\n}\n\n.info-item {\n  display: flex;\n  flex-direction: column;\n  gap: 0.5rem;\n}\n\n.info-item label {\n  font-size: 0.875rem;\n  color: #718096;\n  font-weight: 500;\n}\n\n.info-item span {\n  color: #2d3748;\n  font-weight: 500;\n}\n\n/* Performance Card */\n.performance-card {\n  background: white;\n  border-radius: 12px;\n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.05);\n  margin-bottom: 1.5rem;\n}\n\n.performance-header {\n  padding: 1rem 1.25rem;\n  background: #f8f9fa;\n  border-bottom: 1px solid #e9ecef;\n  font-weight: 600;\n  color: #2d3748;\n  display: flex;\n  align-items: center;\n  gap: 0.75rem;\n}\n\n.performance-content {\n  padding: 1.25rem;\n}\n\n.chart-container {\n  background: white;\n  padding: 1.25rem;\n  border-radius: 8px;\n  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.05);\n}\n\n/* History Card */\n.history-card {\n  background: white;\n  border-radius: 12px;\n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.05);\n}\n\n.history-header {\n  padding: 1rem 1.25rem;\n  background: #003366;\n  color: white;\n  font-weight: 600;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  border-bottom: 1px solid rgba(255, 255, 255, 0.1);\n}\n\n.history-content {\n  padding: 1.25rem;\n}\n\n/* Dropdown Styles */\n.dropdown {\n  position: relative;\n  z-index: 1030;\n}\n\n.dropdown-menu {\n  position: absolute;\n  z-index: 1031;\n  min-width: 200px;\n  background: white;\n  border-radius: 12px;\n  box-shadow: 0 4px 20px rgba(0, 0, 0, 0.15);\n  border: none;\n  padding: 0.5rem 0;\n  margin-top: 0.5rem;\n}\n\n.dropdown-menu.show {\n  display: block !important;\n}\n\n/* Button Styles */\n.btn-control {\n  height: 38px;\n  background: #f8fafc;\n  border: 1px solid #e2e8f0;\n  color: #4a5568;\n  font-size: 0.9rem;\n  padding: 0.5rem 1rem;\n  display: flex;\n  align-items: center;\n  gap: 0.5rem;\n  border-radius: 8px;\n  transition: all 0.2s ease;\n}\n\n.btn-control:hover,\n.btn-control:focus {\n  background: #f1f5f9;\n  border-color: #cbd5e1;\n  color: #2d3748;\n}\n\n/* Search Control */\n.search-control {\n  position: relative;\n  z-index: var(--z-controls);\n  width: 300px;\n}\n\n.search-control .input-group {\n  border-radius: 8px;\n  overflow: hidden;\n  box-shadow: 0 1px 3px rgba(0,0,0,0.05);\n}\n\n.search-control .input-group-text {\n  background: white;\n  border: 1px solid #e2e8f0;\n  color: #718096;\n  padding-right: 0;\n}\n\n.search-control .form-control {\n  border: 1px solid #e2e8f0;\n  padding: 0.5rem 0.75rem;\n  font-size: 0.9rem;\n}\n\n/* Filter Badge */\n.filter-badge {\n  position: absolute;\n  top: -6px;\n  right: -6px;\n  background: #e53e3e;\n  color: white;\n  width: 18px;\n  height: 18px;\n  border-radius: 50%;\n  font-size: 0.7rem;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  border: 2px solid white;\n}\n\n/* Table styles */\n.table {\n  margin-bottom: 0;\n  background: white;\n}\n\n.table thead th {\n  position: sticky;\n  top: 0;\n  background: white;\n  z-index: calc(var(--z-table) + 1);\n  padding: 1rem;\n  font-weight: 600;\n  color: #4a5568;\n  border-bottom: 2px solid #e2e8f0;\n}\n\n/* Search control */\n.search-control {\n  position: relative;\n  z-index: var(--z-controls);\n}\n\n/* Controls wrapper */\n.controls-wrapper {\n  position: relative;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  gap: 1rem;\n}\n\n.controls-left {\n  display: flex;\n  align-items: center;\n  gap: 0.75rem;\n  z-index: var(--z-controls);\n}\n\n.btn-light {\n  background: #f8fafc;\n  border: 1px solid #e2e8f0;\n  color: #4a5568;\n}\n\n.btn-light:hover {\n  background: #f1f5f9;\n  border-color: #cbd5e1;\n  color: #2d3748;\n}\n\n.btn-primary {\n  background: #4299e1;\n  border: none;\n  color: white;\n}\n\n.btn-primary:hover {\n  background: #3182ce;\n}\n\n.student-info p {\n  margin-bottom: 0.75rem;\n  padding-bottom: 0.75rem;\n  border-bottom: 1px solid #eee;\n}\n\n.student-info p:last-child {\n  border-bottom: none;\n}\n\n.student-info strong {\n  color: #666;\n  display: inline-block;\n  width: 100px;\n}\n\n.empty-state-message {\n  padding: 2rem 0;\n}\n\n.empty-state-message i {\n  font-size: 2rem;\n  display: block;\n  margin-bottom: 0.5rem;\n}\n\n.empty-state-message p {\n  margin: 0;\n  color: #6c757d;\n}\n\n.clickable-row {\n  cursor: pointer;\n  transition: background-color 0.2s ease;\n}\n\n.clickable-row:hover {\n  background-color: rgba(0, 51, 102, 0.05) !important;\n}\n\n.student-info-card,\n.performance-card,\n.history-card {\n  background: white;\n  border-radius: 10px;\n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);\n  overflow: hidden;\n}\n\n.student-info-header,\n.performance-header,\n.history-header {\n  background-color: #f8f9fa;\n  padding: 1rem;\n  font-weight: 600;\n  color: #2c3e50;\n  border-bottom: 1px solid #eee;\n  display: flex;\n  align-items: center;\n}\n\n.student-info-content,\n.performance-content,\n.history-content {\n  padding: 1.5rem;\n}\n\n.info-grid {\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));\n  gap: 1.5rem;\n  padding: 1rem;\n}\n\n.info-item {\n  display: flex;\n  flex-direction: column;\n}\n\n.info-item label {\n  font-weight: 600;\n  color: #666;\n  margin-bottom: 0.25rem;\n}\n\n.info-item span {\n  color: #333;\n}\n\n.chart-container {\n  background: white;\n  padding: 1rem;\n  border-radius: 8px;\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.05);\n}\n\n.badge {\nfont-size: 1rem;\npadding: 0.5em 1em;\n}\n\n.badge-quiz {\n  background-color: #4e73df;\n  color: white;\n}\n\n.badge-activity {\n  background-color: #1cc88a;\n  color: white;\n}\n\n.badge-performance {\n  background-color: #f6c23e;\n  color: white;\n}\n\n.score-excellent {\n  color: #1cc88a;\n  font-weight: 600;\n}\n\n.score-good {\n  color: #4e73df;\n  font-weight: 600;\n}\n\n.score-average {\n  color: #f6c23e;\n  font-weight: 600;\n}\n\n.score-poor {\n  color: #e74a3b;\n  font-weight: 600;\n}\n\n.modal-header.bg-primary {\n  background-color: #003366 !important;\n}\n\n.btn-close-white {\n  filter: brightness(0) invert(1);\n}\n\n.date-filter .form-control {\n  background-color: rgba(255, 255, 255, 0.1);\n  border: 1px solid rgba(255, 255, 255, 0.2);\n  color: white;\n  width: 150px;\n}\n\n.date-filter .form-control::-webkit-calendar-picker-indicator {\n  filter: invert(1);\n}\n\n.date-filter .form-control:focus {\n  background-color: rgba(255, 255, 255, 0.2);\n  border-color: rgba(255, 255, 255, 0.3);\n  color: white;\n}\n\n.date-filter span {\n  padding: 0 0.5rem;\n}\n\n.date-input-container {\n  position: relative;\n  display: inline-block;\n}\n\n.date-picker-dropdown {\n  position: absolute;\n  top: 100%;\n  left: 0;\n  margin-top: 4px;\n  background: white;\n  border-radius: 8px;\n  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);\n  padding: 12px;\n  min-width: 250px;\n}\n\n.date-picker-header {\n  display: flex;\n  justify-content: flex-end;\n  margin-bottom: 8px;\n}\n\n.close-btn {\n  background: none;\n  border: none;\n  color: #666;\n  cursor: pointer;\n  padding: 4px;\n  font-size: 14px;\n}\n\n.close-btn:hover {\n  color: #333;\n}\n\n.date-picker-input {\n  width: 100%;\n  padding: 8px;\n  border: 1px solid #ddd;\n  border-radius: 4px;\n  font-size: 14px;\n}\n\n.date-picker-input::-webkit-calendar-picker-indicator {\n  cursor: pointer;\n  padding: 4px;\n}\n\n.date-filter .form-control {\n  background-color: rgba(255, 255, 255, 0.1);\n  border: 1px solid rgba(255, 255, 255, 0.2);\n  color: white;\n  width: 150px;\n  cursor: pointer;\n}\n\n.date-filter .form-control:hover {\n  background-color: rgba(255, 255, 255, 0.2);\n}\n\n.date-filter span {\n  padding: 0 0.5rem;\n  color: white;\n}\n\n.history-card {\n  position: relative;\n  overflow: visible !important;\n}\n\n.history-header {\n  position: relative;\n  overflow: visible;\n}\n\n.table {\n  width: 100%;\n  margin-bottom: 0;\n  border-collapse: collapse;\n}\n\n.table th {\n  position: sticky;\n  top: 0;\n  background: white;\n  z-index: 10;\n  padding: 1rem;\n  font-weight: 600;\n  color: #4a5568;\n  border-bottom: 2px solid #e2e8f0;\n}\n\n.table td {\n  padding: 1rem;\n  vertical-align: middle;\n  border-bottom: 1px solid #e2e8f0;\n}\n\n.table tbody tr:hover {\n  background-color: #f8f9fa;\n}\n\n.btn {\n  padding: 0.5rem 1rem;\n  border-radius: 8px;\n  font-weight: 500;\n  display: inline-flex;\n  align-items: center;\n  justify-content: center;\n  gap: 0.5rem;\n}\n\n.btn i {\n  font-size: 0.875rem;\n}\n\n.form-control,\n.form-select {\n  border: 2px solid #eee;\n  border-radius: 8px;\n  padding: 0.75rem;\n  transition: all 0.3s;\n}\n\n.form-control:focus,\n.form-select:focus {\n  border-color: var(--primary-color);\n  box-shadow: 0 0 0 0.2rem rgba(0, 51, 102, 0.15);\n}\n\n/* Table Controls */\n.table-controls {\n  position: relative;\n  z-index: 1030;\n  background: white;\n  padding: 1rem;\n  border-radius: 12px;\n  box-shadow: 0 2px 4px rgba(0,0,0,0.05);\n  margin-bottom: 1rem;\n}\n\n.dropdown {\n  position: relative;\n}\n\n.dropdown-menu {\n  position: absolute;\n  z-index: 1031;\n  min-width: 200px;\n  background: white;\n  border-radius: 12px;\n  box-shadow: 0 4px 20px rgba(0, 0, 0, 0.15);\n  border: none;\n  padding: 0.5rem 0;\n  margin-top: 0.5rem;\n}\n\n.dropdown-menu.show {\n  display: block !important;\n}\n\n/* Modal Styles */\n.modal-dialog {\n  max-width: 900px;\n  margin: 1.75rem auto;\n}\n\n.modal-content {\n  background: white;\n  border-radius: 16px;\n  box-shadow: 0 20px 25px -5px rgba(0, 0, 0, 0.1), 0 10px 10px -5px rgba(0, 0, 0, 0.04);\n  border: 1px solid rgba(255, 255, 255, 0.1);\n  overflow: hidden;\n}\n\n.modal-header {\n  background: #003366;\n  color: white;\n  padding: 1.25rem 1.5rem;\n  border-bottom: 1px solid rgba(255, 255, 255, 0.1);\n}\n\n.modal-header .modal-title {\n  font-size: 1.25rem;\n  font-weight: 600;\n  margin: 0;\n}\n\n.modal-body {\n  padding: 1.5rem;\n}\n\n/* Student Details Layout */\n.student-details {\n  display: grid;\n  grid-template-columns: 350px 1fr;\n  gap: 2rem;\nmax-height: calc(90vh - 4rem);\noverflow-y: auto;\n}\n\n.student-info {\n  background: #f8fafc;\n  padding: 1.5rem;\n  border-radius: 12px;\n  height: fit-content;\n}\n\n.info-title {\n  color: #2d3748;\n  font-size: 1.1rem;\n  font-weight: 600;\n  margin-bottom: 1.5rem;\n  padding-bottom: 0.75rem;\n  border-bottom: 2px solid #e2e8f0;\n}\n\n.info-content p {\n  margin-bottom: 1rem;\n  padding-bottom: 0.75rem;\n  border-bottom: 1px solid #e2e8f0;\n  font-size: 1rem;\n}\n\n.info-content p:last-child {\n  margin-bottom: 0;\n  padding-bottom: 0;\n  border-bottom: none;\n}\n\n.info-content strong {\n  color: #4a5568;\n  display: inline-block;\n  width: 120px;\n  font-weight: 600;\n}\n\n.student-charts {\n  display: grid;\n  grid-template-rows: 1fr 1fr;\n  gap: 1.5rem;\n}\n\n.chart-section {\n  background: white;\n  border-radius: 12px;\n  padding: 1.5rem;\n  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);\n}\n\n.chart-section h6 {\n  color: #2d3748;\n  font-size: 1.1rem;\n  font-weight: 600;\n  margin-bottom: 1.5rem;\n  padding-bottom: 0.75rem;\n  border-bottom: 2px solid #e2e8f0;\n}\n\n/* Table Styles */\n.table-responsive {\n  position: relative;\n  z-index: 1020;\n  background: white;\n  border-radius: 12px;\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.05);\n  overflow: hidden;\n}\n\n/* Update existing styles */\n.table-container {\n  background: white;\n  border-radius: 12px;\n  box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06);\n  overflow: hidden;\n}\n\n.table-controls {\n  background: #f8fafc;\n  padding: 1rem;\n  border-bottom: 1px solid #e2e8f0;\n}\n\n.modal-dialog.modal-xxl {\nmax-width: 90%;\nwidth: 1400px;\nmargin: 2rem auto;\n}\n\n.student-details {\n  display: grid;\ngrid-template-columns: 350px 1fr;\n  gap: 2rem;\nmax-height: calc(90vh - 4rem);\noverflow-y: auto;\n}\n\n.student-info {\n  background: #f8fafc;\n  padding: 2rem;\n  border-radius: 12px;\n  height: fit-content;\n}\n\n.info-title {\n  color: #2d3748;\n  font-size: 1.4rem;\n  font-weight: 600;\n  margin-bottom: 2rem;\n  padding-bottom: 1rem;\n  border-bottom: 2px solid #e2e8f0;\n}\n\n.info-content p {\n  margin-bottom: 1.25rem;\n  padding-bottom: 1.25rem;\n  border-bottom: 1px solid #e2e8f0;\n  font-size: 1.2rem;\n  line-height: 1.5;\n}\n\n.info-content strong {\n  color: #4a5568;\n  display: inline-block;\n  width: 160px;\n  font-weight: 600;\n}\n\n.chart-section {\n  background: white;\n  border-radius: 12px;\n  padding: 2rem;\n  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);\n}\n\n.chart-section h6 {\n  color: #2d3748;\n  font-size: 1.4rem;\n  font-weight: 600;\n  margin-bottom: 2rem;\n  padding-bottom: 1rem;\n  border-bottom: 2px solid #e2e8f0;\n}\n\n.attendance-table {\n  margin-top: 1rem;\n  font-size: 1.1rem;\n}\n\n.attendance-table th {\n  font-size: 1.1rem;\n  font-weight: 600;\n  color: #2d3748;\n}\n\n.attendance-table td {\n  font-size: 1.1rem;\n  color: #4a5568;\n}\n\n.badge {\n  font-size: 1rem;\n  padding: 0.5em 1em;\n}\n\n/* Fix z-index issues */\n.modal-wrapper {\n  z-index: 9999 !important;\n}\n\n.modal-backdrop {\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100vw;\n  height: 100vh;\n  background-color: rgba(0, 0, 0, 0.5);\n  z-index: 9998;\n  backdrop-filter: blur(4px);\n}\n\n.modal-dialog {\n  z-index: 9999 !important;\n}\n\n.table-controls {\n  position: relative;\n  z-index: 1020;\n}\n\n.dropdown-menu {\n  z-index: 1030;\n}\n\n.table-responsive {\n  position: relative;\n  z-index: 1010;\n}\n\n/* Ensure dropdowns are hidden when modal is open */\n.modal-wrapper ~ .table-controls .dropdown-menu {\n  display: none !important;\n}\n\n/* Timeline Styles */\n.timeline {\n  position: relative;\n  padding: 1rem 0;\n}\n\n.timeline::before {\n  content: '';\n  position: absolute;\n  top: 0;\n  left: 1rem;\n  height: 100%;\n  width: 2px;\n  background: #e2e8f0;\n}\n\n.timeline-item {\n  position: relative;\n  padding-left: 2.5rem;\n  padding-bottom: 2rem;\n}\n\n.timeline-item:last-child {\n  padding-bottom: 0;\n}\n\n.timeline-marker {\n  position: absolute;\n  left: 0;\n  width: 24px;\n  height: 24px;\n  border-radius: 50%;\n  background: #e2e8f0;\n  border: 4px solid #fff;\n  box-shadow: 0 0 0 2px #e2e8f0;\n  z-index: 1;\n}\n\n.timeline-content {\n  background: white;\n  padding: 1rem;\n  border-radius: 8px;\n  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);\n}\n\n.timeline-content h6 {\n  margin: 0;\n  font-size: 1.1rem;\n  color: #2d3748;\n}\n\n.timeline-status {\n  margin: 0.5rem 0 0;\n  font-size: 0.95rem;\n  color: #718096;\n}\n\n.timeline-item.completed .timeline-marker {\n  background: #003366;\n  box-shadow: 0 0 0 2px #003366;\n}\n\n.timeline-item.completed .timeline-content {\n  border-left: 3px solid #003366;\n}\n\n.timeline-item.completed .timeline-status {\n  color: #003366;\n  font-weight: 500;\n}\n\n.timeline-item.current .timeline-marker {\n  background: #4299e1;\n  box-shadow: 0 0 0 2px #4299e1;\n}\n\n.timeline-item.current .timeline-content {\n  border-left: 3px solid #4299e1;\n  background: #ebf8ff;\n}\n\n.timeline-item.current .timeline-status {\n  color: #4299e1;\n  font-weight: 500;\n}\n\n/* Add Student Modal Styles */\n.add-student-modal {\nposition: fixed;\ntop: 0;\nleft: 0;\nwidth: 100%;\nheight: 100%;\ndisplay: flex;\nalign-items: center;\njustify-content: center;\nz-index: 9999;\n}\n\n.add-student-backdrop {\nposition: fixed;\ntop: 0;\nleft: 0;\nwidth: 100%;\nheight: 100%;\nbackground-color: rgba(0, 0, 0, 0.5);\nz-index: 9998;\n}\n\n.add-student-dialog {\nposition: relative;\nwidth: 100%;\nmax-width: 500px;\nmargin: 1.75rem;\nz-index: 10000;\n}\n\n.add-student-content {\nposition: relative;\ndisplay: flex;\nflex-direction: column;\nbackground-color: #fff;\nborder-radius: 12px;\nbox-shadow: 0 20px 25px -5px rgba(0, 0, 0, 0.1), 0 10px 10px -5px rgba(0, 0, 0, 0.04);\noverflow: hidden;\n}\n\n.modal-header {\ndisplay: flex;\nalign-items: center;\njustify-content: space-between;\npadding: 1rem 1.5rem;\n}\n\n.modal-header.bg-primary {\nbackground-color: #003366 !important;\n}\n\n.modal-body {\npadding: 1.5rem;\n}\n\n.btn-close-white {\nfilter: brightness(0) invert(1);\n}\n\n/* Form Styles */\n.form-label {\nfont-weight: 500;\ncolor: #2d3748;\nmargin-bottom: 0.5rem;\n}\n\n.form-select,\n.form-control {\nborder: 2px solid #e2e8f0;\nborder-radius: 8px;\npadding: 0.75rem;\nwidth: 100%;\ntransition: all 0.2s;\n}\n\n.form-select:focus,\n.form-control:focus {\nborder-color: #003366;\nbox-shadow: 0 0 0 2px rgba(0, 51, 102, 0.1);\n}\n\n.text-muted {\ncolor: #718096 !important;\n}\n\n.btn {\npadding: 0.75rem 1.5rem;\nfont-weight: 500;\nborder-radius: 8px;\ntransition: all 0.2s;\n}\n\n.btn-primary {\nbackground-color: #003366;\nborder: none;\n}\n\n.btn-primary:hover:not(:disabled) {\nbackground-color: #004080;\n}\n\n.btn-secondary {\nbackground-color: #e2e8f0;\nborder: none;\ncolor: #4a5568;\n}\n\n.btn-secondary:hover {\nbackground-color: #cbd5e1;\n}\n\n.btn:disabled {\nopacity: 0.7;\ncursor: not-allowed;\n}\n\n/* Add CSS styles for the success button and modal */\n.btn-success {\n  background-color: #10B981;\n  border: none;\n  color: white;\n}\n\n.btn-success:hover:not(:disabled) {\n  background-color: #059669;\n}\n\n.modal-header.bg-success {\n  background-color: #10B981 !important;\n}\n\n/* Form validation styles */\n.form-control.is-invalid,\n.form-select.is-invalid {\n  border-color: #dc3545;\n  background-image: url(\"data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 12 12' width='12' height='12' fill='none' stroke='%23dc3545'%3e%3ccircle cx='6' cy='6' r='4.5'/%3e%3cpath stroke-linejoin='round' d='M5.8 3.6h.4L6 6.5z'/%3e%3ccircle cx='6' cy='8.2' r='.6' fill='%23dc3545' stroke='none'/%3e%3c/svg%3e\");\n  background-repeat: no-repeat;\n  background-position: right calc(0.375em + 0.1875rem) center;\n  background-size: calc(0.75em + 0.375rem) calc(0.75em + 0.375rem);\n}\n\n.invalid-feedback {\n  display: block;\n  width: 100%;\n  margin-top: 0.25rem;\n  font-size: 0.875em;\n  color: #dc3545;\n}\n\n/* Add sticky controls styles */\n.sticky-controls {\n  position: sticky;\n  top: 0;\n  background: white;\n  padding: 1rem;\n  z-index: 1040;\n  border-bottom: 1px solid #e2e8f0;\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.05);\n}\n\n/* Add pagination styles */\n.pagination-controls {\n  background: white;\n  padding: 1rem;\n  border-top: 1px solid #e2e8f0;\n}\n\n.pagination-info {\n  color: #4a5568;\n  font-size: 0.9rem;\n}\n\n.pagination-buttons .btn {\n  min-width: 100px;\n}\n\n/* Update table styles for fixed height */\n.table-responsive {\n  max-height: calc(100vh - 250px);\n  overflow-y: auto;\n}\n\n/* Ensure sticky header stays in place */\n.table thead th {\n  position: sticky;\n  top: 0;\n  background: white;\n  z-index: 1020;\n}\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}