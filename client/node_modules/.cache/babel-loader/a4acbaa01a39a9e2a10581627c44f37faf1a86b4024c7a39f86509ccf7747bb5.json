{"ast":null,"code":"import \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.map.js\";\nimport axios from 'axios';\nimport { Chart as ChartJS, Title, Tooltip, Legend, BarElement, CategoryScale, LinearScale } from 'chart.js';\nimport { onMounted, onUnmounted, ref } from 'vue';\nimport { Bar } from 'vue-chartjs';\n\n// Create axios instance with correct base URL\n\nexport default {\n  __name: 'AllSurveyStat',\n  props: {\n    _id: String,\n    surveyForm: Array\n  },\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const api = axios.create({\n      baseURL: 'http://localhost:8081/api',\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n    const props = __props;\n    const mySurvey = ref([]);\n    const data = ref({});\n    ChartJS.register(CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend);\n    onUnmounted(() => {\n      mySurvey.value = [];\n      data.value = {};\n    });\n    onMounted(async () => {\n      const surveyResponse = await api.get(`/survey/stats/all`);\n      mySurvey.value = surveyResponse.data;\n      data.value = {\n        labels: mySurvey.value?.map(s => s.type + ' Problem') || 'Not available',\n        datasets: [{\n          label: 'Average Score Survey',\n          backgroundColor: '#f87979',\n          data: mySurvey.value?.map(s => s.average) || []\n        }]\n      };\n    });\n    const options = ref({\n      //   responsive: true ,\n      //   maintainAspectRatio: false\n    });\n    const __returned__ = {\n      api,\n      props,\n      mySurvey,\n      data,\n      options,\n      get axios() {\n        return axios;\n      },\n      get ChartJS() {\n        return ChartJS;\n      },\n      get Title() {\n        return Title;\n      },\n      get Tooltip() {\n        return Tooltip;\n      },\n      get Legend() {\n        return Legend;\n      },\n      get BarElement() {\n        return BarElement;\n      },\n      get CategoryScale() {\n        return CategoryScale;\n      },\n      get LinearScale() {\n        return LinearScale;\n      },\n      onMounted,\n      onUnmounted,\n      ref,\n      get Bar() {\n        return Bar;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["axios","Chart","ChartJS","Title","Tooltip","Legend","BarElement","CategoryScale","LinearScale","onMounted","onUnmounted","ref","Bar","api","create","baseURL","headers","props","__props","mySurvey","data","register","value","surveyResponse","get","labels","map","s","type","datasets","label","backgroundColor","average","options"],"sources":["D:/au_dev/client/src/components/AllSurveyStat.vue"],"sourcesContent":["<template>\n    <div v-if=\"mySurvey.length\">\n        <Bar :data=\"data\" :options=\"options\" />\n    </div>\n    <div  v-else>\n        <h4>No data available!</h4>\n    </div>\n</template>\n\n<script setup>\nimport axios from 'axios';\nimport {\n    Chart as ChartJS,\n    Title,\n    Tooltip,\n    Legend,\n    BarElement,\n    CategoryScale,\n    LinearScale\n} from 'chart.js'\nimport { onMounted, onUnmounted, ref } from 'vue'\nimport { Bar } from 'vue-chartjs'\n\n// Create axios instance with correct base URL\nconst api = axios.create({\n    baseURL: 'http://localhost:8081/api',\n    headers: {\n        'Content-Type': 'application/json'\n    }\n});\n\nconst props = defineProps({\n    _id: String,\n    surveyForm : Array\n})\nconst mySurvey = ref([]);\nconst data = ref({})\n\nChartJS.register(CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend)\nonUnmounted(() => {\n    mySurvey.value = [];\n    data.value = {};\n})\nonMounted(async () => {\n    const surveyResponse = await api.get(`/survey/stats/all`)\n    \n    mySurvey.value = surveyResponse.data;\n    data.value = {\n        labels: mySurvey.value?.map(s => s.type + ' Problem') || 'Not available',\n        datasets: [\n            {\n                label: 'Average Score Survey',\n                backgroundColor: '#f87979',\n                data: mySurvey.value?.map(s => s.average) || []\n            },\n        ]\n    }\n})\n\n\nconst options = ref({\n    //   responsive: true ,\n    //   maintainAspectRatio: false\n})\n\n</script>"],"mappings":";;AAUA,OAAOA,KAAK,MAAM,OAAO;AACzB,SACIC,KAAK,IAAIC,OAAO,EAChBC,KAAK,EACLC,OAAO,EACPC,MAAM,EACNC,UAAU,EACVC,aAAa,EACbC,WAAU,QACP,UAAS;AAChB,SAASC,SAAS,EAAEC,WAAW,EAAEC,GAAG,QAAQ,KAAI;AAChD,SAASC,GAAG,QAAQ,aAAY;;AAEhC;;;;;;;;;;;;IACA,MAAMC,GAAG,GAAGb,KAAK,CAACc,MAAM,CAAC;MACrBC,OAAO,EAAE,2BAA2B;MACpCC,OAAO,EAAE;QACL,cAAc,EAAE;MACpB;IACJ,CAAC,CAAC;IAEF,MAAMC,KAAK,GAAGC,OAAA;IAId,MAAMC,QAAQ,GAAGR,GAAG,CAAC,EAAE,CAAC;IACxB,MAAMS,IAAI,GAAGT,GAAG,CAAC,CAAC,CAAC;IAEnBT,OAAO,CAACmB,QAAQ,CAACd,aAAa,EAAEC,WAAW,EAAEF,UAAU,EAAEH,KAAK,EAAEC,OAAO,EAAEC,MAAM;IAC/EK,WAAW,CAAC,MAAM;MACdS,QAAQ,CAACG,KAAK,GAAG,EAAE;MACnBF,IAAI,CAACE,KAAK,GAAG,CAAC,CAAC;IACnB,CAAC;IACDb,SAAS,CAAC,YAAY;MAClB,MAAMc,cAAc,GAAG,MAAMV,GAAG,CAACW,GAAG,CAAC,mBAAmB;MAExDL,QAAQ,CAACG,KAAK,GAAGC,cAAc,CAACH,IAAI;MACpCA,IAAI,CAACE,KAAK,GAAG;QACTG,MAAM,EAAEN,QAAQ,CAACG,KAAK,EAAEI,GAAG,CAACC,CAAC,IAAIA,CAAC,CAACC,IAAI,GAAG,UAAU,CAAC,IAAI,eAAe;QACxEC,QAAQ,EAAE,CACN;UACIC,KAAK,EAAE,sBAAsB;UAC7BC,eAAe,EAAE,SAAS;UAC1BX,IAAI,EAAED,QAAQ,CAACG,KAAK,EAAEI,GAAG,CAACC,CAAC,IAAIA,CAAC,CAACK,OAAO,CAAC,IAAI;QACjD,CAAC;MAET;IACJ,CAAC;IAGD,MAAMC,OAAO,GAAGtB,GAAG,CAAC;MAChB;MACA;IAAA,CACH","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}